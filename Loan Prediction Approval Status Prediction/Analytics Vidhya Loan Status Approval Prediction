{
 "cells": [
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# Analytics Vidhya Loan Approval Status Prediction Competition"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# Problem\n",
    "\n",
    "Dream Housing Finance company deals in all home loans. They have presence across all urban, semi urban and rural areas. Customer first apply for home loan after that company validates the customer eligibility for loan.\n",
    "\n",
    "Company wants to automate the loan eligibility process (real time) based on customer detail provided while filling online application form. These details are Gender, Marital Status, Education, Number of Dependents, Income, Loan Amount, Credit History and others. To automate this process, they have given a problem to identify the customers segments, those are eligible for loan amount so that they can specifically target these customers. Here they have provided a partial data set."
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# Data\n",
    "\n",
    "- Variable: Description\n",
    "- Loan_ID: Unique Loan ID\n",
    "- Gender: Male/ Female\n",
    "- Married: Applicant married (Y/N)\n",
    "- Dependents: Number of dependents\n",
    "- Education: Applicant Education (Graduate/ Under Graduate)\n",
    "- Self_Employed: Self employed (Y/N)\n",
    "- Applicant Income: Applicant income\n",
    "- Coapplicant Income: Coapplicant income\n",
    "- LoanAmount: Loan amount in thousands\n",
    "- Loan_Amount_Term: Term of loan in months\n",
    "- Credit_History: credit history meets guidelines\n",
    "- Property_Area: Urban/ Semi Urban/ Rural\n",
    "- Loan_Status: Loan approved (Y/N)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## Loading Data"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 1,
   "metadata": {
    "collapsed": true
   },
   "outputs": [],
   "source": [
    "import pandas as pd\n",
    "import numpy as np\n",
    "\n",
    "import matplotlib\n",
    "import matplotlib.pyplot as plt\n",
    "import seaborn as sns\n",
    "%matplotlib inline\n",
    "\n",
    "from sklearn.preprocessing import LabelEncoder, StandardScaler\n",
    "from sklearn.model_selection import train_test_split\n",
    "from sklearn.linear_model import LogisticRegression\n",
    "from sklearn.ensemble import RandomForestClassifier\n",
    "from sklearn.tree import DecisionTreeClassifier\n",
    "from sklearn.metrics import confusion_matrix, classification_report, accuracy_score\n",
    "from sklearn.model_selection import cross_val_score\n",
    "from sklearn.ensemble import GradientBoostingClassifier\n",
    "from sklearn.svm import SVC\n",
    "from sklearn.neural_network import MLPClassifier\n",
    "from sklearn.linear_model import Perceptron"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style>\n",
       "    .dataframe thead tr:only-child th {\n",
       "        text-align: right;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: left;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Loan_ID</th>\n",
       "      <th>Gender</th>\n",
       "      <th>Married</th>\n",
       "      <th>Dependents</th>\n",
       "      <th>Education</th>\n",
       "      <th>Self_Employed</th>\n",
       "      <th>ApplicantIncome</th>\n",
       "      <th>CoapplicantIncome</th>\n",
       "      <th>LoanAmount</th>\n",
       "      <th>Loan_Amount_Term</th>\n",
       "      <th>Credit_History</th>\n",
       "      <th>Property_Area</th>\n",
       "      <th>Loan_Status</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>LP001002</td>\n",
       "      <td>Male</td>\n",
       "      <td>No</td>\n",
       "      <td>0</td>\n",
       "      <td>Graduate</td>\n",
       "      <td>No</td>\n",
       "      <td>5849</td>\n",
       "      <td>0.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>360.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>Urban</td>\n",
       "      <td>Y</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>LP001003</td>\n",
       "      <td>Male</td>\n",
       "      <td>Yes</td>\n",
       "      <td>1</td>\n",
       "      <td>Graduate</td>\n",
       "      <td>No</td>\n",
       "      <td>4583</td>\n",
       "      <td>1508.0</td>\n",
       "      <td>128.0</td>\n",
       "      <td>360.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>Rural</td>\n",
       "      <td>N</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>LP001005</td>\n",
       "      <td>Male</td>\n",
       "      <td>Yes</td>\n",
       "      <td>0</td>\n",
       "      <td>Graduate</td>\n",
       "      <td>Yes</td>\n",
       "      <td>3000</td>\n",
       "      <td>0.0</td>\n",
       "      <td>66.0</td>\n",
       "      <td>360.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>Urban</td>\n",
       "      <td>Y</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>LP001006</td>\n",
       "      <td>Male</td>\n",
       "      <td>Yes</td>\n",
       "      <td>0</td>\n",
       "      <td>Not Graduate</td>\n",
       "      <td>No</td>\n",
       "      <td>2583</td>\n",
       "      <td>2358.0</td>\n",
       "      <td>120.0</td>\n",
       "      <td>360.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>Urban</td>\n",
       "      <td>Y</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>LP001008</td>\n",
       "      <td>Male</td>\n",
       "      <td>No</td>\n",
       "      <td>0</td>\n",
       "      <td>Graduate</td>\n",
       "      <td>No</td>\n",
       "      <td>6000</td>\n",
       "      <td>0.0</td>\n",
       "      <td>141.0</td>\n",
       "      <td>360.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>Urban</td>\n",
       "      <td>Y</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "    Loan_ID Gender Married Dependents     Education Self_Employed  \\\n",
       "0  LP001002   Male      No          0      Graduate            No   \n",
       "1  LP001003   Male     Yes          1      Graduate            No   \n",
       "2  LP001005   Male     Yes          0      Graduate           Yes   \n",
       "3  LP001006   Male     Yes          0  Not Graduate            No   \n",
       "4  LP001008   Male      No          0      Graduate            No   \n",
       "\n",
       "   ApplicantIncome  CoapplicantIncome  LoanAmount  Loan_Amount_Term  \\\n",
       "0             5849                0.0         NaN             360.0   \n",
       "1             4583             1508.0       128.0             360.0   \n",
       "2             3000                0.0        66.0             360.0   \n",
       "3             2583             2358.0       120.0             360.0   \n",
       "4             6000                0.0       141.0             360.0   \n",
       "\n",
       "   Credit_History Property_Area Loan_Status  \n",
       "0             1.0         Urban           Y  \n",
       "1             1.0         Rural           N  \n",
       "2             1.0         Urban           Y  \n",
       "3             1.0         Urban           Y  \n",
       "4             1.0         Urban           Y  "
      ]
     },
     "execution_count": 2,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df = pd.read_csv('loan_train.csv')\n",
    "\n",
    "df.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "metadata": {
    "scrolled": false
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "<class 'pandas.core.frame.DataFrame'>\n",
      "RangeIndex: 614 entries, 0 to 613\n",
      "Data columns (total 13 columns):\n",
      "Loan_ID              614 non-null object\n",
      "Gender               601 non-null object\n",
      "Married              611 non-null object\n",
      "Dependents           599 non-null object\n",
      "Education            614 non-null object\n",
      "Self_Employed        582 non-null object\n",
      "ApplicantIncome      614 non-null int64\n",
      "CoapplicantIncome    614 non-null float64\n",
      "LoanAmount           592 non-null float64\n",
      "Loan_Amount_Term     600 non-null float64\n",
      "Credit_History       564 non-null float64\n",
      "Property_Area        614 non-null object\n",
      "Loan_Status          614 non-null object\n",
      "dtypes: float64(4), int64(1), object(8)\n",
      "memory usage: 62.4+ KB\n"
     ]
    }
   ],
   "source": [
    "df.info()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## Filling in missing data"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### Gender"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style>\n",
       "    .dataframe thead tr:only-child th {\n",
       "        text-align: right;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: left;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Loan_ID</th>\n",
       "      <th>Gender</th>\n",
       "      <th>Married</th>\n",
       "      <th>Dependents</th>\n",
       "      <th>Education</th>\n",
       "      <th>Self_Employed</th>\n",
       "      <th>ApplicantIncome</th>\n",
       "      <th>CoapplicantIncome</th>\n",
       "      <th>LoanAmount</th>\n",
       "      <th>Loan_Amount_Term</th>\n",
       "      <th>Credit_History</th>\n",
       "      <th>Property_Area</th>\n",
       "      <th>Loan_Status</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>23</th>\n",
       "      <td>LP001050</td>\n",
       "      <td>NaN</td>\n",
       "      <td>Yes</td>\n",
       "      <td>2</td>\n",
       "      <td>Not Graduate</td>\n",
       "      <td>No</td>\n",
       "      <td>3365</td>\n",
       "      <td>1917.0</td>\n",
       "      <td>112.0</td>\n",
       "      <td>360.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>Rural</td>\n",
       "      <td>N</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>126</th>\n",
       "      <td>LP001448</td>\n",
       "      <td>NaN</td>\n",
       "      <td>Yes</td>\n",
       "      <td>3+</td>\n",
       "      <td>Graduate</td>\n",
       "      <td>No</td>\n",
       "      <td>23803</td>\n",
       "      <td>0.0</td>\n",
       "      <td>370.0</td>\n",
       "      <td>360.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>Rural</td>\n",
       "      <td>Y</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>171</th>\n",
       "      <td>LP001585</td>\n",
       "      <td>NaN</td>\n",
       "      <td>Yes</td>\n",
       "      <td>3+</td>\n",
       "      <td>Graduate</td>\n",
       "      <td>No</td>\n",
       "      <td>51763</td>\n",
       "      <td>0.0</td>\n",
       "      <td>700.0</td>\n",
       "      <td>300.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>Urban</td>\n",
       "      <td>Y</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>188</th>\n",
       "      <td>LP001644</td>\n",
       "      <td>NaN</td>\n",
       "      <td>Yes</td>\n",
       "      <td>0</td>\n",
       "      <td>Graduate</td>\n",
       "      <td>Yes</td>\n",
       "      <td>674</td>\n",
       "      <td>5296.0</td>\n",
       "      <td>168.0</td>\n",
       "      <td>360.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>Rural</td>\n",
       "      <td>Y</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>314</th>\n",
       "      <td>LP002024</td>\n",
       "      <td>NaN</td>\n",
       "      <td>Yes</td>\n",
       "      <td>0</td>\n",
       "      <td>Graduate</td>\n",
       "      <td>No</td>\n",
       "      <td>2473</td>\n",
       "      <td>1843.0</td>\n",
       "      <td>159.0</td>\n",
       "      <td>360.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>Rural</td>\n",
       "      <td>N</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>334</th>\n",
       "      <td>LP002103</td>\n",
       "      <td>NaN</td>\n",
       "      <td>Yes</td>\n",
       "      <td>1</td>\n",
       "      <td>Graduate</td>\n",
       "      <td>Yes</td>\n",
       "      <td>9833</td>\n",
       "      <td>1833.0</td>\n",
       "      <td>182.0</td>\n",
       "      <td>180.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>Urban</td>\n",
       "      <td>Y</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>460</th>\n",
       "      <td>LP002478</td>\n",
       "      <td>NaN</td>\n",
       "      <td>Yes</td>\n",
       "      <td>0</td>\n",
       "      <td>Graduate</td>\n",
       "      <td>Yes</td>\n",
       "      <td>2083</td>\n",
       "      <td>4083.0</td>\n",
       "      <td>160.0</td>\n",
       "      <td>360.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>Semiurban</td>\n",
       "      <td>Y</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>467</th>\n",
       "      <td>LP002501</td>\n",
       "      <td>NaN</td>\n",
       "      <td>Yes</td>\n",
       "      <td>0</td>\n",
       "      <td>Graduate</td>\n",
       "      <td>No</td>\n",
       "      <td>16692</td>\n",
       "      <td>0.0</td>\n",
       "      <td>110.0</td>\n",
       "      <td>360.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>Semiurban</td>\n",
       "      <td>Y</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>477</th>\n",
       "      <td>LP002530</td>\n",
       "      <td>NaN</td>\n",
       "      <td>Yes</td>\n",
       "      <td>2</td>\n",
       "      <td>Graduate</td>\n",
       "      <td>No</td>\n",
       "      <td>2873</td>\n",
       "      <td>1872.0</td>\n",
       "      <td>132.0</td>\n",
       "      <td>360.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>Semiurban</td>\n",
       "      <td>N</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>507</th>\n",
       "      <td>LP002625</td>\n",
       "      <td>NaN</td>\n",
       "      <td>No</td>\n",
       "      <td>0</td>\n",
       "      <td>Graduate</td>\n",
       "      <td>No</td>\n",
       "      <td>3583</td>\n",
       "      <td>0.0</td>\n",
       "      <td>96.0</td>\n",
       "      <td>360.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>Urban</td>\n",
       "      <td>N</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>576</th>\n",
       "      <td>LP002872</td>\n",
       "      <td>NaN</td>\n",
       "      <td>Yes</td>\n",
       "      <td>0</td>\n",
       "      <td>Graduate</td>\n",
       "      <td>No</td>\n",
       "      <td>3087</td>\n",
       "      <td>2210.0</td>\n",
       "      <td>136.0</td>\n",
       "      <td>360.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>Semiurban</td>\n",
       "      <td>N</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>588</th>\n",
       "      <td>LP002925</td>\n",
       "      <td>NaN</td>\n",
       "      <td>No</td>\n",
       "      <td>0</td>\n",
       "      <td>Graduate</td>\n",
       "      <td>No</td>\n",
       "      <td>4750</td>\n",
       "      <td>0.0</td>\n",
       "      <td>94.0</td>\n",
       "      <td>360.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>Semiurban</td>\n",
       "      <td>Y</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>592</th>\n",
       "      <td>LP002933</td>\n",
       "      <td>NaN</td>\n",
       "      <td>No</td>\n",
       "      <td>3+</td>\n",
       "      <td>Graduate</td>\n",
       "      <td>Yes</td>\n",
       "      <td>9357</td>\n",
       "      <td>0.0</td>\n",
       "      <td>292.0</td>\n",
       "      <td>360.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>Semiurban</td>\n",
       "      <td>Y</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "      Loan_ID Gender Married Dependents     Education Self_Employed  \\\n",
       "23   LP001050    NaN     Yes          2  Not Graduate            No   \n",
       "126  LP001448    NaN     Yes         3+      Graduate            No   \n",
       "171  LP001585    NaN     Yes         3+      Graduate            No   \n",
       "188  LP001644    NaN     Yes          0      Graduate           Yes   \n",
       "314  LP002024    NaN     Yes          0      Graduate            No   \n",
       "334  LP002103    NaN     Yes          1      Graduate           Yes   \n",
       "460  LP002478    NaN     Yes          0      Graduate           Yes   \n",
       "467  LP002501    NaN     Yes          0      Graduate            No   \n",
       "477  LP002530    NaN     Yes          2      Graduate            No   \n",
       "507  LP002625    NaN      No          0      Graduate            No   \n",
       "576  LP002872    NaN     Yes          0      Graduate            No   \n",
       "588  LP002925    NaN      No          0      Graduate            No   \n",
       "592  LP002933    NaN      No         3+      Graduate           Yes   \n",
       "\n",
       "     ApplicantIncome  CoapplicantIncome  LoanAmount  Loan_Amount_Term  \\\n",
       "23              3365             1917.0       112.0             360.0   \n",
       "126            23803                0.0       370.0             360.0   \n",
       "171            51763                0.0       700.0             300.0   \n",
       "188              674             5296.0       168.0             360.0   \n",
       "314             2473             1843.0       159.0             360.0   \n",
       "334             9833             1833.0       182.0             180.0   \n",
       "460             2083             4083.0       160.0             360.0   \n",
       "467            16692                0.0       110.0             360.0   \n",
       "477             2873             1872.0       132.0             360.0   \n",
       "507             3583                0.0        96.0             360.0   \n",
       "576             3087             2210.0       136.0             360.0   \n",
       "588             4750                0.0        94.0             360.0   \n",
       "592             9357                0.0       292.0             360.0   \n",
       "\n",
       "     Credit_History Property_Area Loan_Status  \n",
       "23              0.0         Rural           N  \n",
       "126             1.0         Rural           Y  \n",
       "171             1.0         Urban           Y  \n",
       "188             1.0         Rural           Y  \n",
       "314             1.0         Rural           N  \n",
       "334             1.0         Urban           Y  \n",
       "460             NaN     Semiurban           Y  \n",
       "467             1.0     Semiurban           Y  \n",
       "477             0.0     Semiurban           N  \n",
       "507             1.0         Urban           N  \n",
       "576             0.0     Semiurban           N  \n",
       "588             1.0     Semiurban           Y  \n",
       "592             1.0     Semiurban           Y  "
      ]
     },
     "execution_count": 4,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df[df.Gender.isnull()]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "metadata": {
    "collapsed": true
   },
   "outputs": [],
   "source": [
    "df['Gender'] = df.groupby(['Married','Education','Dependents'])['Gender'].ffill().bfill()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "<class 'pandas.core.frame.DataFrame'>\n",
      "RangeIndex: 614 entries, 0 to 613\n",
      "Data columns (total 13 columns):\n",
      "Loan_ID              614 non-null object\n",
      "Gender               614 non-null object\n",
      "Married              611 non-null object\n",
      "Dependents           599 non-null object\n",
      "Education            614 non-null object\n",
      "Self_Employed        582 non-null object\n",
      "ApplicantIncome      614 non-null int64\n",
      "CoapplicantIncome    614 non-null float64\n",
      "LoanAmount           592 non-null float64\n",
      "Loan_Amount_Term     600 non-null float64\n",
      "Credit_History       564 non-null float64\n",
      "Property_Area        614 non-null object\n",
      "Loan_Status          614 non-null object\n",
      "dtypes: float64(4), int64(1), object(8)\n",
      "memory usage: 62.4+ KB\n"
     ]
    }
   ],
   "source": [
    "df.info()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### Married"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 7,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style>\n",
       "    .dataframe thead tr:only-child th {\n",
       "        text-align: right;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: left;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Loan_ID</th>\n",
       "      <th>Gender</th>\n",
       "      <th>Married</th>\n",
       "      <th>Dependents</th>\n",
       "      <th>Education</th>\n",
       "      <th>Self_Employed</th>\n",
       "      <th>ApplicantIncome</th>\n",
       "      <th>CoapplicantIncome</th>\n",
       "      <th>LoanAmount</th>\n",
       "      <th>Loan_Amount_Term</th>\n",
       "      <th>Credit_History</th>\n",
       "      <th>Property_Area</th>\n",
       "      <th>Loan_Status</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>104</th>\n",
       "      <td>LP001357</td>\n",
       "      <td>Male</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>Graduate</td>\n",
       "      <td>No</td>\n",
       "      <td>3816</td>\n",
       "      <td>754.0</td>\n",
       "      <td>160.0</td>\n",
       "      <td>360.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>Urban</td>\n",
       "      <td>Y</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>228</th>\n",
       "      <td>LP001760</td>\n",
       "      <td>Male</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>Graduate</td>\n",
       "      <td>No</td>\n",
       "      <td>4758</td>\n",
       "      <td>0.0</td>\n",
       "      <td>158.0</td>\n",
       "      <td>480.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>Semiurban</td>\n",
       "      <td>Y</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>435</th>\n",
       "      <td>LP002393</td>\n",
       "      <td>Male</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>Graduate</td>\n",
       "      <td>No</td>\n",
       "      <td>10047</td>\n",
       "      <td>0.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>240.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>Semiurban</td>\n",
       "      <td>Y</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "      Loan_ID Gender Married Dependents Education Self_Employed  \\\n",
       "104  LP001357   Male     NaN        NaN  Graduate            No   \n",
       "228  LP001760   Male     NaN        NaN  Graduate            No   \n",
       "435  LP002393   Male     NaN        NaN  Graduate            No   \n",
       "\n",
       "     ApplicantIncome  CoapplicantIncome  LoanAmount  Loan_Amount_Term  \\\n",
       "104             3816              754.0       160.0             360.0   \n",
       "228             4758                0.0       158.0             480.0   \n",
       "435            10047                0.0         NaN             240.0   \n",
       "\n",
       "     Credit_History Property_Area Loan_Status  \n",
       "104             1.0         Urban           Y  \n",
       "228             1.0     Semiurban           Y  \n",
       "435             1.0     Semiurban           Y  "
      ]
     },
     "execution_count": 7,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df[df.Married.isnull()]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 8,
   "metadata": {
    "collapsed": true
   },
   "outputs": [],
   "source": [
    "df['Married'] = df.groupby(['Gender','Education','Self_Employed'])['Married'].ffill().bfill()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 9,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "<class 'pandas.core.frame.DataFrame'>\n",
      "RangeIndex: 614 entries, 0 to 613\n",
      "Data columns (total 13 columns):\n",
      "Loan_ID              614 non-null object\n",
      "Gender               614 non-null object\n",
      "Married              614 non-null object\n",
      "Dependents           599 non-null object\n",
      "Education            614 non-null object\n",
      "Self_Employed        582 non-null object\n",
      "ApplicantIncome      614 non-null int64\n",
      "CoapplicantIncome    614 non-null float64\n",
      "LoanAmount           592 non-null float64\n",
      "Loan_Amount_Term     600 non-null float64\n",
      "Credit_History       564 non-null float64\n",
      "Property_Area        614 non-null object\n",
      "Loan_Status          614 non-null object\n",
      "dtypes: float64(4), int64(1), object(8)\n",
      "memory usage: 62.4+ KB\n"
     ]
    }
   ],
   "source": [
    "df.info()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### Dependents"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 10,
   "metadata": {
    "scrolled": true
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style>\n",
       "    .dataframe thead tr:only-child th {\n",
       "        text-align: right;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: left;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Loan_ID</th>\n",
       "      <th>Gender</th>\n",
       "      <th>Married</th>\n",
       "      <th>Dependents</th>\n",
       "      <th>Education</th>\n",
       "      <th>Self_Employed</th>\n",
       "      <th>ApplicantIncome</th>\n",
       "      <th>CoapplicantIncome</th>\n",
       "      <th>LoanAmount</th>\n",
       "      <th>Loan_Amount_Term</th>\n",
       "      <th>Credit_History</th>\n",
       "      <th>Property_Area</th>\n",
       "      <th>Loan_Status</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>102</th>\n",
       "      <td>LP001350</td>\n",
       "      <td>Male</td>\n",
       "      <td>Yes</td>\n",
       "      <td>NaN</td>\n",
       "      <td>Graduate</td>\n",
       "      <td>No</td>\n",
       "      <td>13650</td>\n",
       "      <td>0.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>360.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>Urban</td>\n",
       "      <td>Y</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>104</th>\n",
       "      <td>LP001357</td>\n",
       "      <td>Male</td>\n",
       "      <td>Yes</td>\n",
       "      <td>NaN</td>\n",
       "      <td>Graduate</td>\n",
       "      <td>No</td>\n",
       "      <td>3816</td>\n",
       "      <td>754.0</td>\n",
       "      <td>160.0</td>\n",
       "      <td>360.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>Urban</td>\n",
       "      <td>Y</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>120</th>\n",
       "      <td>LP001426</td>\n",
       "      <td>Female</td>\n",
       "      <td>Yes</td>\n",
       "      <td>NaN</td>\n",
       "      <td>Graduate</td>\n",
       "      <td>No</td>\n",
       "      <td>5667</td>\n",
       "      <td>2667.0</td>\n",
       "      <td>180.0</td>\n",
       "      <td>360.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>Rural</td>\n",
       "      <td>Y</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>226</th>\n",
       "      <td>LP001754</td>\n",
       "      <td>Male</td>\n",
       "      <td>Yes</td>\n",
       "      <td>NaN</td>\n",
       "      <td>Not Graduate</td>\n",
       "      <td>Yes</td>\n",
       "      <td>4735</td>\n",
       "      <td>0.0</td>\n",
       "      <td>138.0</td>\n",
       "      <td>360.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>Urban</td>\n",
       "      <td>N</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>228</th>\n",
       "      <td>LP001760</td>\n",
       "      <td>Male</td>\n",
       "      <td>Yes</td>\n",
       "      <td>NaN</td>\n",
       "      <td>Graduate</td>\n",
       "      <td>No</td>\n",
       "      <td>4758</td>\n",
       "      <td>0.0</td>\n",
       "      <td>158.0</td>\n",
       "      <td>480.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>Semiurban</td>\n",
       "      <td>Y</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>293</th>\n",
       "      <td>LP001945</td>\n",
       "      <td>Male</td>\n",
       "      <td>No</td>\n",
       "      <td>NaN</td>\n",
       "      <td>Graduate</td>\n",
       "      <td>No</td>\n",
       "      <td>5417</td>\n",
       "      <td>0.0</td>\n",
       "      <td>143.0</td>\n",
       "      <td>480.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>Urban</td>\n",
       "      <td>N</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>301</th>\n",
       "      <td>LP001972</td>\n",
       "      <td>Female</td>\n",
       "      <td>Yes</td>\n",
       "      <td>NaN</td>\n",
       "      <td>Not Graduate</td>\n",
       "      <td>No</td>\n",
       "      <td>2875</td>\n",
       "      <td>1750.0</td>\n",
       "      <td>105.0</td>\n",
       "      <td>360.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>Semiurban</td>\n",
       "      <td>Y</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>332</th>\n",
       "      <td>LP002100</td>\n",
       "      <td>Male</td>\n",
       "      <td>No</td>\n",
       "      <td>NaN</td>\n",
       "      <td>Graduate</td>\n",
       "      <td>No</td>\n",
       "      <td>2833</td>\n",
       "      <td>0.0</td>\n",
       "      <td>71.0</td>\n",
       "      <td>360.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>Urban</td>\n",
       "      <td>Y</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>335</th>\n",
       "      <td>LP002106</td>\n",
       "      <td>Male</td>\n",
       "      <td>Yes</td>\n",
       "      <td>NaN</td>\n",
       "      <td>Graduate</td>\n",
       "      <td>Yes</td>\n",
       "      <td>5503</td>\n",
       "      <td>4490.0</td>\n",
       "      <td>70.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>1.0</td>\n",
       "      <td>Semiurban</td>\n",
       "      <td>Y</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>346</th>\n",
       "      <td>LP002130</td>\n",
       "      <td>Male</td>\n",
       "      <td>Yes</td>\n",
       "      <td>NaN</td>\n",
       "      <td>Not Graduate</td>\n",
       "      <td>No</td>\n",
       "      <td>3523</td>\n",
       "      <td>3230.0</td>\n",
       "      <td>152.0</td>\n",
       "      <td>360.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>Rural</td>\n",
       "      <td>N</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>355</th>\n",
       "      <td>LP002144</td>\n",
       "      <td>Male</td>\n",
       "      <td>No</td>\n",
       "      <td>NaN</td>\n",
       "      <td>Graduate</td>\n",
       "      <td>No</td>\n",
       "      <td>3813</td>\n",
       "      <td>0.0</td>\n",
       "      <td>116.0</td>\n",
       "      <td>180.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>Urban</td>\n",
       "      <td>Y</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>435</th>\n",
       "      <td>LP002393</td>\n",
       "      <td>Male</td>\n",
       "      <td>No</td>\n",
       "      <td>NaN</td>\n",
       "      <td>Graduate</td>\n",
       "      <td>No</td>\n",
       "      <td>10047</td>\n",
       "      <td>0.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>240.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>Semiurban</td>\n",
       "      <td>Y</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>517</th>\n",
       "      <td>LP002682</td>\n",
       "      <td>Male</td>\n",
       "      <td>Yes</td>\n",
       "      <td>NaN</td>\n",
       "      <td>Not Graduate</td>\n",
       "      <td>No</td>\n",
       "      <td>3074</td>\n",
       "      <td>1800.0</td>\n",
       "      <td>123.0</td>\n",
       "      <td>360.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>Semiurban</td>\n",
       "      <td>N</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>571</th>\n",
       "      <td>LP002847</td>\n",
       "      <td>Male</td>\n",
       "      <td>Yes</td>\n",
       "      <td>NaN</td>\n",
       "      <td>Graduate</td>\n",
       "      <td>No</td>\n",
       "      <td>5116</td>\n",
       "      <td>1451.0</td>\n",
       "      <td>165.0</td>\n",
       "      <td>360.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>Urban</td>\n",
       "      <td>N</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>597</th>\n",
       "      <td>LP002943</td>\n",
       "      <td>Male</td>\n",
       "      <td>No</td>\n",
       "      <td>NaN</td>\n",
       "      <td>Graduate</td>\n",
       "      <td>No</td>\n",
       "      <td>2987</td>\n",
       "      <td>0.0</td>\n",
       "      <td>88.0</td>\n",
       "      <td>360.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>Semiurban</td>\n",
       "      <td>N</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "      Loan_ID  Gender Married Dependents     Education Self_Employed  \\\n",
       "102  LP001350    Male     Yes        NaN      Graduate            No   \n",
       "104  LP001357    Male     Yes        NaN      Graduate            No   \n",
       "120  LP001426  Female     Yes        NaN      Graduate            No   \n",
       "226  LP001754    Male     Yes        NaN  Not Graduate           Yes   \n",
       "228  LP001760    Male     Yes        NaN      Graduate            No   \n",
       "293  LP001945    Male      No        NaN      Graduate            No   \n",
       "301  LP001972  Female     Yes        NaN  Not Graduate            No   \n",
       "332  LP002100    Male      No        NaN      Graduate            No   \n",
       "335  LP002106    Male     Yes        NaN      Graduate           Yes   \n",
       "346  LP002130    Male     Yes        NaN  Not Graduate            No   \n",
       "355  LP002144    Male      No        NaN      Graduate            No   \n",
       "435  LP002393    Male      No        NaN      Graduate            No   \n",
       "517  LP002682    Male     Yes        NaN  Not Graduate            No   \n",
       "571  LP002847    Male     Yes        NaN      Graduate            No   \n",
       "597  LP002943    Male      No        NaN      Graduate            No   \n",
       "\n",
       "     ApplicantIncome  CoapplicantIncome  LoanAmount  Loan_Amount_Term  \\\n",
       "102            13650                0.0         NaN             360.0   \n",
       "104             3816              754.0       160.0             360.0   \n",
       "120             5667             2667.0       180.0             360.0   \n",
       "226             4735                0.0       138.0             360.0   \n",
       "228             4758                0.0       158.0             480.0   \n",
       "293             5417                0.0       143.0             480.0   \n",
       "301             2875             1750.0       105.0             360.0   \n",
       "332             2833                0.0        71.0             360.0   \n",
       "335             5503             4490.0        70.0               NaN   \n",
       "346             3523             3230.0       152.0             360.0   \n",
       "355             3813                0.0       116.0             180.0   \n",
       "435            10047                0.0         NaN             240.0   \n",
       "517             3074             1800.0       123.0             360.0   \n",
       "571             5116             1451.0       165.0             360.0   \n",
       "597             2987                0.0        88.0             360.0   \n",
       "\n",
       "     Credit_History Property_Area Loan_Status  \n",
       "102             1.0         Urban           Y  \n",
       "104             1.0         Urban           Y  \n",
       "120             1.0         Rural           Y  \n",
       "226             1.0         Urban           N  \n",
       "228             1.0     Semiurban           Y  \n",
       "293             0.0         Urban           N  \n",
       "301             1.0     Semiurban           Y  \n",
       "332             1.0         Urban           Y  \n",
       "335             1.0     Semiurban           Y  \n",
       "346             0.0         Rural           N  \n",
       "355             1.0         Urban           Y  \n",
       "435             1.0     Semiurban           Y  \n",
       "517             0.0     Semiurban           N  \n",
       "571             0.0         Urban           N  \n",
       "597             0.0     Semiurban           N  "
      ]
     },
     "execution_count": 10,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df[df.Dependents.isnull()]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 11,
   "metadata": {
    "collapsed": true
   },
   "outputs": [],
   "source": [
    "df['Dependents'] = df.groupby(['Gender','Education','Married'])['Dependents'].ffill().bfill()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 12,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "<class 'pandas.core.frame.DataFrame'>\n",
      "RangeIndex: 614 entries, 0 to 613\n",
      "Data columns (total 13 columns):\n",
      "Loan_ID              614 non-null object\n",
      "Gender               614 non-null object\n",
      "Married              614 non-null object\n",
      "Dependents           614 non-null object\n",
      "Education            614 non-null object\n",
      "Self_Employed        582 non-null object\n",
      "ApplicantIncome      614 non-null int64\n",
      "CoapplicantIncome    614 non-null float64\n",
      "LoanAmount           592 non-null float64\n",
      "Loan_Amount_Term     600 non-null float64\n",
      "Credit_History       564 non-null float64\n",
      "Property_Area        614 non-null object\n",
      "Loan_Status          614 non-null object\n",
      "dtypes: float64(4), int64(1), object(8)\n",
      "memory usage: 62.4+ KB\n"
     ]
    }
   ],
   "source": [
    "df.info()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### Self-Employed"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 13,
   "metadata": {
    "scrolled": true
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style>\n",
       "    .dataframe thead tr:only-child th {\n",
       "        text-align: right;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: left;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Loan_ID</th>\n",
       "      <th>Gender</th>\n",
       "      <th>Married</th>\n",
       "      <th>Dependents</th>\n",
       "      <th>Education</th>\n",
       "      <th>Self_Employed</th>\n",
       "      <th>ApplicantIncome</th>\n",
       "      <th>CoapplicantIncome</th>\n",
       "      <th>LoanAmount</th>\n",
       "      <th>Loan_Amount_Term</th>\n",
       "      <th>Credit_History</th>\n",
       "      <th>Property_Area</th>\n",
       "      <th>Loan_Status</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>11</th>\n",
       "      <td>LP001027</td>\n",
       "      <td>Male</td>\n",
       "      <td>Yes</td>\n",
       "      <td>2</td>\n",
       "      <td>Graduate</td>\n",
       "      <td>NaN</td>\n",
       "      <td>2500</td>\n",
       "      <td>1840.0</td>\n",
       "      <td>109.0</td>\n",
       "      <td>360.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>Urban</td>\n",
       "      <td>Y</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>19</th>\n",
       "      <td>LP001041</td>\n",
       "      <td>Male</td>\n",
       "      <td>Yes</td>\n",
       "      <td>0</td>\n",
       "      <td>Graduate</td>\n",
       "      <td>NaN</td>\n",
       "      <td>2600</td>\n",
       "      <td>3500.0</td>\n",
       "      <td>115.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>1.0</td>\n",
       "      <td>Urban</td>\n",
       "      <td>Y</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>24</th>\n",
       "      <td>LP001052</td>\n",
       "      <td>Male</td>\n",
       "      <td>Yes</td>\n",
       "      <td>1</td>\n",
       "      <td>Graduate</td>\n",
       "      <td>NaN</td>\n",
       "      <td>3717</td>\n",
       "      <td>2925.0</td>\n",
       "      <td>151.0</td>\n",
       "      <td>360.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>Semiurban</td>\n",
       "      <td>N</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>29</th>\n",
       "      <td>LP001087</td>\n",
       "      <td>Female</td>\n",
       "      <td>No</td>\n",
       "      <td>2</td>\n",
       "      <td>Graduate</td>\n",
       "      <td>NaN</td>\n",
       "      <td>3750</td>\n",
       "      <td>2083.0</td>\n",
       "      <td>120.0</td>\n",
       "      <td>360.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>Semiurban</td>\n",
       "      <td>Y</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>30</th>\n",
       "      <td>LP001091</td>\n",
       "      <td>Male</td>\n",
       "      <td>No</td>\n",
       "      <td>1</td>\n",
       "      <td>Graduate</td>\n",
       "      <td>NaN</td>\n",
       "      <td>4166</td>\n",
       "      <td>3369.0</td>\n",
       "      <td>201.0</td>\n",
       "      <td>360.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>Urban</td>\n",
       "      <td>N</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>95</th>\n",
       "      <td>LP001326</td>\n",
       "      <td>Male</td>\n",
       "      <td>Yes</td>\n",
       "      <td>0</td>\n",
       "      <td>Graduate</td>\n",
       "      <td>NaN</td>\n",
       "      <td>6782</td>\n",
       "      <td>0.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>360.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>Urban</td>\n",
       "      <td>N</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>107</th>\n",
       "      <td>LP001370</td>\n",
       "      <td>Male</td>\n",
       "      <td>Yes</td>\n",
       "      <td>0</td>\n",
       "      <td>Not Graduate</td>\n",
       "      <td>NaN</td>\n",
       "      <td>7333</td>\n",
       "      <td>0.0</td>\n",
       "      <td>120.0</td>\n",
       "      <td>360.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>Rural</td>\n",
       "      <td>N</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>111</th>\n",
       "      <td>LP001387</td>\n",
       "      <td>Female</td>\n",
       "      <td>Yes</td>\n",
       "      <td>0</td>\n",
       "      <td>Graduate</td>\n",
       "      <td>NaN</td>\n",
       "      <td>2929</td>\n",
       "      <td>2333.0</td>\n",
       "      <td>139.0</td>\n",
       "      <td>360.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>Semiurban</td>\n",
       "      <td>Y</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>114</th>\n",
       "      <td>LP001398</td>\n",
       "      <td>Male</td>\n",
       "      <td>Yes</td>\n",
       "      <td>0</td>\n",
       "      <td>Graduate</td>\n",
       "      <td>NaN</td>\n",
       "      <td>5050</td>\n",
       "      <td>0.0</td>\n",
       "      <td>118.0</td>\n",
       "      <td>360.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>Semiurban</td>\n",
       "      <td>Y</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>158</th>\n",
       "      <td>LP001546</td>\n",
       "      <td>Male</td>\n",
       "      <td>Yes</td>\n",
       "      <td>0</td>\n",
       "      <td>Graduate</td>\n",
       "      <td>NaN</td>\n",
       "      <td>2980</td>\n",
       "      <td>2083.0</td>\n",
       "      <td>120.0</td>\n",
       "      <td>360.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>Rural</td>\n",
       "      <td>Y</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>170</th>\n",
       "      <td>LP001581</td>\n",
       "      <td>Male</td>\n",
       "      <td>Yes</td>\n",
       "      <td>0</td>\n",
       "      <td>Not Graduate</td>\n",
       "      <td>NaN</td>\n",
       "      <td>1820</td>\n",
       "      <td>1769.0</td>\n",
       "      <td>95.0</td>\n",
       "      <td>360.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>Rural</td>\n",
       "      <td>Y</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>218</th>\n",
       "      <td>LP001732</td>\n",
       "      <td>Male</td>\n",
       "      <td>Yes</td>\n",
       "      <td>2</td>\n",
       "      <td>Graduate</td>\n",
       "      <td>NaN</td>\n",
       "      <td>5000</td>\n",
       "      <td>0.0</td>\n",
       "      <td>72.0</td>\n",
       "      <td>360.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>Semiurban</td>\n",
       "      <td>N</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>231</th>\n",
       "      <td>LP001768</td>\n",
       "      <td>Male</td>\n",
       "      <td>No</td>\n",
       "      <td>0</td>\n",
       "      <td>Graduate</td>\n",
       "      <td>NaN</td>\n",
       "      <td>3716</td>\n",
       "      <td>0.0</td>\n",
       "      <td>42.0</td>\n",
       "      <td>180.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>Rural</td>\n",
       "      <td>Y</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>236</th>\n",
       "      <td>LP001786</td>\n",
       "      <td>Male</td>\n",
       "      <td>No</td>\n",
       "      <td>0</td>\n",
       "      <td>Graduate</td>\n",
       "      <td>NaN</td>\n",
       "      <td>5746</td>\n",
       "      <td>0.0</td>\n",
       "      <td>255.0</td>\n",
       "      <td>360.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>Urban</td>\n",
       "      <td>N</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>268</th>\n",
       "      <td>LP001883</td>\n",
       "      <td>Female</td>\n",
       "      <td>No</td>\n",
       "      <td>0</td>\n",
       "      <td>Graduate</td>\n",
       "      <td>NaN</td>\n",
       "      <td>3418</td>\n",
       "      <td>0.0</td>\n",
       "      <td>135.0</td>\n",
       "      <td>360.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>Rural</td>\n",
       "      <td>N</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>295</th>\n",
       "      <td>LP001949</td>\n",
       "      <td>Male</td>\n",
       "      <td>Yes</td>\n",
       "      <td>3+</td>\n",
       "      <td>Graduate</td>\n",
       "      <td>NaN</td>\n",
       "      <td>4416</td>\n",
       "      <td>1250.0</td>\n",
       "      <td>110.0</td>\n",
       "      <td>360.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>Urban</td>\n",
       "      <td>Y</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>333</th>\n",
       "      <td>LP002101</td>\n",
       "      <td>Male</td>\n",
       "      <td>Yes</td>\n",
       "      <td>0</td>\n",
       "      <td>Graduate</td>\n",
       "      <td>NaN</td>\n",
       "      <td>63337</td>\n",
       "      <td>0.0</td>\n",
       "      <td>490.0</td>\n",
       "      <td>180.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>Urban</td>\n",
       "      <td>Y</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>336</th>\n",
       "      <td>LP002110</td>\n",
       "      <td>Male</td>\n",
       "      <td>Yes</td>\n",
       "      <td>1</td>\n",
       "      <td>Graduate</td>\n",
       "      <td>NaN</td>\n",
       "      <td>5250</td>\n",
       "      <td>688.0</td>\n",
       "      <td>160.0</td>\n",
       "      <td>360.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>Rural</td>\n",
       "      <td>Y</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>344</th>\n",
       "      <td>LP002128</td>\n",
       "      <td>Male</td>\n",
       "      <td>Yes</td>\n",
       "      <td>2</td>\n",
       "      <td>Graduate</td>\n",
       "      <td>NaN</td>\n",
       "      <td>2583</td>\n",
       "      <td>2330.0</td>\n",
       "      <td>125.0</td>\n",
       "      <td>360.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>Rural</td>\n",
       "      <td>Y</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>374</th>\n",
       "      <td>LP002209</td>\n",
       "      <td>Female</td>\n",
       "      <td>Yes</td>\n",
       "      <td>0</td>\n",
       "      <td>Graduate</td>\n",
       "      <td>NaN</td>\n",
       "      <td>2764</td>\n",
       "      <td>1459.0</td>\n",
       "      <td>110.0</td>\n",
       "      <td>360.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>Urban</td>\n",
       "      <td>Y</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>380</th>\n",
       "      <td>LP002226</td>\n",
       "      <td>Male</td>\n",
       "      <td>No</td>\n",
       "      <td>0</td>\n",
       "      <td>Graduate</td>\n",
       "      <td>NaN</td>\n",
       "      <td>3333</td>\n",
       "      <td>2500.0</td>\n",
       "      <td>128.0</td>\n",
       "      <td>360.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>Semiurban</td>\n",
       "      <td>Y</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>385</th>\n",
       "      <td>LP002237</td>\n",
       "      <td>Male</td>\n",
       "      <td>No</td>\n",
       "      <td>1</td>\n",
       "      <td>Graduate</td>\n",
       "      <td>NaN</td>\n",
       "      <td>3667</td>\n",
       "      <td>0.0</td>\n",
       "      <td>113.0</td>\n",
       "      <td>180.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>Urban</td>\n",
       "      <td>Y</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>411</th>\n",
       "      <td>LP002319</td>\n",
       "      <td>Male</td>\n",
       "      <td>Yes</td>\n",
       "      <td>0</td>\n",
       "      <td>Graduate</td>\n",
       "      <td>NaN</td>\n",
       "      <td>6256</td>\n",
       "      <td>0.0</td>\n",
       "      <td>160.0</td>\n",
       "      <td>360.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>Urban</td>\n",
       "      <td>Y</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>432</th>\n",
       "      <td>LP002386</td>\n",
       "      <td>Male</td>\n",
       "      <td>Yes</td>\n",
       "      <td>0</td>\n",
       "      <td>Graduate</td>\n",
       "      <td>NaN</td>\n",
       "      <td>12876</td>\n",
       "      <td>0.0</td>\n",
       "      <td>405.0</td>\n",
       "      <td>360.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>Semiurban</td>\n",
       "      <td>Y</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>447</th>\n",
       "      <td>LP002435</td>\n",
       "      <td>Male</td>\n",
       "      <td>Yes</td>\n",
       "      <td>0</td>\n",
       "      <td>Graduate</td>\n",
       "      <td>NaN</td>\n",
       "      <td>3539</td>\n",
       "      <td>1376.0</td>\n",
       "      <td>55.0</td>\n",
       "      <td>360.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>Rural</td>\n",
       "      <td>N</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>463</th>\n",
       "      <td>LP002489</td>\n",
       "      <td>Female</td>\n",
       "      <td>No</td>\n",
       "      <td>1</td>\n",
       "      <td>Not Graduate</td>\n",
       "      <td>NaN</td>\n",
       "      <td>5191</td>\n",
       "      <td>0.0</td>\n",
       "      <td>132.0</td>\n",
       "      <td>360.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>Semiurban</td>\n",
       "      <td>Y</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>468</th>\n",
       "      <td>LP002502</td>\n",
       "      <td>Female</td>\n",
       "      <td>Yes</td>\n",
       "      <td>2</td>\n",
       "      <td>Not Graduate</td>\n",
       "      <td>NaN</td>\n",
       "      <td>210</td>\n",
       "      <td>2917.0</td>\n",
       "      <td>98.0</td>\n",
       "      <td>360.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>Semiurban</td>\n",
       "      <td>Y</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>535</th>\n",
       "      <td>LP002732</td>\n",
       "      <td>Male</td>\n",
       "      <td>Yes</td>\n",
       "      <td>0</td>\n",
       "      <td>Not Graduate</td>\n",
       "      <td>NaN</td>\n",
       "      <td>2550</td>\n",
       "      <td>2042.0</td>\n",
       "      <td>126.0</td>\n",
       "      <td>360.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>Rural</td>\n",
       "      <td>Y</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>542</th>\n",
       "      <td>LP002753</td>\n",
       "      <td>Female</td>\n",
       "      <td>Yes</td>\n",
       "      <td>1</td>\n",
       "      <td>Graduate</td>\n",
       "      <td>NaN</td>\n",
       "      <td>3652</td>\n",
       "      <td>0.0</td>\n",
       "      <td>95.0</td>\n",
       "      <td>360.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>Semiurban</td>\n",
       "      <td>Y</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>579</th>\n",
       "      <td>LP002888</td>\n",
       "      <td>Male</td>\n",
       "      <td>Yes</td>\n",
       "      <td>0</td>\n",
       "      <td>Graduate</td>\n",
       "      <td>NaN</td>\n",
       "      <td>3182</td>\n",
       "      <td>2917.0</td>\n",
       "      <td>161.0</td>\n",
       "      <td>360.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>Urban</td>\n",
       "      <td>Y</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>600</th>\n",
       "      <td>LP002949</td>\n",
       "      <td>Female</td>\n",
       "      <td>Yes</td>\n",
       "      <td>3+</td>\n",
       "      <td>Graduate</td>\n",
       "      <td>NaN</td>\n",
       "      <td>416</td>\n",
       "      <td>41667.0</td>\n",
       "      <td>350.0</td>\n",
       "      <td>180.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>Urban</td>\n",
       "      <td>N</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>601</th>\n",
       "      <td>LP002950</td>\n",
       "      <td>Male</td>\n",
       "      <td>Yes</td>\n",
       "      <td>0</td>\n",
       "      <td>Not Graduate</td>\n",
       "      <td>NaN</td>\n",
       "      <td>2894</td>\n",
       "      <td>2792.0</td>\n",
       "      <td>155.0</td>\n",
       "      <td>360.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>Rural</td>\n",
       "      <td>Y</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "      Loan_ID  Gender Married Dependents     Education Self_Employed  \\\n",
       "11   LP001027    Male     Yes          2      Graduate           NaN   \n",
       "19   LP001041    Male     Yes          0      Graduate           NaN   \n",
       "24   LP001052    Male     Yes          1      Graduate           NaN   \n",
       "29   LP001087  Female      No          2      Graduate           NaN   \n",
       "30   LP001091    Male      No          1      Graduate           NaN   \n",
       "95   LP001326    Male     Yes          0      Graduate           NaN   \n",
       "107  LP001370    Male     Yes          0  Not Graduate           NaN   \n",
       "111  LP001387  Female     Yes          0      Graduate           NaN   \n",
       "114  LP001398    Male     Yes          0      Graduate           NaN   \n",
       "158  LP001546    Male     Yes          0      Graduate           NaN   \n",
       "170  LP001581    Male     Yes          0  Not Graduate           NaN   \n",
       "218  LP001732    Male     Yes          2      Graduate           NaN   \n",
       "231  LP001768    Male      No          0      Graduate           NaN   \n",
       "236  LP001786    Male      No          0      Graduate           NaN   \n",
       "268  LP001883  Female      No          0      Graduate           NaN   \n",
       "295  LP001949    Male     Yes         3+      Graduate           NaN   \n",
       "333  LP002101    Male     Yes          0      Graduate           NaN   \n",
       "336  LP002110    Male     Yes          1      Graduate           NaN   \n",
       "344  LP002128    Male     Yes          2      Graduate           NaN   \n",
       "374  LP002209  Female     Yes          0      Graduate           NaN   \n",
       "380  LP002226    Male      No          0      Graduate           NaN   \n",
       "385  LP002237    Male      No          1      Graduate           NaN   \n",
       "411  LP002319    Male     Yes          0      Graduate           NaN   \n",
       "432  LP002386    Male     Yes          0      Graduate           NaN   \n",
       "447  LP002435    Male     Yes          0      Graduate           NaN   \n",
       "463  LP002489  Female      No          1  Not Graduate           NaN   \n",
       "468  LP002502  Female     Yes          2  Not Graduate           NaN   \n",
       "535  LP002732    Male     Yes          0  Not Graduate           NaN   \n",
       "542  LP002753  Female     Yes          1      Graduate           NaN   \n",
       "579  LP002888    Male     Yes          0      Graduate           NaN   \n",
       "600  LP002949  Female     Yes         3+      Graduate           NaN   \n",
       "601  LP002950    Male     Yes          0  Not Graduate           NaN   \n",
       "\n",
       "     ApplicantIncome  CoapplicantIncome  LoanAmount  Loan_Amount_Term  \\\n",
       "11              2500             1840.0       109.0             360.0   \n",
       "19              2600             3500.0       115.0               NaN   \n",
       "24              3717             2925.0       151.0             360.0   \n",
       "29              3750             2083.0       120.0             360.0   \n",
       "30              4166             3369.0       201.0             360.0   \n",
       "95              6782                0.0         NaN             360.0   \n",
       "107             7333                0.0       120.0             360.0   \n",
       "111             2929             2333.0       139.0             360.0   \n",
       "114             5050                0.0       118.0             360.0   \n",
       "158             2980             2083.0       120.0             360.0   \n",
       "170             1820             1769.0        95.0             360.0   \n",
       "218             5000                0.0        72.0             360.0   \n",
       "231             3716                0.0        42.0             180.0   \n",
       "236             5746                0.0       255.0             360.0   \n",
       "268             3418                0.0       135.0             360.0   \n",
       "295             4416             1250.0       110.0             360.0   \n",
       "333            63337                0.0       490.0             180.0   \n",
       "336             5250              688.0       160.0             360.0   \n",
       "344             2583             2330.0       125.0             360.0   \n",
       "374             2764             1459.0       110.0             360.0   \n",
       "380             3333             2500.0       128.0             360.0   \n",
       "385             3667                0.0       113.0             180.0   \n",
       "411             6256                0.0       160.0             360.0   \n",
       "432            12876                0.0       405.0             360.0   \n",
       "447             3539             1376.0        55.0             360.0   \n",
       "463             5191                0.0       132.0             360.0   \n",
       "468              210             2917.0        98.0             360.0   \n",
       "535             2550             2042.0       126.0             360.0   \n",
       "542             3652                0.0        95.0             360.0   \n",
       "579             3182             2917.0       161.0             360.0   \n",
       "600              416            41667.0       350.0             180.0   \n",
       "601             2894             2792.0       155.0             360.0   \n",
       "\n",
       "     Credit_History Property_Area Loan_Status  \n",
       "11              1.0         Urban           Y  \n",
       "19              1.0         Urban           Y  \n",
       "24              NaN     Semiurban           N  \n",
       "29              1.0     Semiurban           Y  \n",
       "30              NaN         Urban           N  \n",
       "95              NaN         Urban           N  \n",
       "107             1.0         Rural           N  \n",
       "111             1.0     Semiurban           Y  \n",
       "114             1.0     Semiurban           Y  \n",
       "158             1.0         Rural           Y  \n",
       "170             1.0         Rural           Y  \n",
       "218             0.0     Semiurban           N  \n",
       "231             1.0         Rural           Y  \n",
       "236             NaN         Urban           N  \n",
       "268             1.0         Rural           N  \n",
       "295             1.0         Urban           Y  \n",
       "333             1.0         Urban           Y  \n",
       "336             1.0         Rural           Y  \n",
       "344             1.0         Rural           Y  \n",
       "374             1.0         Urban           Y  \n",
       "380             1.0     Semiurban           Y  \n",
       "385             1.0         Urban           Y  \n",
       "411             NaN         Urban           Y  \n",
       "432             1.0     Semiurban           Y  \n",
       "447             1.0         Rural           N  \n",
       "463             1.0     Semiurban           Y  \n",
       "468             1.0     Semiurban           Y  \n",
       "535             1.0         Rural           Y  \n",
       "542             1.0     Semiurban           Y  \n",
       "579             1.0         Urban           Y  \n",
       "600             NaN         Urban           N  \n",
       "601             1.0         Rural           Y  "
      ]
     },
     "execution_count": 13,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df[df.Self_Employed.isnull()]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 14,
   "metadata": {
    "collapsed": true
   },
   "outputs": [],
   "source": [
    "df['Self_Employed'] = df.groupby(['Gender','Education','Married','Dependents'])['Self_Employed'].ffill().bfill()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 15,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "<class 'pandas.core.frame.DataFrame'>\n",
      "RangeIndex: 614 entries, 0 to 613\n",
      "Data columns (total 13 columns):\n",
      "Loan_ID              614 non-null object\n",
      "Gender               614 non-null object\n",
      "Married              614 non-null object\n",
      "Dependents           614 non-null object\n",
      "Education            614 non-null object\n",
      "Self_Employed        614 non-null object\n",
      "ApplicantIncome      614 non-null int64\n",
      "CoapplicantIncome    614 non-null float64\n",
      "LoanAmount           592 non-null float64\n",
      "Loan_Amount_Term     600 non-null float64\n",
      "Credit_History       564 non-null float64\n",
      "Property_Area        614 non-null object\n",
      "Loan_Status          614 non-null object\n",
      "dtypes: float64(4), int64(1), object(8)\n",
      "memory usage: 62.4+ KB\n"
     ]
    }
   ],
   "source": [
    "df.info()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### Loan Amount"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 16,
   "metadata": {
    "scrolled": true
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style>\n",
       "    .dataframe thead tr:only-child th {\n",
       "        text-align: right;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: left;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Loan_ID</th>\n",
       "      <th>Gender</th>\n",
       "      <th>Married</th>\n",
       "      <th>Dependents</th>\n",
       "      <th>Education</th>\n",
       "      <th>Self_Employed</th>\n",
       "      <th>ApplicantIncome</th>\n",
       "      <th>CoapplicantIncome</th>\n",
       "      <th>LoanAmount</th>\n",
       "      <th>Loan_Amount_Term</th>\n",
       "      <th>Credit_History</th>\n",
       "      <th>Property_Area</th>\n",
       "      <th>Loan_Status</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>LP001002</td>\n",
       "      <td>Male</td>\n",
       "      <td>No</td>\n",
       "      <td>0</td>\n",
       "      <td>Graduate</td>\n",
       "      <td>No</td>\n",
       "      <td>5849</td>\n",
       "      <td>0.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>360.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>Urban</td>\n",
       "      <td>Y</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>35</th>\n",
       "      <td>LP001106</td>\n",
       "      <td>Male</td>\n",
       "      <td>Yes</td>\n",
       "      <td>0</td>\n",
       "      <td>Graduate</td>\n",
       "      <td>No</td>\n",
       "      <td>2275</td>\n",
       "      <td>2067.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>360.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>Urban</td>\n",
       "      <td>Y</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>63</th>\n",
       "      <td>LP001213</td>\n",
       "      <td>Male</td>\n",
       "      <td>Yes</td>\n",
       "      <td>1</td>\n",
       "      <td>Graduate</td>\n",
       "      <td>No</td>\n",
       "      <td>4945</td>\n",
       "      <td>0.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>360.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>Rural</td>\n",
       "      <td>N</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>81</th>\n",
       "      <td>LP001266</td>\n",
       "      <td>Male</td>\n",
       "      <td>Yes</td>\n",
       "      <td>1</td>\n",
       "      <td>Graduate</td>\n",
       "      <td>Yes</td>\n",
       "      <td>2395</td>\n",
       "      <td>0.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>360.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>Semiurban</td>\n",
       "      <td>Y</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>95</th>\n",
       "      <td>LP001326</td>\n",
       "      <td>Male</td>\n",
       "      <td>Yes</td>\n",
       "      <td>0</td>\n",
       "      <td>Graduate</td>\n",
       "      <td>No</td>\n",
       "      <td>6782</td>\n",
       "      <td>0.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>360.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>Urban</td>\n",
       "      <td>N</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>102</th>\n",
       "      <td>LP001350</td>\n",
       "      <td>Male</td>\n",
       "      <td>Yes</td>\n",
       "      <td>0</td>\n",
       "      <td>Graduate</td>\n",
       "      <td>No</td>\n",
       "      <td>13650</td>\n",
       "      <td>0.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>360.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>Urban</td>\n",
       "      <td>Y</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>103</th>\n",
       "      <td>LP001356</td>\n",
       "      <td>Male</td>\n",
       "      <td>Yes</td>\n",
       "      <td>0</td>\n",
       "      <td>Graduate</td>\n",
       "      <td>No</td>\n",
       "      <td>4652</td>\n",
       "      <td>3583.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>360.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>Semiurban</td>\n",
       "      <td>Y</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>113</th>\n",
       "      <td>LP001392</td>\n",
       "      <td>Female</td>\n",
       "      <td>No</td>\n",
       "      <td>1</td>\n",
       "      <td>Graduate</td>\n",
       "      <td>Yes</td>\n",
       "      <td>7451</td>\n",
       "      <td>0.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>360.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>Semiurban</td>\n",
       "      <td>Y</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>127</th>\n",
       "      <td>LP001449</td>\n",
       "      <td>Male</td>\n",
       "      <td>No</td>\n",
       "      <td>0</td>\n",
       "      <td>Graduate</td>\n",
       "      <td>No</td>\n",
       "      <td>3865</td>\n",
       "      <td>1640.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>360.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>Rural</td>\n",
       "      <td>Y</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>202</th>\n",
       "      <td>LP001682</td>\n",
       "      <td>Male</td>\n",
       "      <td>Yes</td>\n",
       "      <td>3+</td>\n",
       "      <td>Not Graduate</td>\n",
       "      <td>No</td>\n",
       "      <td>3992</td>\n",
       "      <td>0.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>180.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>Urban</td>\n",
       "      <td>N</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>284</th>\n",
       "      <td>LP001922</td>\n",
       "      <td>Male</td>\n",
       "      <td>Yes</td>\n",
       "      <td>0</td>\n",
       "      <td>Graduate</td>\n",
       "      <td>No</td>\n",
       "      <td>20667</td>\n",
       "      <td>0.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>360.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>Rural</td>\n",
       "      <td>N</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>305</th>\n",
       "      <td>LP001990</td>\n",
       "      <td>Male</td>\n",
       "      <td>No</td>\n",
       "      <td>0</td>\n",
       "      <td>Not Graduate</td>\n",
       "      <td>No</td>\n",
       "      <td>2000</td>\n",
       "      <td>0.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>360.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>Urban</td>\n",
       "      <td>N</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>322</th>\n",
       "      <td>LP002054</td>\n",
       "      <td>Male</td>\n",
       "      <td>Yes</td>\n",
       "      <td>2</td>\n",
       "      <td>Not Graduate</td>\n",
       "      <td>No</td>\n",
       "      <td>3601</td>\n",
       "      <td>1590.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>360.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>Rural</td>\n",
       "      <td>Y</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>338</th>\n",
       "      <td>LP002113</td>\n",
       "      <td>Female</td>\n",
       "      <td>No</td>\n",
       "      <td>3+</td>\n",
       "      <td>Not Graduate</td>\n",
       "      <td>No</td>\n",
       "      <td>1830</td>\n",
       "      <td>0.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>360.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>Urban</td>\n",
       "      <td>N</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>387</th>\n",
       "      <td>LP002243</td>\n",
       "      <td>Male</td>\n",
       "      <td>Yes</td>\n",
       "      <td>0</td>\n",
       "      <td>Not Graduate</td>\n",
       "      <td>No</td>\n",
       "      <td>3010</td>\n",
       "      <td>3136.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>360.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>Urban</td>\n",
       "      <td>N</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>435</th>\n",
       "      <td>LP002393</td>\n",
       "      <td>Male</td>\n",
       "      <td>No</td>\n",
       "      <td>0</td>\n",
       "      <td>Graduate</td>\n",
       "      <td>No</td>\n",
       "      <td>10047</td>\n",
       "      <td>0.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>240.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>Semiurban</td>\n",
       "      <td>Y</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>437</th>\n",
       "      <td>LP002401</td>\n",
       "      <td>Male</td>\n",
       "      <td>Yes</td>\n",
       "      <td>0</td>\n",
       "      <td>Graduate</td>\n",
       "      <td>No</td>\n",
       "      <td>2213</td>\n",
       "      <td>1125.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>360.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>Urban</td>\n",
       "      <td>Y</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>479</th>\n",
       "      <td>LP002533</td>\n",
       "      <td>Male</td>\n",
       "      <td>Yes</td>\n",
       "      <td>2</td>\n",
       "      <td>Graduate</td>\n",
       "      <td>No</td>\n",
       "      <td>2947</td>\n",
       "      <td>1603.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>360.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>Urban</td>\n",
       "      <td>N</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>524</th>\n",
       "      <td>LP002697</td>\n",
       "      <td>Male</td>\n",
       "      <td>No</td>\n",
       "      <td>0</td>\n",
       "      <td>Graduate</td>\n",
       "      <td>No</td>\n",
       "      <td>4680</td>\n",
       "      <td>2087.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>360.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>Semiurban</td>\n",
       "      <td>N</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>550</th>\n",
       "      <td>LP002778</td>\n",
       "      <td>Male</td>\n",
       "      <td>Yes</td>\n",
       "      <td>2</td>\n",
       "      <td>Graduate</td>\n",
       "      <td>Yes</td>\n",
       "      <td>6633</td>\n",
       "      <td>0.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>360.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>Rural</td>\n",
       "      <td>N</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>551</th>\n",
       "      <td>LP002784</td>\n",
       "      <td>Male</td>\n",
       "      <td>Yes</td>\n",
       "      <td>1</td>\n",
       "      <td>Not Graduate</td>\n",
       "      <td>No</td>\n",
       "      <td>2492</td>\n",
       "      <td>2375.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>360.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>Rural</td>\n",
       "      <td>Y</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>605</th>\n",
       "      <td>LP002960</td>\n",
       "      <td>Male</td>\n",
       "      <td>Yes</td>\n",
       "      <td>0</td>\n",
       "      <td>Not Graduate</td>\n",
       "      <td>No</td>\n",
       "      <td>2400</td>\n",
       "      <td>3800.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>180.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>Urban</td>\n",
       "      <td>N</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "      Loan_ID  Gender Married Dependents     Education Self_Employed  \\\n",
       "0    LP001002    Male      No          0      Graduate            No   \n",
       "35   LP001106    Male     Yes          0      Graduate            No   \n",
       "63   LP001213    Male     Yes          1      Graduate            No   \n",
       "81   LP001266    Male     Yes          1      Graduate           Yes   \n",
       "95   LP001326    Male     Yes          0      Graduate            No   \n",
       "102  LP001350    Male     Yes          0      Graduate            No   \n",
       "103  LP001356    Male     Yes          0      Graduate            No   \n",
       "113  LP001392  Female      No          1      Graduate           Yes   \n",
       "127  LP001449    Male      No          0      Graduate            No   \n",
       "202  LP001682    Male     Yes         3+  Not Graduate            No   \n",
       "284  LP001922    Male     Yes          0      Graduate            No   \n",
       "305  LP001990    Male      No          0  Not Graduate            No   \n",
       "322  LP002054    Male     Yes          2  Not Graduate            No   \n",
       "338  LP002113  Female      No         3+  Not Graduate            No   \n",
       "387  LP002243    Male     Yes          0  Not Graduate            No   \n",
       "435  LP002393    Male      No          0      Graduate            No   \n",
       "437  LP002401    Male     Yes          0      Graduate            No   \n",
       "479  LP002533    Male     Yes          2      Graduate            No   \n",
       "524  LP002697    Male      No          0      Graduate            No   \n",
       "550  LP002778    Male     Yes          2      Graduate           Yes   \n",
       "551  LP002784    Male     Yes          1  Not Graduate            No   \n",
       "605  LP002960    Male     Yes          0  Not Graduate            No   \n",
       "\n",
       "     ApplicantIncome  CoapplicantIncome  LoanAmount  Loan_Amount_Term  \\\n",
       "0               5849                0.0         NaN             360.0   \n",
       "35              2275             2067.0         NaN             360.0   \n",
       "63              4945                0.0         NaN             360.0   \n",
       "81              2395                0.0         NaN             360.0   \n",
       "95              6782                0.0         NaN             360.0   \n",
       "102            13650                0.0         NaN             360.0   \n",
       "103             4652             3583.0         NaN             360.0   \n",
       "113             7451                0.0         NaN             360.0   \n",
       "127             3865             1640.0         NaN             360.0   \n",
       "202             3992                0.0         NaN             180.0   \n",
       "284            20667                0.0         NaN             360.0   \n",
       "305             2000                0.0         NaN             360.0   \n",
       "322             3601             1590.0         NaN             360.0   \n",
       "338             1830                0.0         NaN             360.0   \n",
       "387             3010             3136.0         NaN             360.0   \n",
       "435            10047                0.0         NaN             240.0   \n",
       "437             2213             1125.0         NaN             360.0   \n",
       "479             2947             1603.0         NaN             360.0   \n",
       "524             4680             2087.0         NaN             360.0   \n",
       "550             6633                0.0         NaN             360.0   \n",
       "551             2492             2375.0         NaN             360.0   \n",
       "605             2400             3800.0         NaN             180.0   \n",
       "\n",
       "     Credit_History Property_Area Loan_Status  \n",
       "0               1.0         Urban           Y  \n",
       "35              1.0         Urban           Y  \n",
       "63              0.0         Rural           N  \n",
       "81              1.0     Semiurban           Y  \n",
       "95              NaN         Urban           N  \n",
       "102             1.0         Urban           Y  \n",
       "103             1.0     Semiurban           Y  \n",
       "113             1.0     Semiurban           Y  \n",
       "127             1.0         Rural           Y  \n",
       "202             1.0         Urban           N  \n",
       "284             1.0         Rural           N  \n",
       "305             1.0         Urban           N  \n",
       "322             1.0         Rural           Y  \n",
       "338             0.0         Urban           N  \n",
       "387             0.0         Urban           N  \n",
       "435             1.0     Semiurban           Y  \n",
       "437             1.0         Urban           Y  \n",
       "479             1.0         Urban           N  \n",
       "524             1.0     Semiurban           N  \n",
       "550             0.0         Rural           N  \n",
       "551             1.0         Rural           Y  \n",
       "605             1.0         Urban           N  "
      ]
     },
     "execution_count": 16,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df[df.LoanAmount.isnull()]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 17,
   "metadata": {
    "scrolled": true
   },
   "outputs": [],
   "source": [
    "df['LoanAmount'] = df.groupby(['Gender','Education','Married','Dependents','Self_Employed']).\\\n",
    "transform(lambda x: x.fillna(x.mean()))['LoanAmount']"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 18,
   "metadata": {
    "scrolled": true
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "<class 'pandas.core.frame.DataFrame'>\n",
      "RangeIndex: 614 entries, 0 to 613\n",
      "Data columns (total 13 columns):\n",
      "Loan_ID              614 non-null object\n",
      "Gender               614 non-null object\n",
      "Married              614 non-null object\n",
      "Dependents           614 non-null object\n",
      "Education            614 non-null object\n",
      "Self_Employed        614 non-null object\n",
      "ApplicantIncome      614 non-null int64\n",
      "CoapplicantIncome    614 non-null float64\n",
      "LoanAmount           613 non-null float64\n",
      "Loan_Amount_Term     600 non-null float64\n",
      "Credit_History       564 non-null float64\n",
      "Property_Area        614 non-null object\n",
      "Loan_Status          614 non-null object\n",
      "dtypes: float64(4), int64(1), object(8)\n",
      "memory usage: 62.4+ KB\n"
     ]
    }
   ],
   "source": [
    "df.info()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 19,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style>\n",
       "    .dataframe thead tr:only-child th {\n",
       "        text-align: right;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: left;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Loan_ID</th>\n",
       "      <th>Gender</th>\n",
       "      <th>Married</th>\n",
       "      <th>Dependents</th>\n",
       "      <th>Education</th>\n",
       "      <th>Self_Employed</th>\n",
       "      <th>ApplicantIncome</th>\n",
       "      <th>CoapplicantIncome</th>\n",
       "      <th>LoanAmount</th>\n",
       "      <th>Loan_Amount_Term</th>\n",
       "      <th>Credit_History</th>\n",
       "      <th>Property_Area</th>\n",
       "      <th>Loan_Status</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>338</th>\n",
       "      <td>LP002113</td>\n",
       "      <td>Female</td>\n",
       "      <td>No</td>\n",
       "      <td>3+</td>\n",
       "      <td>Not Graduate</td>\n",
       "      <td>No</td>\n",
       "      <td>1830</td>\n",
       "      <td>0.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>360.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>Urban</td>\n",
       "      <td>N</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "      Loan_ID  Gender Married Dependents     Education Self_Employed  \\\n",
       "338  LP002113  Female      No         3+  Not Graduate            No   \n",
       "\n",
       "     ApplicantIncome  CoapplicantIncome  LoanAmount  Loan_Amount_Term  \\\n",
       "338             1830                0.0         NaN             360.0   \n",
       "\n",
       "     Credit_History Property_Area Loan_Status  \n",
       "338             0.0         Urban           N  "
      ]
     },
     "execution_count": 19,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df[df.LoanAmount.isnull()]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 20,
   "metadata": {},
   "outputs": [],
   "source": [
    "# drop the one row above\n",
    "\n",
    "df = df[df['Loan_ID']!='LP002113']"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### Loan_Amount_Term"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 21,
   "metadata": {
    "scrolled": true
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style>\n",
       "    .dataframe thead tr:only-child th {\n",
       "        text-align: right;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: left;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Loan_ID</th>\n",
       "      <th>Gender</th>\n",
       "      <th>Married</th>\n",
       "      <th>Dependents</th>\n",
       "      <th>Education</th>\n",
       "      <th>Self_Employed</th>\n",
       "      <th>ApplicantIncome</th>\n",
       "      <th>CoapplicantIncome</th>\n",
       "      <th>LoanAmount</th>\n",
       "      <th>Loan_Amount_Term</th>\n",
       "      <th>Credit_History</th>\n",
       "      <th>Property_Area</th>\n",
       "      <th>Loan_Status</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>19</th>\n",
       "      <td>LP001041</td>\n",
       "      <td>Male</td>\n",
       "      <td>Yes</td>\n",
       "      <td>0</td>\n",
       "      <td>Graduate</td>\n",
       "      <td>Yes</td>\n",
       "      <td>2600</td>\n",
       "      <td>3500.0</td>\n",
       "      <td>115.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>1.0</td>\n",
       "      <td>Urban</td>\n",
       "      <td>Y</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>36</th>\n",
       "      <td>LP001109</td>\n",
       "      <td>Male</td>\n",
       "      <td>Yes</td>\n",
       "      <td>0</td>\n",
       "      <td>Graduate</td>\n",
       "      <td>No</td>\n",
       "      <td>1828</td>\n",
       "      <td>1330.0</td>\n",
       "      <td>100.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>0.0</td>\n",
       "      <td>Urban</td>\n",
       "      <td>N</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>44</th>\n",
       "      <td>LP001136</td>\n",
       "      <td>Male</td>\n",
       "      <td>Yes</td>\n",
       "      <td>0</td>\n",
       "      <td>Not Graduate</td>\n",
       "      <td>Yes</td>\n",
       "      <td>4695</td>\n",
       "      <td>0.0</td>\n",
       "      <td>96.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>1.0</td>\n",
       "      <td>Urban</td>\n",
       "      <td>Y</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>45</th>\n",
       "      <td>LP001137</td>\n",
       "      <td>Female</td>\n",
       "      <td>No</td>\n",
       "      <td>0</td>\n",
       "      <td>Graduate</td>\n",
       "      <td>No</td>\n",
       "      <td>3410</td>\n",
       "      <td>0.0</td>\n",
       "      <td>88.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>1.0</td>\n",
       "      <td>Urban</td>\n",
       "      <td>Y</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>73</th>\n",
       "      <td>LP001250</td>\n",
       "      <td>Male</td>\n",
       "      <td>Yes</td>\n",
       "      <td>3+</td>\n",
       "      <td>Not Graduate</td>\n",
       "      <td>No</td>\n",
       "      <td>4755</td>\n",
       "      <td>0.0</td>\n",
       "      <td>95.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>0.0</td>\n",
       "      <td>Semiurban</td>\n",
       "      <td>N</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>112</th>\n",
       "      <td>LP001391</td>\n",
       "      <td>Male</td>\n",
       "      <td>Yes</td>\n",
       "      <td>0</td>\n",
       "      <td>Not Graduate</td>\n",
       "      <td>No</td>\n",
       "      <td>3572</td>\n",
       "      <td>4114.0</td>\n",
       "      <td>152.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>0.0</td>\n",
       "      <td>Rural</td>\n",
       "      <td>N</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>165</th>\n",
       "      <td>LP001574</td>\n",
       "      <td>Male</td>\n",
       "      <td>Yes</td>\n",
       "      <td>0</td>\n",
       "      <td>Graduate</td>\n",
       "      <td>No</td>\n",
       "      <td>3707</td>\n",
       "      <td>3166.0</td>\n",
       "      <td>182.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>1.0</td>\n",
       "      <td>Rural</td>\n",
       "      <td>Y</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>197</th>\n",
       "      <td>LP001669</td>\n",
       "      <td>Female</td>\n",
       "      <td>No</td>\n",
       "      <td>0</td>\n",
       "      <td>Not Graduate</td>\n",
       "      <td>No</td>\n",
       "      <td>1907</td>\n",
       "      <td>2365.0</td>\n",
       "      <td>120.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>1.0</td>\n",
       "      <td>Urban</td>\n",
       "      <td>Y</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>223</th>\n",
       "      <td>LP001749</td>\n",
       "      <td>Male</td>\n",
       "      <td>Yes</td>\n",
       "      <td>0</td>\n",
       "      <td>Graduate</td>\n",
       "      <td>No</td>\n",
       "      <td>7578</td>\n",
       "      <td>1010.0</td>\n",
       "      <td>175.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>1.0</td>\n",
       "      <td>Semiurban</td>\n",
       "      <td>Y</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>232</th>\n",
       "      <td>LP001770</td>\n",
       "      <td>Male</td>\n",
       "      <td>No</td>\n",
       "      <td>0</td>\n",
       "      <td>Not Graduate</td>\n",
       "      <td>No</td>\n",
       "      <td>3189</td>\n",
       "      <td>2598.0</td>\n",
       "      <td>120.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>1.0</td>\n",
       "      <td>Rural</td>\n",
       "      <td>Y</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>335</th>\n",
       "      <td>LP002106</td>\n",
       "      <td>Male</td>\n",
       "      <td>Yes</td>\n",
       "      <td>1</td>\n",
       "      <td>Graduate</td>\n",
       "      <td>Yes</td>\n",
       "      <td>5503</td>\n",
       "      <td>4490.0</td>\n",
       "      <td>70.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>1.0</td>\n",
       "      <td>Semiurban</td>\n",
       "      <td>Y</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>367</th>\n",
       "      <td>LP002188</td>\n",
       "      <td>Male</td>\n",
       "      <td>No</td>\n",
       "      <td>0</td>\n",
       "      <td>Graduate</td>\n",
       "      <td>No</td>\n",
       "      <td>5124</td>\n",
       "      <td>0.0</td>\n",
       "      <td>124.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>0.0</td>\n",
       "      <td>Rural</td>\n",
       "      <td>N</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>421</th>\n",
       "      <td>LP002357</td>\n",
       "      <td>Female</td>\n",
       "      <td>No</td>\n",
       "      <td>0</td>\n",
       "      <td>Not Graduate</td>\n",
       "      <td>No</td>\n",
       "      <td>2720</td>\n",
       "      <td>0.0</td>\n",
       "      <td>80.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>0.0</td>\n",
       "      <td>Urban</td>\n",
       "      <td>N</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>423</th>\n",
       "      <td>LP002362</td>\n",
       "      <td>Male</td>\n",
       "      <td>Yes</td>\n",
       "      <td>1</td>\n",
       "      <td>Graduate</td>\n",
       "      <td>No</td>\n",
       "      <td>7250</td>\n",
       "      <td>1667.0</td>\n",
       "      <td>110.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>0.0</td>\n",
       "      <td>Urban</td>\n",
       "      <td>N</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "      Loan_ID  Gender Married Dependents     Education Self_Employed  \\\n",
       "19   LP001041    Male     Yes          0      Graduate           Yes   \n",
       "36   LP001109    Male     Yes          0      Graduate            No   \n",
       "44   LP001136    Male     Yes          0  Not Graduate           Yes   \n",
       "45   LP001137  Female      No          0      Graduate            No   \n",
       "73   LP001250    Male     Yes         3+  Not Graduate            No   \n",
       "112  LP001391    Male     Yes          0  Not Graduate            No   \n",
       "165  LP001574    Male     Yes          0      Graduate            No   \n",
       "197  LP001669  Female      No          0  Not Graduate            No   \n",
       "223  LP001749    Male     Yes          0      Graduate            No   \n",
       "232  LP001770    Male      No          0  Not Graduate            No   \n",
       "335  LP002106    Male     Yes          1      Graduate           Yes   \n",
       "367  LP002188    Male      No          0      Graduate            No   \n",
       "421  LP002357  Female      No          0  Not Graduate            No   \n",
       "423  LP002362    Male     Yes          1      Graduate            No   \n",
       "\n",
       "     ApplicantIncome  CoapplicantIncome  LoanAmount  Loan_Amount_Term  \\\n",
       "19              2600             3500.0       115.0               NaN   \n",
       "36              1828             1330.0       100.0               NaN   \n",
       "44              4695                0.0        96.0               NaN   \n",
       "45              3410                0.0        88.0               NaN   \n",
       "73              4755                0.0        95.0               NaN   \n",
       "112             3572             4114.0       152.0               NaN   \n",
       "165             3707             3166.0       182.0               NaN   \n",
       "197             1907             2365.0       120.0               NaN   \n",
       "223             7578             1010.0       175.0               NaN   \n",
       "232             3189             2598.0       120.0               NaN   \n",
       "335             5503             4490.0        70.0               NaN   \n",
       "367             5124                0.0       124.0               NaN   \n",
       "421             2720                0.0        80.0               NaN   \n",
       "423             7250             1667.0       110.0               NaN   \n",
       "\n",
       "     Credit_History Property_Area Loan_Status  \n",
       "19              1.0         Urban           Y  \n",
       "36              0.0         Urban           N  \n",
       "44              1.0         Urban           Y  \n",
       "45              1.0         Urban           Y  \n",
       "73              0.0     Semiurban           N  \n",
       "112             0.0         Rural           N  \n",
       "165             1.0         Rural           Y  \n",
       "197             1.0         Urban           Y  \n",
       "223             1.0     Semiurban           Y  \n",
       "232             1.0         Rural           Y  \n",
       "335             1.0     Semiurban           Y  \n",
       "367             0.0         Rural           N  \n",
       "421             0.0         Urban           N  \n",
       "423             0.0         Urban           N  "
      ]
     },
     "execution_count": 21,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df[df.Loan_Amount_Term.isnull()]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 22,
   "metadata": {
    "collapsed": true
   },
   "outputs": [],
   "source": [
    "df['Loan_Amount_Term'] = df.groupby(['Gender','Education','Married','Dependents','Self_Employed']).\\\n",
    "transform(lambda x: x.fillna(x.mean()))['Loan_Amount_Term']"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 23,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "<class 'pandas.core.frame.DataFrame'>\n",
      "Int64Index: 613 entries, 0 to 613\n",
      "Data columns (total 13 columns):\n",
      "Loan_ID              613 non-null object\n",
      "Gender               613 non-null object\n",
      "Married              613 non-null object\n",
      "Dependents           613 non-null object\n",
      "Education            613 non-null object\n",
      "Self_Employed        613 non-null object\n",
      "ApplicantIncome      613 non-null int64\n",
      "CoapplicantIncome    613 non-null float64\n",
      "LoanAmount           613 non-null float64\n",
      "Loan_Amount_Term     613 non-null float64\n",
      "Credit_History       563 non-null float64\n",
      "Property_Area        613 non-null object\n",
      "Loan_Status          613 non-null object\n",
      "dtypes: float64(4), int64(1), object(8)\n",
      "memory usage: 67.0+ KB\n"
     ]
    }
   ],
   "source": [
    "df.info()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### Credit History"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 24,
   "metadata": {
    "scrolled": true
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style>\n",
       "    .dataframe thead tr:only-child th {\n",
       "        text-align: right;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: left;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Loan_ID</th>\n",
       "      <th>Gender</th>\n",
       "      <th>Married</th>\n",
       "      <th>Dependents</th>\n",
       "      <th>Education</th>\n",
       "      <th>Self_Employed</th>\n",
       "      <th>ApplicantIncome</th>\n",
       "      <th>CoapplicantIncome</th>\n",
       "      <th>LoanAmount</th>\n",
       "      <th>Loan_Amount_Term</th>\n",
       "      <th>Credit_History</th>\n",
       "      <th>Property_Area</th>\n",
       "      <th>Loan_Status</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>16</th>\n",
       "      <td>LP001034</td>\n",
       "      <td>Male</td>\n",
       "      <td>No</td>\n",
       "      <td>1</td>\n",
       "      <td>Not Graduate</td>\n",
       "      <td>No</td>\n",
       "      <td>3596</td>\n",
       "      <td>0.0</td>\n",
       "      <td>100.00000</td>\n",
       "      <td>240.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>Urban</td>\n",
       "      <td>Y</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>24</th>\n",
       "      <td>LP001052</td>\n",
       "      <td>Male</td>\n",
       "      <td>Yes</td>\n",
       "      <td>1</td>\n",
       "      <td>Graduate</td>\n",
       "      <td>No</td>\n",
       "      <td>3717</td>\n",
       "      <td>2925.0</td>\n",
       "      <td>151.00000</td>\n",
       "      <td>360.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>Semiurban</td>\n",
       "      <td>N</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>30</th>\n",
       "      <td>LP001091</td>\n",
       "      <td>Male</td>\n",
       "      <td>No</td>\n",
       "      <td>1</td>\n",
       "      <td>Graduate</td>\n",
       "      <td>No</td>\n",
       "      <td>4166</td>\n",
       "      <td>3369.0</td>\n",
       "      <td>201.00000</td>\n",
       "      <td>360.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>Urban</td>\n",
       "      <td>N</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>42</th>\n",
       "      <td>LP001123</td>\n",
       "      <td>Male</td>\n",
       "      <td>Yes</td>\n",
       "      <td>0</td>\n",
       "      <td>Graduate</td>\n",
       "      <td>No</td>\n",
       "      <td>2400</td>\n",
       "      <td>0.0</td>\n",
       "      <td>75.00000</td>\n",
       "      <td>360.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>Urban</td>\n",
       "      <td>Y</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>79</th>\n",
       "      <td>LP001264</td>\n",
       "      <td>Male</td>\n",
       "      <td>Yes</td>\n",
       "      <td>3+</td>\n",
       "      <td>Not Graduate</td>\n",
       "      <td>Yes</td>\n",
       "      <td>3333</td>\n",
       "      <td>2166.0</td>\n",
       "      <td>130.00000</td>\n",
       "      <td>360.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>Semiurban</td>\n",
       "      <td>Y</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>83</th>\n",
       "      <td>LP001273</td>\n",
       "      <td>Male</td>\n",
       "      <td>Yes</td>\n",
       "      <td>0</td>\n",
       "      <td>Graduate</td>\n",
       "      <td>No</td>\n",
       "      <td>6000</td>\n",
       "      <td>2250.0</td>\n",
       "      <td>265.00000</td>\n",
       "      <td>360.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>Semiurban</td>\n",
       "      <td>N</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>86</th>\n",
       "      <td>LP001280</td>\n",
       "      <td>Male</td>\n",
       "      <td>Yes</td>\n",
       "      <td>2</td>\n",
       "      <td>Not Graduate</td>\n",
       "      <td>No</td>\n",
       "      <td>3333</td>\n",
       "      <td>2000.0</td>\n",
       "      <td>99.00000</td>\n",
       "      <td>360.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>Semiurban</td>\n",
       "      <td>Y</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>95</th>\n",
       "      <td>LP001326</td>\n",
       "      <td>Male</td>\n",
       "      <td>Yes</td>\n",
       "      <td>0</td>\n",
       "      <td>Graduate</td>\n",
       "      <td>No</td>\n",
       "      <td>6782</td>\n",
       "      <td>0.0</td>\n",
       "      <td>153.12844</td>\n",
       "      <td>360.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>Urban</td>\n",
       "      <td>N</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>117</th>\n",
       "      <td>LP001405</td>\n",
       "      <td>Male</td>\n",
       "      <td>Yes</td>\n",
       "      <td>1</td>\n",
       "      <td>Graduate</td>\n",
       "      <td>No</td>\n",
       "      <td>2214</td>\n",
       "      <td>1398.0</td>\n",
       "      <td>85.00000</td>\n",
       "      <td>360.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>Urban</td>\n",
       "      <td>Y</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>125</th>\n",
       "      <td>LP001443</td>\n",
       "      <td>Female</td>\n",
       "      <td>No</td>\n",
       "      <td>0</td>\n",
       "      <td>Graduate</td>\n",
       "      <td>No</td>\n",
       "      <td>3692</td>\n",
       "      <td>0.0</td>\n",
       "      <td>93.00000</td>\n",
       "      <td>360.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>Rural</td>\n",
       "      <td>Y</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>129</th>\n",
       "      <td>LP001465</td>\n",
       "      <td>Male</td>\n",
       "      <td>Yes</td>\n",
       "      <td>0</td>\n",
       "      <td>Graduate</td>\n",
       "      <td>No</td>\n",
       "      <td>6080</td>\n",
       "      <td>2569.0</td>\n",
       "      <td>182.00000</td>\n",
       "      <td>360.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>Rural</td>\n",
       "      <td>N</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>130</th>\n",
       "      <td>LP001469</td>\n",
       "      <td>Male</td>\n",
       "      <td>No</td>\n",
       "      <td>0</td>\n",
       "      <td>Graduate</td>\n",
       "      <td>Yes</td>\n",
       "      <td>20166</td>\n",
       "      <td>0.0</td>\n",
       "      <td>650.00000</td>\n",
       "      <td>480.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>Urban</td>\n",
       "      <td>Y</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>156</th>\n",
       "      <td>LP001541</td>\n",
       "      <td>Male</td>\n",
       "      <td>Yes</td>\n",
       "      <td>1</td>\n",
       "      <td>Graduate</td>\n",
       "      <td>No</td>\n",
       "      <td>6000</td>\n",
       "      <td>0.0</td>\n",
       "      <td>160.00000</td>\n",
       "      <td>360.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>Rural</td>\n",
       "      <td>Y</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>181</th>\n",
       "      <td>LP001634</td>\n",
       "      <td>Male</td>\n",
       "      <td>No</td>\n",
       "      <td>0</td>\n",
       "      <td>Graduate</td>\n",
       "      <td>No</td>\n",
       "      <td>1916</td>\n",
       "      <td>5063.0</td>\n",
       "      <td>67.00000</td>\n",
       "      <td>360.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>Rural</td>\n",
       "      <td>N</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>187</th>\n",
       "      <td>LP001643</td>\n",
       "      <td>Male</td>\n",
       "      <td>Yes</td>\n",
       "      <td>0</td>\n",
       "      <td>Graduate</td>\n",
       "      <td>No</td>\n",
       "      <td>2383</td>\n",
       "      <td>2138.0</td>\n",
       "      <td>58.00000</td>\n",
       "      <td>360.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>Rural</td>\n",
       "      <td>Y</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>198</th>\n",
       "      <td>LP001671</td>\n",
       "      <td>Female</td>\n",
       "      <td>Yes</td>\n",
       "      <td>0</td>\n",
       "      <td>Graduate</td>\n",
       "      <td>No</td>\n",
       "      <td>3416</td>\n",
       "      <td>2816.0</td>\n",
       "      <td>113.00000</td>\n",
       "      <td>360.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>Semiurban</td>\n",
       "      <td>Y</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>219</th>\n",
       "      <td>LP001734</td>\n",
       "      <td>Female</td>\n",
       "      <td>Yes</td>\n",
       "      <td>2</td>\n",
       "      <td>Graduate</td>\n",
       "      <td>No</td>\n",
       "      <td>4283</td>\n",
       "      <td>2383.0</td>\n",
       "      <td>127.00000</td>\n",
       "      <td>360.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>Semiurban</td>\n",
       "      <td>Y</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>236</th>\n",
       "      <td>LP001786</td>\n",
       "      <td>Male</td>\n",
       "      <td>No</td>\n",
       "      <td>0</td>\n",
       "      <td>Graduate</td>\n",
       "      <td>Yes</td>\n",
       "      <td>5746</td>\n",
       "      <td>0.0</td>\n",
       "      <td>255.00000</td>\n",
       "      <td>360.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>Urban</td>\n",
       "      <td>N</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>237</th>\n",
       "      <td>LP001788</td>\n",
       "      <td>Female</td>\n",
       "      <td>No</td>\n",
       "      <td>0</td>\n",
       "      <td>Graduate</td>\n",
       "      <td>Yes</td>\n",
       "      <td>3463</td>\n",
       "      <td>0.0</td>\n",
       "      <td>122.00000</td>\n",
       "      <td>360.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>Urban</td>\n",
       "      <td>Y</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>259</th>\n",
       "      <td>LP001864</td>\n",
       "      <td>Male</td>\n",
       "      <td>Yes</td>\n",
       "      <td>3+</td>\n",
       "      <td>Not Graduate</td>\n",
       "      <td>No</td>\n",
       "      <td>4931</td>\n",
       "      <td>0.0</td>\n",
       "      <td>128.00000</td>\n",
       "      <td>360.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>Semiurban</td>\n",
       "      <td>N</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>260</th>\n",
       "      <td>LP001865</td>\n",
       "      <td>Male</td>\n",
       "      <td>Yes</td>\n",
       "      <td>1</td>\n",
       "      <td>Graduate</td>\n",
       "      <td>No</td>\n",
       "      <td>6083</td>\n",
       "      <td>4250.0</td>\n",
       "      <td>330.00000</td>\n",
       "      <td>360.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>Urban</td>\n",
       "      <td>Y</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>279</th>\n",
       "      <td>LP001908</td>\n",
       "      <td>Female</td>\n",
       "      <td>Yes</td>\n",
       "      <td>0</td>\n",
       "      <td>Not Graduate</td>\n",
       "      <td>No</td>\n",
       "      <td>4100</td>\n",
       "      <td>0.0</td>\n",
       "      <td>124.00000</td>\n",
       "      <td>360.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>Rural</td>\n",
       "      <td>Y</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>309</th>\n",
       "      <td>LP001998</td>\n",
       "      <td>Male</td>\n",
       "      <td>Yes</td>\n",
       "      <td>2</td>\n",
       "      <td>Not Graduate</td>\n",
       "      <td>No</td>\n",
       "      <td>7667</td>\n",
       "      <td>0.0</td>\n",
       "      <td>185.00000</td>\n",
       "      <td>360.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>Rural</td>\n",
       "      <td>Y</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>313</th>\n",
       "      <td>LP002008</td>\n",
       "      <td>Male</td>\n",
       "      <td>Yes</td>\n",
       "      <td>2</td>\n",
       "      <td>Graduate</td>\n",
       "      <td>Yes</td>\n",
       "      <td>5746</td>\n",
       "      <td>0.0</td>\n",
       "      <td>144.00000</td>\n",
       "      <td>84.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>Rural</td>\n",
       "      <td>Y</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>317</th>\n",
       "      <td>LP002036</td>\n",
       "      <td>Male</td>\n",
       "      <td>Yes</td>\n",
       "      <td>0</td>\n",
       "      <td>Graduate</td>\n",
       "      <td>No</td>\n",
       "      <td>2058</td>\n",
       "      <td>2134.0</td>\n",
       "      <td>88.00000</td>\n",
       "      <td>360.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>Urban</td>\n",
       "      <td>Y</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>318</th>\n",
       "      <td>LP002043</td>\n",
       "      <td>Female</td>\n",
       "      <td>No</td>\n",
       "      <td>1</td>\n",
       "      <td>Graduate</td>\n",
       "      <td>No</td>\n",
       "      <td>3541</td>\n",
       "      <td>0.0</td>\n",
       "      <td>112.00000</td>\n",
       "      <td>360.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>Semiurban</td>\n",
       "      <td>Y</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>323</th>\n",
       "      <td>LP002055</td>\n",
       "      <td>Female</td>\n",
       "      <td>No</td>\n",
       "      <td>0</td>\n",
       "      <td>Graduate</td>\n",
       "      <td>No</td>\n",
       "      <td>3166</td>\n",
       "      <td>2985.0</td>\n",
       "      <td>132.00000</td>\n",
       "      <td>360.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>Rural</td>\n",
       "      <td>Y</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>348</th>\n",
       "      <td>LP002137</td>\n",
       "      <td>Male</td>\n",
       "      <td>Yes</td>\n",
       "      <td>0</td>\n",
       "      <td>Graduate</td>\n",
       "      <td>No</td>\n",
       "      <td>6333</td>\n",
       "      <td>4583.0</td>\n",
       "      <td>259.00000</td>\n",
       "      <td>360.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>Semiurban</td>\n",
       "      <td>Y</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>363</th>\n",
       "      <td>LP002178</td>\n",
       "      <td>Male</td>\n",
       "      <td>Yes</td>\n",
       "      <td>0</td>\n",
       "      <td>Graduate</td>\n",
       "      <td>No</td>\n",
       "      <td>3013</td>\n",
       "      <td>3033.0</td>\n",
       "      <td>95.00000</td>\n",
       "      <td>300.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>Urban</td>\n",
       "      <td>Y</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>377</th>\n",
       "      <td>LP002223</td>\n",
       "      <td>Male</td>\n",
       "      <td>Yes</td>\n",
       "      <td>0</td>\n",
       "      <td>Graduate</td>\n",
       "      <td>No</td>\n",
       "      <td>4310</td>\n",
       "      <td>0.0</td>\n",
       "      <td>130.00000</td>\n",
       "      <td>360.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>Semiurban</td>\n",
       "      <td>Y</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>392</th>\n",
       "      <td>LP002263</td>\n",
       "      <td>Male</td>\n",
       "      <td>Yes</td>\n",
       "      <td>0</td>\n",
       "      <td>Graduate</td>\n",
       "      <td>No</td>\n",
       "      <td>2583</td>\n",
       "      <td>2115.0</td>\n",
       "      <td>120.00000</td>\n",
       "      <td>360.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>Urban</td>\n",
       "      <td>Y</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>395</th>\n",
       "      <td>LP002272</td>\n",
       "      <td>Male</td>\n",
       "      <td>Yes</td>\n",
       "      <td>2</td>\n",
       "      <td>Graduate</td>\n",
       "      <td>No</td>\n",
       "      <td>3276</td>\n",
       "      <td>484.0</td>\n",
       "      <td>135.00000</td>\n",
       "      <td>360.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>Semiurban</td>\n",
       "      <td>Y</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>411</th>\n",
       "      <td>LP002319</td>\n",
       "      <td>Male</td>\n",
       "      <td>Yes</td>\n",
       "      <td>0</td>\n",
       "      <td>Graduate</td>\n",
       "      <td>No</td>\n",
       "      <td>6256</td>\n",
       "      <td>0.0</td>\n",
       "      <td>160.00000</td>\n",
       "      <td>360.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>Urban</td>\n",
       "      <td>Y</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>444</th>\n",
       "      <td>LP002424</td>\n",
       "      <td>Male</td>\n",
       "      <td>Yes</td>\n",
       "      <td>0</td>\n",
       "      <td>Graduate</td>\n",
       "      <td>No</td>\n",
       "      <td>7333</td>\n",
       "      <td>8333.0</td>\n",
       "      <td>175.00000</td>\n",
       "      <td>300.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>Rural</td>\n",
       "      <td>Y</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>449</th>\n",
       "      <td>LP002444</td>\n",
       "      <td>Male</td>\n",
       "      <td>No</td>\n",
       "      <td>1</td>\n",
       "      <td>Not Graduate</td>\n",
       "      <td>Yes</td>\n",
       "      <td>2769</td>\n",
       "      <td>1542.0</td>\n",
       "      <td>190.00000</td>\n",
       "      <td>360.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>Semiurban</td>\n",
       "      <td>N</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>451</th>\n",
       "      <td>LP002447</td>\n",
       "      <td>Male</td>\n",
       "      <td>Yes</td>\n",
       "      <td>2</td>\n",
       "      <td>Not Graduate</td>\n",
       "      <td>No</td>\n",
       "      <td>1958</td>\n",
       "      <td>1456.0</td>\n",
       "      <td>60.00000</td>\n",
       "      <td>300.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>Urban</td>\n",
       "      <td>Y</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>460</th>\n",
       "      <td>LP002478</td>\n",
       "      <td>Male</td>\n",
       "      <td>Yes</td>\n",
       "      <td>0</td>\n",
       "      <td>Graduate</td>\n",
       "      <td>Yes</td>\n",
       "      <td>2083</td>\n",
       "      <td>4083.0</td>\n",
       "      <td>160.00000</td>\n",
       "      <td>360.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>Semiurban</td>\n",
       "      <td>Y</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>473</th>\n",
       "      <td>LP002522</td>\n",
       "      <td>Female</td>\n",
       "      <td>No</td>\n",
       "      <td>0</td>\n",
       "      <td>Graduate</td>\n",
       "      <td>Yes</td>\n",
       "      <td>2500</td>\n",
       "      <td>0.0</td>\n",
       "      <td>93.00000</td>\n",
       "      <td>360.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>Urban</td>\n",
       "      <td>Y</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>490</th>\n",
       "      <td>LP002560</td>\n",
       "      <td>Male</td>\n",
       "      <td>No</td>\n",
       "      <td>0</td>\n",
       "      <td>Not Graduate</td>\n",
       "      <td>No</td>\n",
       "      <td>2699</td>\n",
       "      <td>2785.0</td>\n",
       "      <td>96.00000</td>\n",
       "      <td>360.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>Semiurban</td>\n",
       "      <td>Y</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>491</th>\n",
       "      <td>LP002562</td>\n",
       "      <td>Male</td>\n",
       "      <td>Yes</td>\n",
       "      <td>1</td>\n",
       "      <td>Not Graduate</td>\n",
       "      <td>No</td>\n",
       "      <td>5333</td>\n",
       "      <td>1131.0</td>\n",
       "      <td>186.00000</td>\n",
       "      <td>360.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>Urban</td>\n",
       "      <td>Y</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>497</th>\n",
       "      <td>LP002588</td>\n",
       "      <td>Male</td>\n",
       "      <td>Yes</td>\n",
       "      <td>0</td>\n",
       "      <td>Graduate</td>\n",
       "      <td>No</td>\n",
       "      <td>4625</td>\n",
       "      <td>2857.0</td>\n",
       "      <td>111.00000</td>\n",
       "      <td>12.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>Urban</td>\n",
       "      <td>Y</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>503</th>\n",
       "      <td>LP002618</td>\n",
       "      <td>Male</td>\n",
       "      <td>Yes</td>\n",
       "      <td>1</td>\n",
       "      <td>Not Graduate</td>\n",
       "      <td>No</td>\n",
       "      <td>4050</td>\n",
       "      <td>5302.0</td>\n",
       "      <td>138.00000</td>\n",
       "      <td>360.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>Rural</td>\n",
       "      <td>N</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>506</th>\n",
       "      <td>LP002624</td>\n",
       "      <td>Male</td>\n",
       "      <td>Yes</td>\n",
       "      <td>0</td>\n",
       "      <td>Graduate</td>\n",
       "      <td>No</td>\n",
       "      <td>20833</td>\n",
       "      <td>6667.0</td>\n",
       "      <td>480.00000</td>\n",
       "      <td>360.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>Urban</td>\n",
       "      <td>Y</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>530</th>\n",
       "      <td>LP002717</td>\n",
       "      <td>Male</td>\n",
       "      <td>Yes</td>\n",
       "      <td>0</td>\n",
       "      <td>Graduate</td>\n",
       "      <td>No</td>\n",
       "      <td>1025</td>\n",
       "      <td>5500.0</td>\n",
       "      <td>216.00000</td>\n",
       "      <td>360.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>Rural</td>\n",
       "      <td>Y</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>533</th>\n",
       "      <td>LP002729</td>\n",
       "      <td>Male</td>\n",
       "      <td>No</td>\n",
       "      <td>1</td>\n",
       "      <td>Graduate</td>\n",
       "      <td>No</td>\n",
       "      <td>11250</td>\n",
       "      <td>0.0</td>\n",
       "      <td>196.00000</td>\n",
       "      <td>360.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>Semiurban</td>\n",
       "      <td>N</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>544</th>\n",
       "      <td>LP002757</td>\n",
       "      <td>Female</td>\n",
       "      <td>Yes</td>\n",
       "      <td>0</td>\n",
       "      <td>Not Graduate</td>\n",
       "      <td>No</td>\n",
       "      <td>3017</td>\n",
       "      <td>663.0</td>\n",
       "      <td>102.00000</td>\n",
       "      <td>360.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>Semiurban</td>\n",
       "      <td>Y</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>556</th>\n",
       "      <td>LP002794</td>\n",
       "      <td>Female</td>\n",
       "      <td>No</td>\n",
       "      <td>0</td>\n",
       "      <td>Graduate</td>\n",
       "      <td>No</td>\n",
       "      <td>2667</td>\n",
       "      <td>1625.0</td>\n",
       "      <td>84.00000</td>\n",
       "      <td>360.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>Urban</td>\n",
       "      <td>Y</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>565</th>\n",
       "      <td>LP002833</td>\n",
       "      <td>Male</td>\n",
       "      <td>Yes</td>\n",
       "      <td>0</td>\n",
       "      <td>Not Graduate</td>\n",
       "      <td>No</td>\n",
       "      <td>4467</td>\n",
       "      <td>0.0</td>\n",
       "      <td>120.00000</td>\n",
       "      <td>360.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>Rural</td>\n",
       "      <td>Y</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>583</th>\n",
       "      <td>LP002898</td>\n",
       "      <td>Male</td>\n",
       "      <td>Yes</td>\n",
       "      <td>1</td>\n",
       "      <td>Graduate</td>\n",
       "      <td>No</td>\n",
       "      <td>1880</td>\n",
       "      <td>0.0</td>\n",
       "      <td>61.00000</td>\n",
       "      <td>360.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>Rural</td>\n",
       "      <td>N</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>600</th>\n",
       "      <td>LP002949</td>\n",
       "      <td>Female</td>\n",
       "      <td>Yes</td>\n",
       "      <td>3+</td>\n",
       "      <td>Graduate</td>\n",
       "      <td>No</td>\n",
       "      <td>416</td>\n",
       "      <td>41667.0</td>\n",
       "      <td>350.00000</td>\n",
       "      <td>180.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>Urban</td>\n",
       "      <td>N</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "      Loan_ID  Gender Married Dependents     Education Self_Employed  \\\n",
       "16   LP001034    Male      No          1  Not Graduate            No   \n",
       "24   LP001052    Male     Yes          1      Graduate            No   \n",
       "30   LP001091    Male      No          1      Graduate            No   \n",
       "42   LP001123    Male     Yes          0      Graduate            No   \n",
       "79   LP001264    Male     Yes         3+  Not Graduate           Yes   \n",
       "83   LP001273    Male     Yes          0      Graduate            No   \n",
       "86   LP001280    Male     Yes          2  Not Graduate            No   \n",
       "95   LP001326    Male     Yes          0      Graduate            No   \n",
       "117  LP001405    Male     Yes          1      Graduate            No   \n",
       "125  LP001443  Female      No          0      Graduate            No   \n",
       "129  LP001465    Male     Yes          0      Graduate            No   \n",
       "130  LP001469    Male      No          0      Graduate           Yes   \n",
       "156  LP001541    Male     Yes          1      Graduate            No   \n",
       "181  LP001634    Male      No          0      Graduate            No   \n",
       "187  LP001643    Male     Yes          0      Graduate            No   \n",
       "198  LP001671  Female     Yes          0      Graduate            No   \n",
       "219  LP001734  Female     Yes          2      Graduate            No   \n",
       "236  LP001786    Male      No          0      Graduate           Yes   \n",
       "237  LP001788  Female      No          0      Graduate           Yes   \n",
       "259  LP001864    Male     Yes         3+  Not Graduate            No   \n",
       "260  LP001865    Male     Yes          1      Graduate            No   \n",
       "279  LP001908  Female     Yes          0  Not Graduate            No   \n",
       "309  LP001998    Male     Yes          2  Not Graduate            No   \n",
       "313  LP002008    Male     Yes          2      Graduate           Yes   \n",
       "317  LP002036    Male     Yes          0      Graduate            No   \n",
       "318  LP002043  Female      No          1      Graduate            No   \n",
       "323  LP002055  Female      No          0      Graduate            No   \n",
       "348  LP002137    Male     Yes          0      Graduate            No   \n",
       "363  LP002178    Male     Yes          0      Graduate            No   \n",
       "377  LP002223    Male     Yes          0      Graduate            No   \n",
       "392  LP002263    Male     Yes          0      Graduate            No   \n",
       "395  LP002272    Male     Yes          2      Graduate            No   \n",
       "411  LP002319    Male     Yes          0      Graduate            No   \n",
       "444  LP002424    Male     Yes          0      Graduate            No   \n",
       "449  LP002444    Male      No          1  Not Graduate           Yes   \n",
       "451  LP002447    Male     Yes          2  Not Graduate            No   \n",
       "460  LP002478    Male     Yes          0      Graduate           Yes   \n",
       "473  LP002522  Female      No          0      Graduate           Yes   \n",
       "490  LP002560    Male      No          0  Not Graduate            No   \n",
       "491  LP002562    Male     Yes          1  Not Graduate            No   \n",
       "497  LP002588    Male     Yes          0      Graduate            No   \n",
       "503  LP002618    Male     Yes          1  Not Graduate            No   \n",
       "506  LP002624    Male     Yes          0      Graduate            No   \n",
       "530  LP002717    Male     Yes          0      Graduate            No   \n",
       "533  LP002729    Male      No          1      Graduate            No   \n",
       "544  LP002757  Female     Yes          0  Not Graduate            No   \n",
       "556  LP002794  Female      No          0      Graduate            No   \n",
       "565  LP002833    Male     Yes          0  Not Graduate            No   \n",
       "583  LP002898    Male     Yes          1      Graduate            No   \n",
       "600  LP002949  Female     Yes         3+      Graduate            No   \n",
       "\n",
       "     ApplicantIncome  CoapplicantIncome  LoanAmount  Loan_Amount_Term  \\\n",
       "16              3596                0.0   100.00000             240.0   \n",
       "24              3717             2925.0   151.00000             360.0   \n",
       "30              4166             3369.0   201.00000             360.0   \n",
       "42              2400                0.0    75.00000             360.0   \n",
       "79              3333             2166.0   130.00000             360.0   \n",
       "83              6000             2250.0   265.00000             360.0   \n",
       "86              3333             2000.0    99.00000             360.0   \n",
       "95              6782                0.0   153.12844             360.0   \n",
       "117             2214             1398.0    85.00000             360.0   \n",
       "125             3692                0.0    93.00000             360.0   \n",
       "129             6080             2569.0   182.00000             360.0   \n",
       "130            20166                0.0   650.00000             480.0   \n",
       "156             6000                0.0   160.00000             360.0   \n",
       "181             1916             5063.0    67.00000             360.0   \n",
       "187             2383             2138.0    58.00000             360.0   \n",
       "198             3416             2816.0   113.00000             360.0   \n",
       "219             4283             2383.0   127.00000             360.0   \n",
       "236             5746                0.0   255.00000             360.0   \n",
       "237             3463                0.0   122.00000             360.0   \n",
       "259             4931                0.0   128.00000             360.0   \n",
       "260             6083             4250.0   330.00000             360.0   \n",
       "279             4100                0.0   124.00000             360.0   \n",
       "309             7667                0.0   185.00000             360.0   \n",
       "313             5746                0.0   144.00000              84.0   \n",
       "317             2058             2134.0    88.00000             360.0   \n",
       "318             3541                0.0   112.00000             360.0   \n",
       "323             3166             2985.0   132.00000             360.0   \n",
       "348             6333             4583.0   259.00000             360.0   \n",
       "363             3013             3033.0    95.00000             300.0   \n",
       "377             4310                0.0   130.00000             360.0   \n",
       "392             2583             2115.0   120.00000             360.0   \n",
       "395             3276              484.0   135.00000             360.0   \n",
       "411             6256                0.0   160.00000             360.0   \n",
       "444             7333             8333.0   175.00000             300.0   \n",
       "449             2769             1542.0   190.00000             360.0   \n",
       "451             1958             1456.0    60.00000             300.0   \n",
       "460             2083             4083.0   160.00000             360.0   \n",
       "473             2500                0.0    93.00000             360.0   \n",
       "490             2699             2785.0    96.00000             360.0   \n",
       "491             5333             1131.0   186.00000             360.0   \n",
       "497             4625             2857.0   111.00000              12.0   \n",
       "503             4050             5302.0   138.00000             360.0   \n",
       "506            20833             6667.0   480.00000             360.0   \n",
       "530             1025             5500.0   216.00000             360.0   \n",
       "533            11250                0.0   196.00000             360.0   \n",
       "544             3017              663.0   102.00000             360.0   \n",
       "556             2667             1625.0    84.00000             360.0   \n",
       "565             4467                0.0   120.00000             360.0   \n",
       "583             1880                0.0    61.00000             360.0   \n",
       "600              416            41667.0   350.00000             180.0   \n",
       "\n",
       "     Credit_History Property_Area Loan_Status  \n",
       "16              NaN         Urban           Y  \n",
       "24              NaN     Semiurban           N  \n",
       "30              NaN         Urban           N  \n",
       "42              NaN         Urban           Y  \n",
       "79              NaN     Semiurban           Y  \n",
       "83              NaN     Semiurban           N  \n",
       "86              NaN     Semiurban           Y  \n",
       "95              NaN         Urban           N  \n",
       "117             NaN         Urban           Y  \n",
       "125             NaN         Rural           Y  \n",
       "129             NaN         Rural           N  \n",
       "130             NaN         Urban           Y  \n",
       "156             NaN         Rural           Y  \n",
       "181             NaN         Rural           N  \n",
       "187             NaN         Rural           Y  \n",
       "198             NaN     Semiurban           Y  \n",
       "219             NaN     Semiurban           Y  \n",
       "236             NaN         Urban           N  \n",
       "237             NaN         Urban           Y  \n",
       "259             NaN     Semiurban           N  \n",
       "260             NaN         Urban           Y  \n",
       "279             NaN         Rural           Y  \n",
       "309             NaN         Rural           Y  \n",
       "313             NaN         Rural           Y  \n",
       "317             NaN         Urban           Y  \n",
       "318             NaN     Semiurban           Y  \n",
       "323             NaN         Rural           Y  \n",
       "348             NaN     Semiurban           Y  \n",
       "363             NaN         Urban           Y  \n",
       "377             NaN     Semiurban           Y  \n",
       "392             NaN         Urban           Y  \n",
       "395             NaN     Semiurban           Y  \n",
       "411             NaN         Urban           Y  \n",
       "444             NaN         Rural           Y  \n",
       "449             NaN     Semiurban           N  \n",
       "451             NaN         Urban           Y  \n",
       "460             NaN     Semiurban           Y  \n",
       "473             NaN         Urban           Y  \n",
       "490             NaN     Semiurban           Y  \n",
       "491             NaN         Urban           Y  \n",
       "497             NaN         Urban           Y  \n",
       "503             NaN         Rural           N  \n",
       "506             NaN         Urban           Y  \n",
       "530             NaN         Rural           Y  \n",
       "533             NaN     Semiurban           N  \n",
       "544             NaN     Semiurban           Y  \n",
       "556             NaN         Urban           Y  \n",
       "565             NaN         Rural           Y  \n",
       "583             NaN         Rural           N  \n",
       "600             NaN         Urban           N  "
      ]
     },
     "execution_count": 24,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df[df.Credit_History.isnull()]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 25,
   "metadata": {
    "collapsed": true
   },
   "outputs": [],
   "source": [
    "df['Credit_History'] = df.groupby(['Gender','Education','Married','Dependents','Self_Employed'])['Credit_History'].ffill().bfill()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 26,
   "metadata": {
    "scrolled": true
   },
   "outputs": [],
   "source": [
    "df['Credit_History'] = df.Credit_History.astype('int64')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 27,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "<class 'pandas.core.frame.DataFrame'>\n",
      "Int64Index: 613 entries, 0 to 613\n",
      "Data columns (total 13 columns):\n",
      "Loan_ID              613 non-null object\n",
      "Gender               613 non-null object\n",
      "Married              613 non-null object\n",
      "Dependents           613 non-null object\n",
      "Education            613 non-null object\n",
      "Self_Employed        613 non-null object\n",
      "ApplicantIncome      613 non-null int64\n",
      "CoapplicantIncome    613 non-null float64\n",
      "LoanAmount           613 non-null float64\n",
      "Loan_Amount_Term     613 non-null float64\n",
      "Credit_History       613 non-null int64\n",
      "Property_Area        613 non-null object\n",
      "Loan_Status          613 non-null object\n",
      "dtypes: float64(3), int64(2), object(8)\n",
      "memory usage: 67.0+ KB\n"
     ]
    }
   ],
   "source": [
    "df.info()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## Checking if there are weird labels and fixing them if they exist"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 28,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "array(['Loan_ID', 'Gender', 'Married', 'Dependents', 'Education',\n",
       "       'Self_Employed', 'ApplicantIncome', 'CoapplicantIncome',\n",
       "       'LoanAmount', 'Loan_Amount_Term', 'Credit_History', 'Property_Area',\n",
       "       'Loan_Status'], dtype=object)"
      ]
     },
     "execution_count": 28,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df.columns.values"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 29,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Male      502\n",
      "Female    111\n",
      "Name: Gender, dtype: int64 \n",
      "\n",
      "Yes    406\n",
      "No     207\n",
      "Name: Married, dtype: int64 \n",
      "\n",
      "0     354\n",
      "1     104\n",
      "2     102\n",
      "3+     53\n",
      "Name: Dependents, dtype: int64 \n",
      "\n",
      "Graduate        480\n",
      "Not Graduate    133\n",
      "Name: Education, dtype: int64 \n",
      "\n",
      "No     524\n",
      "Yes     89\n",
      "Name: Self_Employed, dtype: int64 \n",
      "\n",
      "2500     9\n",
      "6000     6\n",
      "4583     6\n",
      "2600     6\n",
      "5000     5\n",
      "4166     5\n",
      "3750     5\n",
      "3333     5\n",
      "2400     4\n",
      "8333     4\n",
      "2583     4\n",
      "6250     4\n",
      "3000     3\n",
      "3400     3\n",
      "4333     3\n",
      "3500     3\n",
      "3167     3\n",
      "3166     3\n",
      "4000     3\n",
      "10000    3\n",
      "2333     3\n",
      "5417     3\n",
      "12000    2\n",
      "3173     2\n",
      "3510     2\n",
      "2917     2\n",
      "3717     2\n",
      "5500     2\n",
      "4750     2\n",
      "3466     2\n",
      "        ..\n",
      "3775     1\n",
      "6782     1\n",
      "2718     1\n",
      "4735     1\n",
      "3716     1\n",
      "9357     1\n",
      "2698     1\n",
      "2699     1\n",
      "3727     1\n",
      "4755     1\n",
      "2708     1\n",
      "4758     1\n",
      "14999    1\n",
      "15000    1\n",
      "2717     1\n",
      "2720     1\n",
      "2750     1\n",
      "674      1\n",
      "3748     1\n",
      "5124     1\n",
      "5829     1\n",
      "5800     1\n",
      "2149     1\n",
      "3762     1\n",
      "4931     1\n",
      "5815     1\n",
      "5818     1\n",
      "5819     1\n",
      "5821     1\n",
      "3691     1\n",
      "Name: ApplicantIncome, Length: 504, dtype: int64 \n",
      "\n",
      "0.0        272\n",
      "1666.0       5\n",
      "2083.0       5\n",
      "2500.0       5\n",
      "1750.0       3\n",
      "1459.0       3\n",
      "2333.0       3\n",
      "1800.0       3\n",
      "1625.0       3\n",
      "2250.0       3\n",
      "5625.0       3\n",
      "2451.0       2\n",
      "1640.0       2\n",
      "2917.0       2\n",
      "1560.0       2\n",
      "20000.0      2\n",
      "1717.0       2\n",
      "1950.0       2\n",
      "1843.0       2\n",
      "2569.0       2\n",
      "3750.0       2\n",
      "4167.0       2\n",
      "3500.0       2\n",
      "2925.0       2\n",
      "1300.0       2\n",
      "1430.0       2\n",
      "754.0        2\n",
      "3167.0       2\n",
      "1667.0       2\n",
      "4416.0       2\n",
      "          ... \n",
      "1881.0       1\n",
      "1041.0       1\n",
      "3583.0       1\n",
      "3013.0       1\n",
      "7250.0       1\n",
      "3300.0       1\n",
      "1302.0       1\n",
      "1287.0       1\n",
      "2340.0       1\n",
      "1710.0       1\n",
      "2330.0       1\n",
      "4648.0       1\n",
      "3447.0       1\n",
      "1774.0       1\n",
      "3796.0       1\n",
      "1425.0       1\n",
      "5701.0       1\n",
      "2079.0       1\n",
      "3033.0       1\n",
      "5302.0       1\n",
      "1131.0       1\n",
      "7101.0       1\n",
      "5500.0       1\n",
      "1779.0       1\n",
      "1863.0       1\n",
      "7166.0       1\n",
      "2138.0       1\n",
      "2166.0       1\n",
      "3541.0       1\n",
      "3021.0       1\n",
      "Name: CoapplicantIncome, Length: 287, dtype: int64 \n",
      "\n",
      "120.000000    20\n",
      "110.000000    17\n",
      "100.000000    15\n",
      "187.000000    12\n",
      "160.000000    12\n",
      "128.000000    11\n",
      "113.000000    11\n",
      "130.000000    10\n",
      "95.000000      9\n",
      "96.000000      9\n",
      "115.000000     8\n",
      "70.000000      8\n",
      "150.000000     8\n",
      "112.000000     8\n",
      "135.000000     7\n",
      "104.000000     7\n",
      "136.000000     7\n",
      "125.000000     7\n",
      "132.000000     7\n",
      "138.000000     6\n",
      "80.000000      6\n",
      "81.000000      6\n",
      "180.000000     6\n",
      "175.000000     6\n",
      "158.000000     6\n",
      "153.128440     6\n",
      "155.000000     6\n",
      "108.000000     6\n",
      "144.000000     6\n",
      "116.000000     6\n",
      "              ..\n",
      "228.000000     1\n",
      "308.000000     1\n",
      "190.000000     1\n",
      "59.000000      1\n",
      "230.000000     1\n",
      "86.000000      1\n",
      "36.000000      1\n",
      "9.000000       1\n",
      "26.000000      1\n",
      "146.692308     1\n",
      "324.000000     1\n",
      "242.000000     1\n",
      "196.000000     1\n",
      "244.000000     1\n",
      "400.000000     1\n",
      "250.000000     1\n",
      "63.000000      1\n",
      "208.000000     1\n",
      "101.000000     1\n",
      "119.000000     1\n",
      "73.000000      1\n",
      "500.000000     1\n",
      "58.000000      1\n",
      "48.000000      1\n",
      "164.000000     1\n",
      "246.000000     1\n",
      "83.000000      1\n",
      "234.000000     1\n",
      "166.000000     1\n",
      "376.000000     1\n",
      "Name: LoanAmount, Length: 213, dtype: int64 \n",
      "\n",
      "360.000000    513\n",
      "180.000000     44\n",
      "480.000000     15\n",
      "300.000000     13\n",
      "240.000000      4\n",
      "84.000000       4\n",
      "120.000000      3\n",
      "341.357143      3\n",
      "36.000000       2\n",
      "327.692308      2\n",
      "60.000000       2\n",
      "359.166667      1\n",
      "318.857143      1\n",
      "365.581395      1\n",
      "348.533333      1\n",
      "270.000000      1\n",
      "318.000000      1\n",
      "349.285714      1\n",
      "12.000000       1\n",
      "Name: Loan_Amount_Term, dtype: int64 \n",
      "\n",
      "1    514\n",
      "0     99\n",
      "Name: Credit_History, dtype: int64 \n",
      "\n",
      "Semiurban    233\n",
      "Urban        201\n",
      "Rural        179\n",
      "Name: Property_Area, dtype: int64 \n",
      "\n",
      "Y    422\n",
      "N    191\n",
      "Name: Loan_Status, dtype: int64 \n",
      "\n"
     ]
    }
   ],
   "source": [
    "for col in ['Gender', 'Married', 'Dependents', 'Education',\n",
    "       'Self_Employed', 'ApplicantIncome', 'CoapplicantIncome',\n",
    "       'LoanAmount', 'Loan_Amount_Term', 'Credit_History', 'Property_Area',\n",
    "       'Loan_Status']:\n",
    "    print(df[col].value_counts(),'\\n')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 30,
   "metadata": {
    "collapsed": true
   },
   "outputs": [],
   "source": [
    "df['Dependents'] = df['Dependents'].replace({'3+':3})"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## Exploratory Data Analysis (EDA)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 31,
   "metadata": {},
   "outputs": [],
   "source": [
    "cat_features = df.select_dtypes(include=['object']).columns.values\n",
    "num_features = df.select_dtypes(exclude=['object']).columns.values"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 32,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "array(['Loan_ID', 'Gender', 'Married', 'Dependents', 'Education',\n",
       "       'Self_Employed', 'Property_Area', 'Loan_Status'], dtype=object)"
      ]
     },
     "execution_count": 32,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "cat_features"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 33,
   "metadata": {
    "collapsed": true
   },
   "outputs": [],
   "source": [
    "df['Loan_Status'] = df['Loan_Status'].map({'Y':1,'N':0})"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 34,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "<matplotlib.axes._subplots.AxesSubplot at 0x1e98279a780>"
      ]
     },
     "execution_count": 34,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "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\n",
      "text/plain": [
       "<matplotlib.figure.Figure at 0x1e9826b6dd8>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "fig, (ax1, ax2)  = plt.subplots(1, 2,figsize=(10,5))\n",
    "sns.pointplot(x='Gender', y='Loan_Status', data=df, ax=ax1)\n",
    "sns.pointplot(x='Married', y='Loan_Status', data=df, ax=ax2)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "- Males are slightly more likely to get approval for loans\n",
    "- Married people have way much higher chance of getting approval for loans"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 35,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "<matplotlib.axes._subplots.AxesSubplot at 0x1e982a1b550>"
      ]
     },
     "execution_count": 35,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "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\n",
      "text/plain": [
       "<matplotlib.figure.Figure at 0x1e9829536a0>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "fig, (ax1, ax2)  = plt.subplots(1, 2,figsize=(10,5))\n",
    "sns.pointplot(x='Dependents', y='Loan_Status', data=df, ax=ax1)\n",
    "sns.pointplot(x='Education', y='Loan_Status', data=df, ax=ax2)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "- People who have two dependents or no one have highest chance of getting approval for loans. Those with one or more than three dependents are less likely to get approval for loans\n",
    "- People with Masters' degree or higher are much more likely to get approval for loans than those who didn't go to graduate school"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 36,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "<matplotlib.axes._subplots.AxesSubplot at 0x1e982b54668>"
      ]
     },
     "execution_count": 36,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "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\nqsb4TQF5AAAAAElFTkSuQmCC\n",
      "text/plain": [
       "<matplotlib.figure.Figure at 0x1e982ab0860>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "fig, (ax1, ax2)  = plt.subplots(1, 2,figsize=(10,5))\n",
    "sns.pointplot(x='Self_Employed', y='Loan_Status', data=df, ax=ax1)\n",
    "sns.pointplot(x='Property_Area', y='Loan_Status', data=df, ax=ax2)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 37,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "<matplotlib.axes._subplots.AxesSubplot at 0x1e982c0b630>"
      ]
     },
     "execution_count": 37,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "iVBORw0KGgoAAAANSUhEUgAAAYAAAAEFCAYAAADqujDUAAAABHNCSVQICAgIfAhkiAAAAAlwSFlz\nAAALEgAACxIB0t1+/AAAIABJREFUeJzt3Xl8VfWZx/FPFiBACAYIi4iAKI8oWxAVlNaloq11wbVC\nra2Vbo7WulGnM9PWmWmnVdGxWlu31rEqIiqK+1JcwQ0hsggPqwsosoUECASS3Pnj3NzcBJLckNzc\nJOf7fr18lbPck0cbvs892++XFolEEBGR8ElPdQEiIpIaagAiIiGlBiAiElJqACIiIaUGICISUpmp\nLiBRGzdu0+NKIiINlJfXJa22bToDEBEJKTUAEZGQUgMQEQkpNQARkZBSAxARCSk1ABGRkFIDEBEJ\nKTUAEZGQUgMQkRbjoZedH/5hNg+97KkuJRTUAESkRdi1u4zX5q8D4LUF69i1uyzFFbV9agAi0iKU\nlUeoHO8lEgmWJbnUAEREQkoNQEQkpJI2GqiZpQN3ASOAUmCyu6+M2/5d4FqgHPibu/8lWbWISMu3\nuXhnteXS3eVkd2yXomrCIZlnABOALHcfC9wATK2x/RbgFOB44Fozy01iLSLSQu3eU879z37MjX+f\nV239f9z/Hq8tWJeiqsIhmQ1gHPAigLu/C4yusX0h0BXIAtIA3fERCZlIJMJfnlrMnMXr99q2a3c5\n/3jJeb1ATSBZkjkhTA5QFLdcbmaZ7l75bNdi4ENgB/Cku2+t62C5uZ3IzMxITqUikhLzfQMfrdpc\n5z5PvrGaM084lKz2rWb+qlYjmf9Fi4EuccvpleFvZsOBbwMDge3AQ2Z2gbvPqO1ghYUlSSxVRFLh\n+bdX17vP9p17ePWdTzj2iF7JL6gNysvrUuu2ZF4CmgOcDmBmY4BFcduKgJ3ATncvBzYAugcgEjKb\ni3YltN+W4sT2k4ZJ5hnATGC8mc0luMZ/qZlNArLd/R4zuxt428x2A6uAB5JYi4i0QJ2yEougjgnu\nJw2TFom0jnuvmhRepO15fcFaHnxpeZ37ZKSnccvlx9E1u0MzVdW2aFJ4EWlxysorKFhR9w1ggK+P\nOFDhnyRqACLS7MrKK/jLU4tZuLruBnD04T2ZeMphzVRV+OjCmog0q7LyCv769BIWrNgUWzd0YDeG\nH9KdR/65IrbuqvOHM3xQd9LSar2CIY2kMwARaTZl5RXcM2sJ85dvjK0bOrAbV543jDFDe1fbd1Df\nrgr/JFMDEJFmUV5Rwb3PfMw8rwr/IwfkcsW5w2inlzxTQg1ARJKuMvw/WLYhtm5I/1yuOG847dsp\n/FNFDUBEkqqiIsL9zy7l/aVV4X/4wQfw8/OH00Hhn1JqACKSNBUVEe5/binvfvxVbJ31O4Crzh+x\nV/hnZqRRecU/LS1YluRSAxCRpKiIRPj7C0t5Z0nVSJ+DD+rKVRcMp0P7vb/5Z7XP5KRRfQE4Kb+v\nBn9rBnoTWESaXEUkwgMvLOPthV/G1h16UFeuuXCEgr2Z6U1gEWk2FZEID75YPfwH9c3h6gsU/i2N\nGoCINJmKSISHXnLe/Kgq/A85MIdrLhxJxw4K/5ZGDUBEmkQkEuHhl5fzesEXsXUD+yj8WzI1ABFp\ntEgkwsOvLK82h++A3l249jsjEh7yWZqfGoCINEokEmHaqyuYPb8q/Pv36sK1F42kU1a7FFYm9VED\nEJH9FolEmD57Ja9+uDa27uCe2Vx70Ug6K/xbPDUAEdkvkUiEx15bycsffB5b169nNtdNzCe7o8K/\nNVADEJEGi0QiPP76Kl56vyr8D8rrzHUXjVT4tyJqACLSIJFIhCffXM0L730WW9e3R2eum5hPl07t\nU1iZNFTSbs+bWTpwFzACKAUmu/vK6LbewKNxu48EbnD3vyarHhFpvEgkwsy3VvPcO5/G1h3YozPX\nT8wnR+Hf6iTz+awJQJa7jzWzMcBU4GwAd18PnAhgZmOB3wH3JrEWEWkCT7+9hmfnVoV/n+6dgvDv\nrPBvjZJ5CWgc8CKAu78LjK65g5mlAXcAP3P38iTWIiKNNOvtNcya80lsuVe3IPy7KvxbrWSeAeQA\nRXHL5WaW6e5lcevOBJa4u9d3sNzcTmRq1iCRlJj+qvPU22tiywf26MzvLz+e7l07prAqaaxkNoBi\noEvccnqN8Ae4GLg9kYMVFpY0VV0i0gDPvfMJT7yxOrbcM7cj135nJBW7y9i4cVvqCpOE5OV1qXVb\nMi8BzQFOB4jeA1i0j31GA3OTWIOINMIL735aLfzzDshiysR8crt0SGFV0lSSeQYwExhvZnOBNOBS\nM5sEZLv7PWaWBxS7u8b5F2mBXnzvM2a8viq23KNrFlMmjqJbTlYKq5KmpAlhRGQvL7//GY/OXhlb\n7p6TxS+/m08PXfNvdTQhjIgk7JV5n9cI/w5MmaTwb4vUAEQk5p8frmXaqytiy91yOnD9pFHkHaDw\nb4vUAEQEgNfmr+XhV5bHlnO7dGDKxHx6KvzbLDUAEeH1Bev4x8tV4X9Advsg/HM7pbAqSTY1AJGQ\ne6NgHQ++VPUuZtfs9kyZNIpe3RT+bZ0agEiIvfXRF/zfi1Xhn9M5+ObfW+EfCmoAIiE1Z9GXPPDC\nsthyTqd2TJmYT5/unVNYlTQnNQCREJq7+Ev+9txSKl+u6dKpHddPzOfAHgr/MFEDEAmZd5as5/5n\nq8I/u2MQ/n3zslNalzQ/NQCREHn34/Xc9+zHe4X/QQr/UFIDEAmJ95d+xb3PfEzl6C+dszK57qKR\n9Oup8A8rNQCREJi3bAP3zKoZ/vkc3Kv2oYKl7VMDEGnjPvQN/PXpJVRE079Th0yuvWgk/Xsr/MNO\nDUCkDZu/fGO18O8YDf8BvXNSXJm0BAnPB2BmXYFBQAWwxt2L6vmIiKTQghUb+ctTiymvqAz/DK75\nzggG9lH4S6DeBmBm3wJ+CRwBrAX2AP3MbClwi7u/kNwSRaShClZu4q6ZVeGf1T6Day4cyaADu6a4\nMmlJ6pwQxsweANYD/3D3JTW2HQlcBvR094uTWSRoQhiRRC1ctYk7n1xEWXnwV6ZD+wyuvXAkhx6k\n8A+juiaEqe8M4N/cfd2+NkQbwjVmdlBjihORprN49WbufHJxVfi3y+DqC0Yo/GWfEpoS0szaA4e7\n+8LovL75wK3u/mWyC6ykMwCRui1es5k/Pb6IsvIKANq3S+fqC0ZgB+emuDJJpcacAVR6CFhmZh2B\nG4EHgf8DTq3tA2aWDtwFjABKgcnuvjJu+9HArQQTxq8HLnb3XQnWIyJxlnyyhTueiAv/zHR+cb7C\nX+qW6GOgA93918B5wH3u/l9Afb9ZE4Asdx8L3ABMrdxgZmnAvcCl7j4OeBHo39DiRQSWfrKFOx5f\nyJ6yIPzbZaZz1fnDOby/wl/qlmgDyDSzHgSh/pyZ9QbqGzC8Mthx93eB0XHbBgObgavN7A2gm7v7\n3ocQkbos+7SQ2x9fyO648P/5+cMZMqBbiiuT1iDRS0A3A+8Bs9x9sZktB/6jns/kAPHvCpSbWaa7\nlwE9gOOAK4CVwLNmNs/dZ9d2sNzcTmRmZiRYrkjbt3jVJm5/onr4//sPj2WU9UxxZdJaJNQA3P0R\n4JG4VUPcvbyejxUD8e+ap0fDH4Jv/yvdfSmAmb1IcIZQawMoLCxJpFSRUFj++VZue+wjSvcEfw0z\nM9K44txh9OvWkY0bt6W4OmlJ8vJqH/IjoQZgZmuASI11uPshdXxsDnAm8JiZjQEWxW1bDWSb2aHR\nG8NfA+5PpBaRsFu5tojbZuwd/sMO6Z7iyqS1SfQS0Ilxf24HnAN0qOczM4HxZjaX4EmfS6OPkGa7\n+z1mdhnwSPSG8Fx3f65hpYuEz6p1Rdz6WAGlu4Pwz0hP4/JzhjF8UI8UVyatUULvAexL9Jr96Pr3\nbBp6D0DCbvUXxUydvoCdpfHhP5T8w/JSXJm0ZI1+D8DMvh63mAYcCXRsZF0ikqA1XxYzdXpBtfD/\n2QSFvzROopeAboz7cwTYBHy/6csRkZo+Xb+NqY8WsLM0eIYiPS2Nn5x1JKMGK/ylcRJtAFe6++L4\nFdEbuyKSRJ+u38Ytjy6gJD78zz6S0YfrUU9pvDobgJkdD2QA90Vv2lZeS8oE/krwQpeIJMFnXwXh\nv2NXEP5pafDjs47gaIW/NJH6zgDGAycAfYD/jFtfBtydrKJEwu7zDdu55dGCauH/ozOP4JghvVJc\nmbQliY4G+j13/0cz1FMrPQUkYbF243ZuemQB23fuAYLwn3zGEYw9sneKK5PWqClGA33fzG4Hsgku\nA2UQDBD39bo/JiINsW7jdm6eFhf+wGXfHqLwl6RIdDC46cBWgnkACoCewOI6PyEiDfLFph3cPG0B\n20qqwv/S04dw3NA+qS1M2qxEG0C6u/+GYHTP+QSjgh6btKpEQubLzUH4F0fDH+AH3zqcccMV/pI8\niTaAEjPrACwHjnL3UiAreWWJhMf6LSXcNG0BRTt2x9Z9/5vG10YcmMKqJAwaMiPYM8B3gXfM7JvA\nPucKFpHEfbWlhJsemU/R9qrwv+Q044SRfVNYlYRFQmcA7n4ncJ67byQYGO4egstAIrKfNhQG3/y3\nxoX/xacO5sR8hb80j4QagJm94+7bANx9LTCLYIIYEdkPG7bu5KZpCyjcVhpb993xgzl51EEprErC\npr43gWcTHQrazCongEkjeBFsVlIrE2mjNm3dyc2PzGdLcVX4TzzlML5xlMJfmleiL4Ld7u5XNUM9\ntdKLYNIWbCrayR8fXsDm4l2xdRedfCinHnNwCquStqxRL4JFJ4P/TfTPA4DzgAV1zd8rInvbXLSL\nmx6pHv4XnqTwl9Sp8x6AmZ0GLAGGmVkv4AOCl8H+y8x+3Az1ibQJW4p3cdO0+Wwqqgr/C04cxDeP\nVfhL6tR3E/hGYJy7v0Uw/v8id7+YYJC4K5JdnEhbULitlJseWcDGrVXhf94Jh/CtMf1TWJVI/Q0g\ny91XRP98MtEbv+5eksBnRUIvCP/5bNi6M7bunK8N5NtjB6SuKJGo+u4BpEUnbe8IjAOuBTCzztQz\nJaSZpQN3ASOAUmCyu6+M2341MBnYGF31E3f3/fmXEGmJtm4v5eZpC/iqsCr8zx43kDOPH5jCqkSq\n1NcAZgJPE4z+WeDuS8xsOMHcADPq+ewEgjOIsdHZw6YCZ8dtPwq4xN0/3L/SRVquoh27uXnaAtZv\nKYmtO+v4AZw9TuEvLUedl3Hc/bcEw0C8BJwRXf0NghFBf1XPsccRDB6Hu78LjK6x/SjgX83sbTP7\n14aVLdJyFUfD/8vNVeF/xnH9Ff7S4tT7GKi7P1Zj+bb4ZTN71t3PYG85QFHccrmZZbp7WXT5UeDP\nQDEw08zOcPdna6sjN7cTmZkZ9ZUrklJF20u59YEP+GLTjti6808+jEtOH0JaWq2PY4ukRKKDwdWl\ntoFLioEuccvpleEfva/wv+5eFF1+juDx0lobQGFhSW2bRFqEbSXBN/+1G6vC/1vHHsy3jj6ITZu2\np7AyCbO8vC61bmuKJ3lqe0N3DnA6QPQewKK4bTnAYjPLjjaDkwHdC5BWa/vOPdzyaEG18D/tmH6c\nf+IgffOXFqspzgBqMxMYb2ZziU5uZGaTgGx3v8fMfgW8RvCE0D/d/fkk1iKSNNt37uGWaQv4fEPV\nt/zxo/tx4UmHKvylRUtoLKC6mNl8dx/VRPXUSmMBSUu0Y9cebplWwKdfbYutO+Wog5h4ymEKf2kR\n6hoLqCkuAem3XEKpZNcepj5aPfxPHtVX4S+tRlM0gP9rgmOItColu8qYOr2AT9ZXhf9J+X357vjB\nCn9pNRIdDvo04HdALsE3/jQg4u6HJLe8KroEJC3FztIybp1ewKovimPrThh5IN87zUhX+EsL06jh\noKPuAK4BFlP7Uz8ibd7O0jJue+yjauH/9RF9FP7SKiXaADbV9ZKWSBjsLC3jthkfsXJd1fuN44b1\n4ZJvHq7wl1Yp0QbwlpndSjC0Q2xMW3d/MylVibQwu3aXcfuMj1i5tir8jx/amx+crvCX1ivRBnBM\n9H/z49ZFCF7gEmnTSneXc/uMhSyPC/+xR/bm0tOHKPylVWv0ewDNRTeBJRVK95Rz+4yPWPbZ1ti6\nMUf0YvIZR5CervCXlq/RN4HNbBxwPZBN8ARQBtDf3Qc0RYEiLdHuPeX86fGF1cL/mCE9ueyMIQp/\naRMSfQ/gPuApgobxZ2AFwVAPIm3S7j3l3PHEQpZ+Whhbd/ThPfnRmUeQka7J8KRtSPQ3eae7/x14\nHSgEfgSckKyiRFJpT1k5dz65iCWfVIX/UZan8Jc2J9Hf5l1m1g1wYIy7R4DOyStLJDX2lFVw55OL\nWbxmS2zdqMF5/OSsI8nMUPhL25Lob/StwHTgGeASM1sCzEtaVSIpsKesgj/PXMSi1Ztj6/IP68FP\nz1b4S9uU0G+1u88ATnX3bQRTOV4MfC+ZhYk0p7LyCv7y1GIWrqoK/5GH9uBnE4Yq/KXNSug328zy\ngOlmthlYB/wayEtmYSLNpTL8C1Zuiq0bPqi7wl/avER/u+8G3gcGAgOAd4D7k1STSLMpK6/g7qeX\nsGBFVfgPO6Q7/3LOUNplKvylbUv0TeBD3P3cuOWbzEyXgKRVKyuv4J5ZS/hw+cbYuqEDu3HFuUNp\nl5mRwspEmkeiX3EiZtavcsHMDgb2JKckkeQrr6jg3mc+Zp5Xhf+RA3K54txhCn8JjUTPAP4DeMfM\n3iN4E/hY4CdJq0okiSrD/4NlG2LrhvTP5YrzhtO+ncJfwiPhsYCiN4KPIThreM/dN9SzfzpwFzCC\nYOL3ye6+ch/73QNscfcb6jqexgKSplBREeG+Zz/m3Y+/iq07/OADuOqCEXRQ+Esb1BQTwuDuG4Hn\nKpfNbJG7D6vjIxOALHcfa2ZjgKnA2fE7mNlPgGHAG4nWIbK/Kioi3P/c0mrhb/0O4KrzFf4STo15\nzGFAPdvHEcwfgLu/C4yO32hmxxFcSrq7ETWIJKQiEuHvLyzlnSXrY+sGH9SVqy4YTof2Cn8Jp4TP\nAPahvksyOUBR3HK5mWW6e5mZ9QF+A5wDXJjID8vN7USmbs7JfqioiHDnjALmLKoK/yEDuvHbH42h\nU1a7FFYmklqNaQD1KQa6xC2nu3tZ9M8XAD2A54HeQCczW+buD9R2sMLCkmTVKW1YRSTCgy8u482P\nvoytG9Q3hyvOGcqObbvYsW1XHZ8Waf3y8rrUuq3OBmBmFez7m35aLevjzQHOBB6L3gNYVLnB3f8E\n/Cn6M34AHF5X+Ivsj4pIhIde8mrhf8iBOVxz4Ug6dkjmdx+R1qHOvwXu3ph7BDOB8WY2l6BhXGpm\nk4Bsd7+nEccVqVckEuHhl5fzesEXsXUD+yj8ReLV+Riomf0P8Ad3L6plezfgl+7+yyTVF6PHQCVR\nkUiER15ZwT/nr42tG9C7C9ddNFLX/CV0GvMY6GPA02b2BfAmsBYoA/oTTAh/IPCLJqpTpNEikQjT\nXq0e/v17deFahb/IXhJ6EczMTgLOAg4DKoBVwDPuPju55VXRGYDUJxKJMH32Sl7+4PPYuoN7ZnPd\nxHyyOyr8JZzqOgNI+E3gVFMDkLpEIhEee20lL71fFf79emZzvcJfQq7RbwKb2WnAfwPdCG7oAuDu\nhzS6OpFGikQiPP76qmrhf1BeZ667aKTCX6QOiT4OcQdwDbCY+h//FGk2kUiEJ99czQvvfRZb17dH\nZ66bmE+XTu1TWJlIy5doA9jk7s8mtRKRBopEIsx8aw3PvfNpbF2f7p24bmI+OQp/kXol2gDeMrNb\nCcb2ib066e5vJqUqkQQ8/fYanp37SWy5T/dOTJmYT9fOCn+RRCTaAI6J/m9+3LoIwaOgIs1u1ttr\nmDXnk9hyr26duH5iPl2zO6SuKJFWRk8BSavzzNxPmPnm6thyr9yOTJk0itwuCn+RmpriKaBxwPVA\nNsFTQBlAf3cf0BQFiiTquXeqh39Phb/Ifkt0rJ/7gKcIGsafgRUEY/2INJsX3v2UJ96oCv+8A7KY\nMjFf4S+ynxJtADvd/e/A60Ah8CPghGQVJVLTi+99xozXV8WWe3TNYsrEUXTLyUphVSKtW6INYFd0\n4DcHxrh7BOicvLJEqrz8/mc89lrVdNLdc7KYMimf7l0V/iKNkWgDuBWYDjwDXGJmS4B5SatKJOqV\neZ/z6Oz48O/AlEn59OjaMYVVibQNCTUAd58BnOru24CjgIuB7yWzMJF/friWaa+uiC13y+nA9ZNG\nkXeAwl+kKSTUAMwsF7jHzGYDWcCVQNdkFibh9tr8tTz8yvLYcm6XDkyZmE9Phb9Ik0n0EtC9wAdA\nd2Ab8CXwULKKknB7vWAd/3i5KvwPyG4fhH9upxRWJdL2JNoABkancaxw993u/m/AQUmsS0LqzY++\n4MEXPbbcNbs910/Mp1c3hb9IU0u0AZSZWVeiI4GaWeXEMCJN5q2PvuCBF5bFlnM6B9/8+3TXA2ci\nyZDoWEC/IXgHoJ+ZPQWMBX5Y1wfMLB24CxgBlAKT3X1l3PbzgBsImsrD7n57g6uXNmPOoi+rh3+n\ndgp/kSRL9AzgQ4I3f9cABwNPEjwNVJcJQJa7jyUI+qmVG8wsA/gDcApBM7nczHo0rHRpK+Yu/pK/\nPbc0NtFEl07tuH5iPgf2UPiLJFOiDeB5gongnwWeBtYTNzNYLcYRDB+Nu78LjK7c4O7lwBB3LyK4\nsZwB7G5Q5dImvLNkPfc/WxX+2R2D8O+bl53SukTCINFLQLj7ZQ08dg5QFLdcbmaZ7l4WPV6ZmZ1L\nMLbQc8COug6Wm9uJzMyMBpYgLdkb89dy/7Mfx33zb8/vfnYcAw/UE8YizSHRBvCUmU0GZgNllSvd\n/bPaP0Ix0CVuOb0y/OM+/2T0nsIDwCXA32s7WGFhSYKlSmvw/tKvuHvWEipHI++clcm13xlBdrt0\nNm7cltriRNqQvLwutW5LtAF0JbiOvyluXQSoa1L4OcCZwGNmNgZYVLnBzHIIhpU41d1LzWwHeqoo\nNOYt28A9sz6uFv7XXZTPwb1q/0UVkaaXaAM4D+jp7jsbcOyZwHgzm0twv+BSM5sEZLv7PWb2MPCm\nme0BFqIXy0LhQ9/AX59eQkU0/Tt1yOTai0bSv7fCX6S5JTQjmJm9Anzf3b9Ifkn7phnBWr/5yzfy\nl6cWU14R/F/ZsUMm1100koF9clJcmUjb1egZwQgu93xsZouJe1rH3TUnsCSkYMWmGuGfwTXfGaHw\nF0mhRBvA75JahbRpBSs38eeZi2Lhn9U+g2suHMkgPe0jklKaFF6SauGqTdz55CLKyoP/+zq0z+Da\nC0dy6EEKf5HmUNcloERfBBNpsMWrN3Pnk4urwr9dBldfMELhL9JCqAFIUixes5k/PbGIsvLg6d72\n7dL5xQXDGdzvgBRXJiKV1ACkyS35ZAt3xId/Zjq/OH8EdnBuiisTkXhqANKkln6yhTseX8iesiD8\n22Wmc9X5wzm8v8JfpKVRA5Am458VcvvjC9kdF/4/P384QwZ0S3FlIrIvagDSJPyzQm6b8VEs/DMz\n0rnyvGEcqfAXabHUAELooZedH/5hNg+97PXvnIDln2/lf2csZPeeyvBP48rzhjF0YPcmOb6IJIca\nQMjs2l3Ga/PXAfDagnXs2l1WzyfqtnJtEbfN+IjSPeVAEP5XnDuMYYco/EVaOjWAkCkrj8TG349E\niD2jvz9WrSvi1scKKN0dhH9GehqXnzOM4YM0uZtIa6AGIPtl9RfF3PpYAbuqhf9QRh6q8BdpLdQA\npMHWfFnM1OkF7CytCv+fTRhK/mF5Ka5MRBpCDUAa5NP125j6aAE7S4N7B+lpafzkrCMZNVjhL9La\nqAFIwj5dv41bHl1ASXz4n30kow/vmeLKRGR/qAFIQj77Kgj/HbuC8E9Lgx+fdQRHK/xFWi01AKnX\n5xu2c8ujBdXC/0dnHsExQ3qluDIRaQw1AKnT2o3buXnaArbv3AMEkztP/vYRjDmid2oLE5FGS3RG\nsAYzs3TgLmAEUApMdveVcdsnAr8AyoBFwOXuXpGseqTh1u0j/H/47SGMHarwF2kLknkGMAHIcvex\nwA3A1MoNZtYR+G/gJHc/HugKnJHEWqSBvti0g5unLWBbSVX4X3r6EI4f1ie1hYlIk0naGQAwDngR\nwN3fNbPRcdtKgePcvSSujl11HSw3txOZmRlJKTRMOuzYXW25e/dscjq3r7Zu7YZtTJ1eQHE0/AGu\nvHAk44/t3yw1ikjzSGYDyAGK4pbLzSzT3cuil3q+AjCzK4Fs4JW6DlZYWFLXZklQ5eWcSps3b6e0\npF1sef2WEv74yHyKtlc1iu9/0xh5SDc2btzWbHWKSNPIy+tS67ZkNoBiIP4np7t7bOSx6D2Cm4DB\nwHnurknfU+yrLSXcVCP8LznNOGFk3xRWJSLJksx7AHOA0wHMbAzBjd54dwNZwIS4S0GSIhsKS7hp\n2gK2xoX/xacO5sR8hb9IW5XMM4CZwHgzm0v0HqKZTSK43DMPuAx4C5htZgC3u/vMJNYjtdiwdSc3\nTVtA4bbS2Lrvjh/MyaMOSmFVIpJsSWsA0ev8P62xelncn/UOQgoU17gJvLloJ3c+uYgtxVXhP/Eb\nh/GNoxT+Im1dWiTSOi69b9y4rXUU2kIVbS9l2j9XMG/ZBiri/ku2z0yPTeMIcNHJh3LqMQenoEIR\nSYa8vC5ptW1L5iUgaSGKS3bzPw/NZ8PWnXttiw//C09S+IuEiS7DhMDTb63ZZ/jHO3JgN755rMJf\nJEzUANq40j3lzF2yvt791m/eQWu5HCgiTUMNoI3bVLQrNmdvXTYXl8amdxSRcFADaOPaZdR6/2cv\nmQ3YV0RaPzWANq7HAR3pmdux3v0G9zuAdhprSSRU1ADauPS0NE49ul+9+512TP37iEjbogYQAifm\n9+XrIw6sdftZxw8g/zBN6i4SNnoRLCQikQgFKzfx8gef459tja2/4txhjBqs8Bdpq+p6EUxnACGR\nlpZG/mF5/Ms5w6qtH9zvgBRVJCKppgYgIhJSagAiIiGlBiAiElJqACIiIaUGICISUmoAIiIhpQYg\nIhJSagDHiuNhAAAFSklEQVQiIiGVtBnBzCwduAsYAZQCk919ZY19OgGvAJe5+7K9jyIiIsmSzDOA\nCUCWu48FbgCmxm80s9HAm8CgJNYgIiK1SOacwOOAFwHc/d1o4MfrAJwD/CORg+XmdiJTwxU3Wocd\nu6std++eTU7n9imqRkRSKZkNIAcoilsuN7NMdy8DcPc5AGaW0MEKC0uavMAw2r5zT7XlzZu3U1rS\nLkXViEiy5eV1qXVbMi8BFQPxPzm9MvxFRCT1ktkA5gCnA5jZGGBREn+WJCgzI43KsWHT0jQNpEiY\nJbMBzAR2mdlc4DbgajObZGY/TuLPlHpktc/kpFF9ATgpvy9Z7ZN5FVBEWjJNCCMi0oZpQhgREdmL\nGoCISEipAYiIhJQagIhISKkBiIiElBqAiEhIqQGIiIRUq3kPQEREmpbOAEREQkoNQEQkpNQARERC\nSg1ARCSk1ABEREJKDUBEJKTUAEREQkqzgYSMmaUDdwEjgFJgsruvTG1VIlXM7Fjgj+5+Yqpraet0\nBhA+E4Asdx8L3ABMTXE9IjFmNgW4D8hKdS1hoAYQPuOAFwHc/V1gdGrLEalmFXBuqosICzWA8MkB\niuKWy81MlwKlRXD3J4A9qa4jLNQAwqcY6BK3nO7uZakqRkRSRw0gfOYApwOY2RhgUWrLEZFU0al/\n+MwExpvZXCANuDTF9YhIimg4aBGRkNIlIBGRkFIDEBEJKTUAEZGQUgMQEQkpNQARkZDSY6DSqplZ\nDvA/wAlAGVAIXOvu8/fzeK8DvwW2Az9198lm9mNgm7tPq+NzPwBOdPcfxK07Efitu59oZv8JzHP3\nWbV8vt6fIdLUdAYgrVZ0ZNPngS3ASHcfCfwn8IKZdW/Msd19nrtPji4eB3Ro5PF+XVv4N9XPEGko\nnQFIa3YScCDwG3evAHD318zsUuAbZnYdkAEsBv4F+DMwNLruj+4+zcw6EIw+ORr4BOgBVd/egf8G\nzgJONrMv3f2l/SnUzB4AXgeeBKYBvaObbgRK4n8GUADcDxxMcFbzK3d/0cx+C4yJrv8rcB0wwN0r\nzOwE4AZ3/9b+1CfhpDMAac3ygQ8qw7+Suz8PbAAGAye7+/eBfwc+dPejgK8D/2ZmhwBXRj8zBPg5\nMKjGsV4FZgG/TiD8zzKzgsp/CBpLTecAn0TruBj42j5+xh3AbHcfDpwP/M3MekU/n+XuR7j7n4A1\nwInR9d8HHqinPpFq1ACkNasgGM6iNu7ulSOfngL8NBrMbwKdgSMJAvSx6M4rgLmNqGeWu4+s/AeY\nvI995gITzOwpgqG5/2sf+5xMcAaAu68G3gOOjW57L26/vwHfM7NOwDeApxpRu4SQGoC0ZvOAUWZW\nrQmY2e8JGsPOuNUZwMVx4TyGYF6ECNX/HiR1ZNRokzkceBj4GvB+zfrZ++9lGlWXa+P/nWYA4wnO\nEp5399Kmr1jaMjUAac3eIrjU8xszywAws9MIBrjrWWPf2cDPovv0ARYSXEt/FZhkZulm1p/gZmxN\nZTTR/TIzuwK40d1nAJdH6+xa42fMBi6L7n8IcDzwTs1juXsJ8ALwe3T5R/aDGoC0Wu4eIbh5OghY\nbGYLgV8SDHf9VY3dbwQ6mtligoCd4u6rCOZHLgaWAvcS3DCu6VXgV2Z2fhOU/SBgZraI4FLUb919\na42f8XOCG8KLCC7rTHb3L2s53nSg2N3fq2W7SK00GqhIKxU96/k98JW735rqeqT10WOgIgkys6sJ\nnrap6Qt3P7256yG4B7KJ4CxIpMF0BiAiElK6ByAiElJqACIiIaUGICISUmoAIiIhpQYgIhJS/w/3\nCxDj0OLxuwAAAABJRU5ErkJggg==\n",
      "text/plain": [
       "<matplotlib.figure.Figure at 0x1e98269f4e0>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "sns.pointplot(x='Credit_History', y='Loan_Status', data=df)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "- The difference in the chance of getting approval for loans between the self-employed and not-self employed isn't big\n",
    "- People who have property in the semiurban area has the highest chance of getting approval, followed by those who live in urban areas and lastly, the rural people\n",
    "- Apparently, people whose credit history meets the guidelines are far more likely to get approval for loans"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 38,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "array(['ApplicantIncome', 'CoapplicantIncome', 'LoanAmount',\n",
       "       'Loan_Amount_Term', 'Credit_History'], dtype=object)"
      ]
     },
     "execution_count": 38,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "num_features"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 39,
   "metadata": {
    "scrolled": false
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "<seaborn.axisgrid.PairGrid at 0x1e982c47908>"
      ]
     },
     "execution_count": 39,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "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\n",
      "text/plain": [
       "<matplotlib.figure.Figure at 0x1e982c43be0>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "sns.pairplot(df,vars=['ApplicantIncome', 'CoapplicantIncome', 'LoanAmount','Loan_Amount_Term'],hue='Loan_Status')"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## Outlier Removal"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "By looking at the pairplots above, we can identify some outliers that might influence our prediction accuracy. I'll remove them."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 40,
   "metadata": {},
   "outputs": [],
   "source": [
    "df = df[df['ApplicantIncome'] < 37000]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 41,
   "metadata": {},
   "outputs": [],
   "source": [
    "df = df[df['CoapplicantIncome']< 20000]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 42,
   "metadata": {},
   "outputs": [],
   "source": [
    "df = df[df['LoanAmount'] < 650]"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## Encoding Categorical Features"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 43,
   "metadata": {
    "collapsed": true
   },
   "outputs": [],
   "source": [
    "X = df.drop('Loan_Status', axis=1)\n",
    "y = df['Loan_Status']"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 44,
   "metadata": {
    "scrolled": true
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "<class 'pandas.core.frame.DataFrame'>\n",
      "Int64Index: 602 entries, 0 to 613\n",
      "Data columns (total 12 columns):\n",
      "Loan_ID              602 non-null object\n",
      "Gender               602 non-null object\n",
      "Married              602 non-null object\n",
      "Dependents           602 non-null object\n",
      "Education            602 non-null object\n",
      "Self_Employed        602 non-null object\n",
      "ApplicantIncome      602 non-null int64\n",
      "CoapplicantIncome    602 non-null float64\n",
      "LoanAmount           602 non-null float64\n",
      "Loan_Amount_Term     602 non-null float64\n",
      "Credit_History       602 non-null int64\n",
      "Property_Area        602 non-null object\n",
      "dtypes: float64(3), int64(2), object(7)\n",
      "memory usage: 61.1+ KB\n"
     ]
    }
   ],
   "source": [
    "X.info()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 45,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style>\n",
       "    .dataframe thead tr:only-child th {\n",
       "        text-align: right;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: left;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Loan_ID</th>\n",
       "      <th>Gender</th>\n",
       "      <th>Married</th>\n",
       "      <th>Dependents</th>\n",
       "      <th>Education</th>\n",
       "      <th>Self_Employed</th>\n",
       "      <th>ApplicantIncome</th>\n",
       "      <th>CoapplicantIncome</th>\n",
       "      <th>LoanAmount</th>\n",
       "      <th>Loan_Amount_Term</th>\n",
       "      <th>Credit_History</th>\n",
       "      <th>Property_Area</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>LP001002</td>\n",
       "      <td>Male</td>\n",
       "      <td>No</td>\n",
       "      <td>0</td>\n",
       "      <td>Graduate</td>\n",
       "      <td>No</td>\n",
       "      <td>5849</td>\n",
       "      <td>0.0</td>\n",
       "      <td>134.884058</td>\n",
       "      <td>360.0</td>\n",
       "      <td>1</td>\n",
       "      <td>Urban</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>LP001003</td>\n",
       "      <td>Male</td>\n",
       "      <td>Yes</td>\n",
       "      <td>1</td>\n",
       "      <td>Graduate</td>\n",
       "      <td>No</td>\n",
       "      <td>4583</td>\n",
       "      <td>1508.0</td>\n",
       "      <td>128.000000</td>\n",
       "      <td>360.0</td>\n",
       "      <td>1</td>\n",
       "      <td>Rural</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>LP001005</td>\n",
       "      <td>Male</td>\n",
       "      <td>Yes</td>\n",
       "      <td>0</td>\n",
       "      <td>Graduate</td>\n",
       "      <td>Yes</td>\n",
       "      <td>3000</td>\n",
       "      <td>0.0</td>\n",
       "      <td>66.000000</td>\n",
       "      <td>360.0</td>\n",
       "      <td>1</td>\n",
       "      <td>Urban</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>LP001006</td>\n",
       "      <td>Male</td>\n",
       "      <td>Yes</td>\n",
       "      <td>0</td>\n",
       "      <td>Not Graduate</td>\n",
       "      <td>No</td>\n",
       "      <td>2583</td>\n",
       "      <td>2358.0</td>\n",
       "      <td>120.000000</td>\n",
       "      <td>360.0</td>\n",
       "      <td>1</td>\n",
       "      <td>Urban</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>LP001008</td>\n",
       "      <td>Male</td>\n",
       "      <td>No</td>\n",
       "      <td>0</td>\n",
       "      <td>Graduate</td>\n",
       "      <td>No</td>\n",
       "      <td>6000</td>\n",
       "      <td>0.0</td>\n",
       "      <td>141.000000</td>\n",
       "      <td>360.0</td>\n",
       "      <td>1</td>\n",
       "      <td>Urban</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "    Loan_ID Gender Married Dependents     Education Self_Employed  \\\n",
       "0  LP001002   Male      No          0      Graduate            No   \n",
       "1  LP001003   Male     Yes          1      Graduate            No   \n",
       "2  LP001005   Male     Yes          0      Graduate           Yes   \n",
       "3  LP001006   Male     Yes          0  Not Graduate            No   \n",
       "4  LP001008   Male      No          0      Graduate            No   \n",
       "\n",
       "   ApplicantIncome  CoapplicantIncome  LoanAmount  Loan_Amount_Term  \\\n",
       "0             5849                0.0  134.884058             360.0   \n",
       "1             4583             1508.0  128.000000             360.0   \n",
       "2             3000                0.0   66.000000             360.0   \n",
       "3             2583             2358.0  120.000000             360.0   \n",
       "4             6000                0.0  141.000000             360.0   \n",
       "\n",
       "   Credit_History Property_Area  \n",
       "0               1         Urban  \n",
       "1               1         Rural  \n",
       "2               1         Urban  \n",
       "3               1         Urban  \n",
       "4               1         Urban  "
      ]
     },
     "execution_count": 45,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "X.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 46,
   "metadata": {
    "collapsed": true
   },
   "outputs": [],
   "source": [
    "df['Dependents'] = df['Dependents'].astype('int64')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 47,
   "metadata": {
    "scrolled": true
   },
   "outputs": [],
   "source": [
    "encoding_needed_features = ['Gender','Married','Education','Self_Employed','Property_Area']\n",
    "\n",
    "\n",
    "labelEncoder = LabelEncoder()\n",
    "\n",
    "for col in encoding_needed_features:\n",
    "    X[col] = labelEncoder.fit_transform(X[col])\n",
    "    \n",
    "# cat_features = X.dtypes.pipe(lambda x: x[x == 'object']).index"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 48,
   "metadata": {},
   "outputs": [],
   "source": [
    "X.set_index('Loan_ID', inplace=True)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## Splitting Train and Test Data"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 49,
   "metadata": {
    "collapsed": true
   },
   "outputs": [],
   "source": [
    "# Train Test Split\n",
    "X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.3, random_state=42)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## Deciding which classification model to use"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 50,
   "metadata": {
    "scrolled": false
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Results for: Logistic Regression\n",
      "\n",
      "[[ 30  25]\n",
      " [  2 124]]\n",
      "             precision    recall  f1-score   support\n",
      "\n",
      "          0       0.94      0.55      0.69        55\n",
      "          1       0.83      0.98      0.90       126\n",
      "\n",
      "avg / total       0.86      0.85      0.84       181\n",
      "\n",
      "accuracy is 0.850828729282\n",
      "\n",
      "\n",
      "\n",
      "Results for: Decision Tree\n",
      "\n",
      "[[32 23]\n",
      " [29 97]]\n",
      "             precision    recall  f1-score   support\n",
      "\n",
      "          0       0.52      0.58      0.55        55\n",
      "          1       0.81      0.77      0.79       126\n",
      "\n",
      "avg / total       0.72      0.71      0.72       181\n",
      "\n",
      "accuracy is 0.71270718232\n",
      "\n",
      "\n",
      "\n",
      "Results for: Random Forest\n",
      "\n",
      "[[ 31  24]\n",
      " [  8 118]]\n",
      "             precision    recall  f1-score   support\n",
      "\n",
      "          0       0.79      0.56      0.66        55\n",
      "          1       0.83      0.94      0.88       126\n",
      "\n",
      "avg / total       0.82      0.82      0.81       181\n",
      "\n",
      "accuracy is 0.82320441989\n",
      "\n",
      "\n",
      "\n",
      "Results for: Gradient Boosting\n",
      "\n",
      "[[ 25  30]\n",
      " [  8 118]]\n",
      "             precision    recall  f1-score   support\n",
      "\n",
      "          0       0.76      0.45      0.57        55\n",
      "          1       0.80      0.94      0.86       126\n",
      "\n",
      "avg / total       0.79      0.79      0.77       181\n",
      "\n",
      "accuracy is 0.790055248619\n",
      "\n",
      "\n",
      "\n",
      "   accuracy score                model\n",
      "0        0.850829  Logistic Regression\n",
      "1        0.712707        Decision Tree\n",
      "2        0.823204        Random Forest\n",
      "3        0.790055    Gradient Boosting\n"
     ]
    }
   ],
   "source": [
    "keys = []\n",
    "scores = []\n",
    "models = {'Logistic Regression': LogisticRegression(random_state=42), 'Decision Tree': DecisionTreeClassifier(random_state=42),\n",
    "          'Random Forest': RandomForestClassifier(n_estimators=300, random_state=42), \n",
    "          'Gradient Boosting':GradientBoostingClassifier(random_state=42)}\n",
    "\n",
    "for k,v in models.items():\n",
    "    mod = v\n",
    "    mod.fit(X_train, y_train)\n",
    "    pred = mod.predict(X_test)\n",
    "    print('Results for: ' + str(k) + '\\n')\n",
    "    print(confusion_matrix(y_test, pred))\n",
    "    print(classification_report(y_test, pred))\n",
    "    acc = accuracy_score(y_test, pred)\n",
    "    print(\"accuracy is \"+ str(acc)) \n",
    "    print('\\n' + '\\n')\n",
    "    keys.append(k)\n",
    "    scores.append(acc)\n",
    "    table = pd.DataFrame({'model':keys, 'accuracy score':scores})\n",
    "\n",
    "print(table)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Classifiers with top two accuracy are logistic regression and random forest classifier. By setting different values to various parameters, we can potentially improve our accuracy"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## Logistic Regression"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 51,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,\n",
       "          intercept_scaling=1, max_iter=100, multi_class='ovr', n_jobs=1,\n",
       "          penalty='l2', random_state=42, solver='liblinear', tol=0.0001,\n",
       "          verbose=0, warm_start=False)"
      ]
     },
     "execution_count": 51,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "logis_regr1 = LogisticRegression(random_state=42)\n",
    "logis_regr1.fit(X_train, y_train)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 52,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "             precision    recall  f1-score   support\n",
      "\n",
      "          0       0.94      0.55      0.69        55\n",
      "          1       0.83      0.98      0.90       126\n",
      "\n",
      "avg / total       0.86      0.85      0.84       181\n",
      "\n",
      "0.850828729282\n"
     ]
    }
   ],
   "source": [
    "print(classification_report(y_test, logis_regr1.predict(X_test)))\n",
    "print(accuracy_score(y_test,logis_regr1.predict(X_test)))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 53,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "LogisticRegression(C=1.0, class_weight='balanced', dual=False,\n",
       "          fit_intercept=True, intercept_scaling=1, max_iter=100,\n",
       "          multi_class='ovr', n_jobs=1, penalty='l2', random_state=42,\n",
       "          solver='liblinear', tol=0.0001, verbose=0, warm_start=False)"
      ]
     },
     "execution_count": 53,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "logis_regr2 = LogisticRegression(random_state=42, class_weight='balanced')\n",
    "logis_regr2.fit(X_train, y_train)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 54,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "             precision    recall  f1-score   support\n",
      "\n",
      "          0       0.63      0.60      0.62        55\n",
      "          1       0.83      0.85      0.84       126\n",
      "\n",
      "avg / total       0.77      0.77      0.77       181\n",
      "\n",
      "0.773480662983\n"
     ]
    }
   ],
   "source": [
    "print(classification_report(y_test, logis_regr2.predict(X_test)))\n",
    "print(accuracy_score(y_test,logis_regr2.predict(X_test)))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 55,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "0.3\n",
      "0.850828729282\n"
     ]
    }
   ],
   "source": [
    "C_values = [0.001, 0.003, 0.005, 0.008, 0.01, 0.03, 0.05, 0.08, 0.1, 0.3, 0.33, 0.35, 0.38, 0.4, 0.5, 0.8, 1, 5, 10, 30, 50, 100]\n",
    "accuracy = []\n",
    "\n",
    "for c in C_values:\n",
    "    logis_regr3 = LogisticRegression(random_state=42,C=c)\n",
    "    logis_regr3.fit(X_train, y_train)\n",
    "    accuracy.append(accuracy_score(y_test, logis_regr3.predict(X_test)))\n",
    "\n",
    "C_value_with_best_accuracy = C_values[pd.Series(accuracy).idxmax()]\n",
    "print(C_value_with_best_accuracy)\n",
    "print(accuracy[pd.Series(accuracy).idxmax()])"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 56,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "             precision    recall  f1-score   support\n",
      "\n",
      "          0       0.94      0.55      0.69        55\n",
      "          1       0.83      0.98      0.90       126\n",
      "\n",
      "avg / total       0.86      0.85      0.84       181\n",
      "\n",
      "0.850828729282\n"
     ]
    }
   ],
   "source": [
    "logis_regr3 = LogisticRegression(random_state=42,C=0.3)\n",
    "logis_regr3.fit(X_train, y_train)\n",
    "\n",
    "print(classification_report(y_test, logis_regr3.predict(X_test)))\n",
    "print(accuracy_score(y_test,logis_regr3.predict(X_test)))"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## Random Forest Classifier"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 57,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "RandomForestClassifier(bootstrap=True, class_weight=None, criterion='gini',\n",
       "            max_depth=None, max_features='auto', max_leaf_nodes=None,\n",
       "            min_impurity_split=1e-07, min_samples_leaf=1,\n",
       "            min_samples_split=2, min_weight_fraction_leaf=0.0,\n",
       "            n_estimators=300, n_jobs=1, oob_score=False, random_state=42,\n",
       "            verbose=0, warm_start=False)"
      ]
     },
     "execution_count": 57,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "rfc1 = RandomForestClassifier(n_estimators=300, random_state=42)\n",
    "rfc1.fit(X_train, y_train)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 58,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "             precision    recall  f1-score   support\n",
      "\n",
      "          0       0.79      0.56      0.66        55\n",
      "          1       0.83      0.94      0.88       126\n",
      "\n",
      "avg / total       0.82      0.82      0.81       181\n",
      "\n",
      "0.82320441989\n"
     ]
    }
   ],
   "source": [
    "print(classification_report(y_test, rfc1.predict(X_test)))\n",
    "print(accuracy_score(y_test,rfc1.predict(X_test)))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 59,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "[<matplotlib.text.Text at 0x1e9851cde80>,\n",
       " <matplotlib.text.Text at 0x1e9851df748>,\n",
       " <matplotlib.text.Text at 0x1e9851fecc0>]"
      ]
     },
     "execution_count": 59,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "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\n",
      "text/plain": [
       "<matplotlib.figure.Figure at 0x1e983766710>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "# Exploring the number of estimators in the random forest\n",
    "\n",
    "score = []\n",
    "est = []\n",
    "estimators = [1, 10, 30, 50, 80, 100, 150, 200,250, 300, 350, 400, 500]\n",
    "for e in estimators:\n",
    "    random_forest_1 = RandomForestClassifier(n_estimators=e, random_state=42)\n",
    "    pred1 = random_forest_1.fit(X_train, y_train).predict(X_test)\n",
    "    accuracy = accuracy_score(y_test, pred1)\n",
    "    score.append(accuracy)\n",
    "    est.append(e)\n",
    "    \n",
    "plot = sns.pointplot(x=est, y=score)\n",
    "plot.set(xlabel='Number of estimators', ylabel='Accuracy', \n",
    "         title='Accuracy score of RFC per # of estimators')"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Looks like 80 is the optimal number of estimators for the accuracy score to be the highest"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 60,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "[<matplotlib.text.Text at 0x1e9852cc940>,\n",
       " <matplotlib.text.Text at 0x1e983d488d0>,\n",
       " <matplotlib.text.Text at 0x1e9852efba8>]"
      ]
     },
     "execution_count": 60,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "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\n2FidTQAAAABJRU5ErkJggg==\n",
      "text/plain": [
       "<matplotlib.figure.Figure at 0x1e98528d470>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "# Exploring minimum leaf samples\n",
    "\n",
    "score = []\n",
    "leaf = []\n",
    "leaf_options = [1, 5, 10, 30, 50, 80, 100, 150, 200, 300, 350, 500]\n",
    "for i in leaf_options:\n",
    "    random_forest_2 = RandomForestClassifier(n_estimators=80, random_state=52, min_samples_leaf=i)\n",
    "    pred2 = random_forest_2.fit(X_train, y_train).predict(X_test)\n",
    "    accuracy = accuracy_score(y_test, pred2)\n",
    "    score.append(accuracy)\n",
    "    leaf.append(i)\n",
    "\n",
    "plot = sns.pointplot(x=leaf, y=score)\n",
    "plot.set(xlabel='Number of minimum leaf samples', ylabel='Accuracy', \n",
    "         title='Accuracy score of RFC per # of minimum leaf samples')"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Looks like 10 is the optimal number of minimum leaf samples for the accuracy score to be the highest"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 61,
   "metadata": {
    "scrolled": true
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "[<matplotlib.text.Text at 0x1e9853baef0>,\n",
       " <matplotlib.text.Text at 0x1e9853b7320>,\n",
       " <matplotlib.text.Text at 0x1e9853e7748>]"
      ]
     },
     "execution_count": 61,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "iVBORw0KGgoAAAANSUhEUgAAAYUAAAETCAYAAADZHBoWAAAABHNCSVQICAgIfAhkiAAAAAlwSFlz\nAAALEgAACxIB0t1+/AAAIABJREFUeJzt3XmYFNW5+PFvz84wCwMM+zKg8LIJCKgsLmg0GhWXJMZc\nNYkmrjHJ1Zj8osYkXm+Sm0Vjormu0atxidk0cYl74gaiEVFA4GXfBGSAYYaB2ad/f5yaphi6p3tm\nuqZneT/Pw8PUek51V9db55yqc0LhcBhjjDEGIC3VGTDGGNN5WFAwxhgTYUHBGGNMhAUFY4wxERYU\njDHGRFhQMMYYE5GR6gx0BSKSCWwElqjqaanOT3clIt8HrgBeVdVLfPNLgLXAUt/qecAW4Kuquk5E\nLgZ+A6xvttsfqurTIpIDfB84EwgB6cCjwC9UtUOeyxaRQcBTqjpLRL4EiKre1IrtLwZuAVao6qlt\nSH8GcL2qfj7Oeh8Ac1V1T2vTSAYRmQv8VlUntWMfdwOnAY+r6veTlbc25mUu7TyejmRBITHnAkuA\n6SIyXlVXpDpD3dTXgAtU9a0oy6pUdWrThIiEgDuAnwD/4c1+U1XPbL6ht+7fgFXALFWtFpF+wHO4\n4PKD5B5GTHOB172/TwIea+X2XwZuVNVH25K4qr4HtBgQvPWmxlunC7gCGKGqW1Kdka7GgkJivg48\nAawBrsGdcIjIV4HrgAZgJ/AVVd0cbT5wGL67Bf/dg4jcDMwCBuOCz3XAvcBAYBCulPIFVd0hImO9\nZQOARuDHuDvmJ4CRqtooIrnABmCSqu5oOggRGQc8AOTg7pZ/p6p3iUgG8AvcXXQ9sMA75jDwK+BT\n3rG8A1yrqntFZIM3PRm4EXgX+C0wAsgEnlDVnzb/IEVkGHA3UOLl4WFV/aWI/BEYBjwgIj9U1T/G\n+U5yvM/rkzjrARwPjAfOUNUGAFXd5d2tl0TJ48W4QJMGDAU+xn23W0WkEFciOcI7zleB76pqvYjU\nAH8HpgAXehfhpjv033lp7RCR04AJwJEiMk9VN/vSLgT+F5iK+/yfx32+vwSOBkaJSLGq3u7bZi7w\nP8BWYCKwH/gR8C1AgL+q6rXNzrmHgArvOIYDK4EvqmqliISBYtz58Dmgl5f3TV7evgGMBX6lqrd5\nn9fnmwKyf9pLpwo4Cncu/wkoBeZ505eq6j9jfXEikgX8HDgBV7pbDHxLVStE5Ezvs8nC/R4eVtUf\niMibuHPreRH5uqq+6dtfrN/AQGL/5jYAjwNnAP28z3YOMB2oA87yzo0NwFPAcUAf4DZVvbsVx3MV\ncCVQC1QDV6jq8lifTVCsTSEOEZkAzMSdzA8DXxKRfiIyBfflnqaqk4Gnge/Hmp9AUiOBaap6EfBF\n4G1VnQWMxv3Iv+St9wTwZ1WdCJwO/BRXrbILV1zG2/5Vf0DwfBd4RlWne9seLyJpuAAwHXcxmwTk\nA+cDNwFDvPlTcOfLL337W6aq41X1KeAR4EFv30cDJ4vIF6Ic52PAv1T1CNwP6yIR+aKqno+7qF0Y\nIyD0EpEPRGSJiHwCvA8o8D3fOsd56zT9u8ebPwN4pykgNFHV1ar6cpS08PJ2tapOABbhSiUAtwOL\nvOM8EugPfNtbloX7fKUpIHjpvOfdfSvuYnACsFxVp/oDgucO3Hd5hJfvKcB3VPVa4D1cALqdQx0F\n/FhVx+EC5Q24i9g04GoRGRJlm+m4c2Y87ns+L8o6xwGX4ILAQNy59Snc+fNj7/yJ50jcTc8M4Fqg\nUlVn44Lr9XG2vR53ozJdVafgzpGfeaW/63DBegbuN3qDiPRX1eO8bU/0BwRPrN9AS785gBwv/euA\n+4DfeNObgYt96+Xivou5wC0ickSCx5MO/Bp33TjKS+PYOJ9NIKykEN9VwHOquhvYLSLrcSWFauDF\nph+1qv4aQES+HWP+3DjpLFTVem+b34jIcd6+xuAu1O+ISF/cReJ33nqbcSUQROR/gcuAf3j5+26U\nNJ4Cfi8iRwOv4O5QGkXkZOARVa3y1jvf2+e7wPdVtc6bvhNXDdPkTW9+b9yFrq+I/Le3LA93t/un\nppW99eYAn/byX+7dSX4GF+xaEqk+EpFTce0BL6lqpT8/0aqPcCWq1t4AvaSqq7y/7wc+8P4+Ezha\nRL7mTfdqtl3zixBentOAYlXdJiIn+PbX3GeAOV47R40X2K4BfhYnv+tVdbH391qgXFVrgZ0iUgH0\njbLNC6pa4+VvaYx1/t10Lnvn/kveObMWd7edGydf4C7CdcB2EdkHvODLZ7Q0/c7E3XWfIiLgAu8O\nVQ2LyDzgTBG5ABfYQkBvXOk8lqi/ASDqb8633V99ed6uqh/GOIb/9b67LSLyAu5cX5TA8TSIyJ+B\nBSLyHPASrnTS4SwotMC7iH0ZqPaKhgAFwNW46pawb91euLv9+hjzw7iTtklWs+Qqfdv8HHe3/SDw\nL1w1RcjbN832L7hi/WPAT0XkRCBPVd9ofjyq+qyIjAFOwd3t/UhEZkfJ80DcRbT5hTTNy0vzPKd7\n+Zutqvu9ffTHBc7m24eizMukFVT1RRH5FfAHr42nPM4mC4FrRCTdX1oQkaNwF4UvRdmm3vd3Gq76\nDNyxntfUriQiffB9dvi+R186M3BBrL/XiFsMhL2/D6o+Iv5nHktNs+m6BLap8v3d/PxszX7jndtt\nyVuTdOA/VfV5ABHJA3K83+Zi3EX+Tdxv5RyiH0NEC7+By4n+m4t2DC3lP9Z50+LxeHm7SEQmASfj\nSsBfA85u6XiCYNVHLbsQd9cxRFVLVLUEV7TMw0X7k0VksLfuFbhA8a8Y80uBESIywCv6ntNCuqcC\nv1bVR4AduBM4XVUrcHcdXwEQkeHAfKDQuxg/ijup74m2UxF5HDhfVZ/AVRlV4OqTXwEuEJFs7472\nblyd+ovAlSKS6c2/GjikusXL10K8ahTvQjmfZie0qu711rvaW68QF3RjVeG05FZgD/Bf8VZU1bdx\ndea/EvcUUlPgu5NDn1Zq8ikRGer9fSXwjPf3i8C1IhISkWxc9eA34qT/Hq5q4GdeaeffuHroaNVH\nL+Kqe5r2fzlt+3w6UikwSURyxLVPzUvivl8EviEiWd45eD+u/WQM7gbtJlV9BldSzcZddGNq4TcQ\n9TfXhvx+2UtnBK6U8HwixyMi/UVkM7DLq124CVcr0OEsKLTsKlxjWiTaq3tM7w5cMfC7wAsi8iGu\nbvZKVV0aY/5yXEPWe7gL47YW0r0FuFVEFgFPAm8Bh3vLLgC+4O37GVxD3XZv2f/hGtx+H2O//w1c\n6G37Du4u63UvX4u8f0u9vN2Ba8TejqvqWIG7e/rPGPu+AJjpVUO8A/xBVaM9XXMh7oK7FNc4/Vfg\noRY+i6i86ohv4C6giTzq9zncnd8i7/hf9dL+UYz1twCPiMgKXCPrNd78b+GqKJbiHgpYigv68RwH\nvO7dEEwidvXRt3Df4VLvn+KesOrMXsKdRytxd+1LW169Vf4b99DEYmA57ju8DvfZPwusFJH3gbO8\n5YdH381B+4v2G2jpN9cao7x9vIArhWoix6OqO3G/t1e97X8GXNqG9NstZF1ndw/exeZ7uCeQrkp1\nfroyafY0jTGJ8KqYP+9/yKArsjaF7mMdrhh/VqozYozpuqykYIwxJsLaFIwxxkRYUDDGGBMRWJuC\n97jVXbjHqmpwT8ms8S2/kANdQTzY9Dq4iNyAqxfPAu5S1QdaSqe0dK/VfxljTCsVF+dHfacjyIbm\nc3Cvhs8SkZnAbRz83PqtuH5aKoHlIvIELoDMxr31mgt8J8D8GWOMaSbI6qNj8V5nV9WFuH5P/JYA\nhRzomCqMe4FkKe7Z4WdwzyEbY4zpIEGWFAoAf/cDDSKS0dS/D7AM97LUPuBJVd3jdY0wEvdi2Cjg\naREZpy30d19UlEtGRltePDTGGNNckEGhAtfbZpO0poAgIpNxPTiOwlUfPSoi5+F6h1zpdeSlIlKN\n6yemeW+fEWVl+wPKvjHGdF/FxflR5wdZfTQf1zUtXpuC/9X3clxnXFVeFxI7gCLcq+Wnef2+DMF1\nJ7ArwDwaY4zxCezlNd/TR5NxbQaX4Pp2z1PV+0TkSuCruAEl1gKXqWqtiPwCOBEXsG5U1RdbSsee\nPjLGmNaL9fRRl3+j2YKCMca0Xqyg0ONeXqtvaGRneRUV+2s7JL26+gZ2lldRWdWaLuTbrqa2gZ17\nqthfXR9/5SSoqqln554qqms7Jr191XXsLK+ipq55N/XBqKxy6dXVNwaeVjgcpnxfLbvKq6lvCD49\nY6LpMR3iVeyv5dn5G5i/bDtVNe4CVjIon9OOGcHR4wcmPb1d5dU8PX897yz/hFrvgjJ2eB/OmDWS\nI0b3S3p6W3fu45kFG3hv5Q4aGsOEgEmj+3Hm7JGMGdYn6emt31bBM/M38OHanYTDkBYKMW1sf+bN\nGcXwAXlJT2/FxjKee3sDyzeUAZCRnsbR4wdw1pwSBhQlMvhX6yxeVco/3tnI2o8rAMjOSmf2xEHM\nm1NCn7zspKYVDodZsGw7L767mS2lboye3jkZHDd5CGfMHknvnFaNQWRMu/SI6qOyvTX8/LH32bGn\nKuryebNLOPf40UnL07Zd+/j544up2Be9NHLRp8dy0rRhSUtv7dZybnviA6prD717Tk8LccVZE5kx\nbkDS0luydie/fXIp9Q2HfvRZGWlcc94Uxo0sSlp685du48HnVhDti+6dk8H/u2BaUgPR8ws38ufX\n1kZdVpSfzQ0XTqN/n+ajcLZNOBzmiVfX8PJ7zcfacYb07833LjiS/Nzmg5kZ0z49uvrosZdXxQwI\nAM8s2MDqLXuSlt4Dz62IGRCa8rN9d3IepW1obOTev38UNSC45WF+99zypFVfVdXUc9/Ty6MGBIDa\n+kbuffqjpFW37K6o5uEXVkYNCAD7quu57+mPSNbNzaZP9sYMCOBuMB56YWVS0gJYtn53zIAArgT4\nxKtrYi43Jtm6fUlhd0U13717AfEOc0BRLyaOijeGeHx799XynpbGXW/4gDwOH1bY7vR27qli6brd\ncdc7bGghIwa2/256a+k+dHP8ADqhpIiBfdtfrbN+awUbtu+Nu96RY/rTJ7/91TorN5axbVf8gH3M\nhAHkJqFaZ8maneyqaD6E8cEy0kPcevUcCqy0YJKoxz599N7KHdz1t2UdlR1jAvHt86cwaVTy26JM\nz9Wjq4+M6epKW6j+NCaZuv3TR6OHFBAKEbf6aFDfXkm5E6vYX8u7K2L2yhExYmAeY5PwVFBpeRUf\nron/0veYYYWMHBj9tfbW+HhnJSs2xq8+mjSqL4OSUH20bmsF67ZVxF1v+thiipJQfbRiYxkf79wX\nd71ZkwbRO7v9P58P1uxkZ3l13PUeeXEVy9btZt6cEkoGFbQ7XWNi6fZBoW9BDtPGFrMoTj3/V8+Y\nwOFD21/HD7Cr4r3Io4zRpIVCXHXOJAYm4VHKxsYwN9z3NqV7Yl9YsjPT+ebnJpPXq/114NW19Xz3\nrgXsa+E9iMK8LL71+clkpLe/IFq2t4bv3bMgZsM2wLDi3nz93EmEQlFLw62yeUclP3rw3RbXmTiq\nL5edOaHdaQFMPrwfv/rjhwmtu3j1Thav3snkw/px5uySpJ2vxvj1iOqji04Zy8Ci2I8QnnPsqKT+\nwC49YwKFebEbBS86dWxSAgJAWlqIK8+eRK8Yd63paSEumzchKQEBICcrgyvOmhjzgp+dmc5VZ09K\nSkAA9wjoJaePJ9b1Pq9XJpefNTEpAQHcAwDnn3R4zOX9CrK55DPjkpIWwKRR/TjtmBExlxflZx9y\n7i5Zu4ufPrKIX/5hMSs3liXtyStjoAc0NDeprKrjubc38NaSbZG73MOGFHDaMSOYLsl7hr/J7opq\nnn17I28v2x55+3b8yCJOnzkyKU85Nbd9936eXbCBd1fsoL6hkVAIphzWnzNmj+SwIcm/o9y4fS/P\nvr2Bxat20hgOk54WYsa4AZwxayTDipP/8ppuKuMfCzexbN0uwrj3IY6ZMJAzZ5dQnKR3Bvw+XLOT\n59/ZxCrvSate2enMnjSYM2eXUNg7uU8BhcNh3ln+CS++u5mNn7gnrfJ6ZXL8lCGcPnMkOVnpLFpV\nyjPzN0RebvMbM6yQebNLmDiqb9KCo+n+euzTR801NDZSsa+OrMy0DnlTtL6hkYp9tfTKzoh5N59M\ntXUNVFbVkZuTQU5W8OnV1Dawr7qOvF6ZZGUGP65FVU09VTX15OdmkZkRfEF3f3UdNXWN5OdmJq30\n05LKqjrq6hsp6J1JetrB6TWGw3y4eifPLNgQ9THdUYPzOXN2CVMP72/BwcRlQcGYbiIcDrNs/W6e\nmb+BNR+XH7J8+IA8zpxdwnQpJs2Cg4nBgoIx3Uw4HGblpj08M389Kzcd+kTY4H65nDm7hKPHDzik\n1GGMBQVjurHVW/bwzIINLIvydvuAol6cMXMksyYNilSBNYbDLF+/G928h8ZwmJJBBRw5pn+HVJGZ\nzsGCgjE9wPptFTy7YAOLV+88ZFm/gmxOnzmSksEF/O7Z5Yd051GYl8XlZ05gfEnyH4QwnY8FBWN6\nkM07KnnW60q9+Q+kpZc5M9LTuOGiaYwabC/IdXcdHhR8w3FOAWqAS1V1jW/5hcB1QAPwoKre7Vs2\nAFgEnKKqLXZJaUHBmNi27tzHc29v5J3ln9CY4G990ui+fPsLUwPOmUm1VPR9dA6Qo6qzgOuB25ot\nvxU4GZgDXCciRQAikgncC1hnL8a005D+vbls3gR+evkxHDd5cELbLFu3m/IWun433VuQD7IfC7wA\noKoLRWRGs+VLgEKgHghBpJR7K3APcEMiiRQV5ZKREfzz8cZ0ZcXF+Rw2sh9vLnkuofVDGekUF7e/\nryzT9QQZFAoA/0PUDSKSoapNneYsw1UR7QOeVNU9InIxUKqqL4pIQkGhrCw5g9UY0901hsNkZaRF\nhodtSV11HaWl8cexMF1XrKAfZPVRBeBPNa0pIIjIZOAMYBRQAgwQkfOArwKniMhrwFTg9yIyKMA8\nGtNjpIVCHJXAsKyHDy2kX2FOB+TIdEZBBoX5wOkAIjITWOpbVo5rM6hS1QZgB1Ckqser6gmqOhf4\nAPiyqm4PMI/G9CinHTOCrDjdg8ybU9IxmTGdUpBB4SmgWkQWALcD14rIBSJyuapuxDUmvyUibwF9\ngIcCzIsxBhhanMc3Pz+Z3Bj9cM05YhBHjLYR3noye0/BmB6oqqaetz/ajm7aw/ptFZGBfkYMzONH\nFx9lHer1ADYcpzEmold2BidNG8ZV50zi6nOPiMzf9EllQiPdme7LgoIxPdzIQfmMHnLgDebX3v84\nhbkxqWZBwRjDiUcOjfz97sodVFbVpTA3JpUsKBhjOGrcAHrnuMbnuvpG5i/dluIcmVSxoGCMISsz\nnWN93WD8a/HHCfeVZLoXCwrGGADmTj1QhbSjrIoVG8pSmBuTKhYUjDEADOyby8SSosj0vxZbg3NP\nZEHBGBMx98hhkb8/WL2T3RXVKcyNSQULCsaYiKlj+lGUnw24DvTe+HBrinNkOpoFBWNMRHpaGidM\nGRKZfv3DrdQ3xO9V1XQfFhSMMQc5bsoQ0rxuLsora/kgynjPpvuyoGCMOUhRfjZHju0fmbYG557F\ngoIx5hD+N5xXbCxj2659KcyN6UgWFIwxhxg/soiBfXMj068ttgbnnsKCgjHmEKFQ6KDSwvyl26ip\na0hhjkxHsaBgjIlqzhGDIqO07a+p590Vn6Q4R6YjRB9+KQlEJA24C5gC1ACXquoa3/ILgeuABuBB\nVb1bRDKBB3HjNmcDP1bVp4PKozEmtt45mRw9fiBveZ3jvbb4Y46bPCTOVqarC7KkcA6Qo6qzgOuB\n25otvxU4GZgDXCciRcBFwC5VPQ44DfhtgPkzxsRx4rQDVUjrt+1lvQ3A0+0FGRSOBV4AUNWFwIxm\ny5cAhUAOEALCwJ+BH3jLQ0B9gPkzxsQxanABIwflR6bt8dTuL7DqI6AAKPdNN4hIhqo2XeiXAYuA\nfcCTqrqnaUURyQf+AtwUL5GiolwyMtKTl2tjzEHOPv4w7vjTBwC8u2IHV583lbzcrBTnygQlyKBQ\nAeT7ptOaAoKITAbOAEYBlcCjInKeqv5ZRIYDTwF3qerj8RIpK9uf/JwbYyLGDy8kNzuD/TX11NY1\n8PRrazjlqOGpzpZpp+Li/Kjzg6w+mg+cDiAiM4GlvmXlQBVQpaoNwA6gSEQGAi8B31PVBwPMmzEm\nQdmZ6cw+YlBk+l+LPyZsA/B0W6Ggvlzf00eTce0DlwDTgDxVvU9ErgS+CtQCa4HLgF8C5wMrfbv6\njKpWxUqntHSvnZ3GBGzbrn18//53ItPf/eJUxpf0TWGOTHsVF+eHos0PLCh0FAsKxnSMXzz+Pis3\nuaa/GVLM1889IsU5Mu0RKyjYy2vGmIScNO3AADyLV+9kT2VNCnNjgmJBwRiTkKlj+lOY5546ami0\nAXi6KwsKxpiEZKSncbzvjebXP9hKQ6MNwNPdWFAwxiTshKlD8MbfoWxvDR+u2ZXaDJmks6BgjElY\n34Icph5uA/B0ZxYUjDGt4u8P6aP1u/nEXiDtViwoGGNaZUJJXwb06RWZft0G4OlWLCgYY1olLRRi\nrm8AnjeXbKXWBuDpNiwoGGNa7djJg8lId5ePfdX1/HvljhTnyCSLBQVjTKvl9crkqHEDItOvWYNz\nt2FBwRjTJif5GpzXbq1g4/a9KcyNSRYLCsaYNhk9pIARA/Ii0/Z4avdgQcEY0yahUIi5vtLCwuXb\n2V9tgyV2dRYUjDFtNnPCQHKy3MiHtXWNvP3R9hTnyLSXBQVjTJvlZGUwZ9LgyLQNwNP1WVAwxrTL\n3CMPdJK3dec+Vm3e08LaprOzoGCMaZehxXmMHd4nMm0Nzl1bRlA79g3HOQWoAS5V1TW+5RcC1wEN\nwIOqene8bYwxndOJRw6NlBAWaSnl+2op7J2V4lyZtgiypHAOkKOqs4DrgduaLb8VOBmYA1wnIkUJ\nbGOM6YSmSzEFuZmAG4DnTRuAp8sKrKQAHAu8AKCqC0VkRrPlS4BCoB4IAeEEtjlEUVEuGRnpycy3\nMaYNTp1Vwp9fXQ3Am0u38eV5k0hPizoMsOnEggwKBUC5b7pBRDJUtelB5mXAImAf8KSq7hGReNsc\nosy67TWmUzhqbH/+8upqwkBpWRX/XLiBqWP6x93OpEZxcX7U+UFWH1UA/lTTmi7uIjIZOAMYBZQA\nA0TkvJa2McZ0bv0LezH5sH6RaWtw7pqCDArzgdMBRGQmsNS3rByoAqpUtQHYARTF2cYY08n5B+BZ\ntm4XpXuqUpgb0xZBVh89BZwiIgtwbQaXiMgFQJ6q3ici9wJviUgtsBZ4CNe+cNA2AebPGJNkk0b1\no39hDjvLqwkDr33wMefNPTzV2TKtEOrqbx+Wlu7t2gdgTDfzj4Ub+ctrawHXxfZtV88hM8Neieps\niovzoz4FYN+UMSap3AA87npTWVXHe2oD8HQlFhSMMUlVkJvFDDkwAI81OHctFhSMMUnnH8N5zZZy\ntuyoTGFuTGtYUDDGJN2YYYUMLe4dmbbSQtdhQcEYk3ShUIiTfKWFBR9tp6rGXjnqCiwoGGMCMXPi\nILK9AXhqahtYaAPwdAlxg4KIDOqIjBhjupde2RnMmnjg8mED8HQNiZQU3hCR50TkPBHJDDxHxphu\n40RfFdKW0n2s+bi8hbVNZ5DQy2sichzwFeAk4B/AQ6r6XsB5S4i9vGZM5/bTRxZFgkG/ghzGDC9k\nzNBCZk4cRK/sIDtVMC2J9fJawm80i0gO8AXgJ7hurkuBq1V1YbIy2RYWFIzp3B5/ZRWvvLflkPm5\n2RlcefZEJo3uF2UrE7Q2v9EsIieLyMO4/omOA85X1RHAxcBfkplJY0z3smZLOf9cdGhAANhfU88d\nf13Kpk/2dnCuTEsSaVP4IfBPYIyqXqaqCwBUdSlu9DRjjInq6QXraWyhLF/f0Mhzb2/suAyZuBIJ\nCmfgejbdLyJDReQWEckFUNVfB5s9Y0xXta+6jmXrdsdd7/1VpdTVN3RAjkwiEgkKjwGDvb/3ets8\nEliOjDHdQuX+uoTWa2gMs7/GgkJnkUjT/0hVPQtAVSuAm0Tkg2CzZYzp6vJzs0gLhWiM8zBLZkYa\nufYUUqeRSEkhLCJHNE2IyDggsVsAY0yPlZuTwZEJjNF89PgBNt5CJ5JIeP4O8LKIbMGNhtYf+FK8\njUQkDbgLmALUAJeq6hpv2SDgCd/qU4HrgQeAh3HjNjcAl6nqykQPxhjTucybU8LSdbuorW+MurxX\ndjqnzxzZwbkyLYkbnlX1FWAEcAVueMyxqvpGAvs+B8hR1Vm4C/5tvn1uV9W5qjoXuAF4H7gfNz5z\nhqrOBm7BvRNhjOmiRgzM59ovTKEwL+uQZVmZaXz7/KkM7tc7ypYmVRJ5T0GAXwJfB64B7hORRILC\nscALAN4LbjOi7DsE3AlcpaoNwCogwytlFGDVVMZ0eTKiiF9eNdu9qDaqb2R+bnYGowcXpDBnJppE\nqo/+CPwd9+LaQ8BngGUJbFcA+Ds6aRCRDFX19587D/hIVdWbrsRVHa3EVVOdGS+RoqJcMjLSE8iO\nMSaVzhhUyMwpQ7n4lpcA2FNZSy0hhhXnpzhnxi+RoJCmqj/yOsN7H7gXWJDAdhWA/9tOaxYQAC4C\nfuObvhZ4UVVvEJHhwD9F5AhVrY6VSFnZ/gSyYozpLAb1zWX7bve7XbB4CydOG5biHPVMxTGCcSJN\n/vtFJBtXtTNdVWuAnAS2m49rI0BEZgJLo6wzg4MDTBkHShe7gUzAigHGdCPjRxZF/l6xaU8Kc2Ki\nSSQoPAo8AzwHfFNEngcSGVvvKaBaRBYAtwPXisgFInI5gIgUAxWq6n+I+XZgmoi8ieta40ZV3Zf4\n4RhjOrtxvqCwcmNZ3PcYTMdKpProDeBhVd0rInOBo4CX4m2kqo3Alc1mr/QtL8U9iurfphLXE6sx\nppuSEX0if1dW1fFx6T6GD8hLYY6MX0INzao6HkBVtwDRuzw0xpgEFORmMaw4jy2llQCs2FhmQaET\nSSQoLBfYCiUdAAAZe0lEQVSRHwLvAFVNMxN8V8EYYw4xfmRRJCis3FjGp48anuIcmSaJBIW+wIne\nvyZh3ChsxhjTauNG9uHl9zYDoJvLaGhsJD3NurroDOIGBVU9Md46xhjTGjK8D6EQhMNQVdPApk8q\nGWUvsnUKcYOCiPwLVzI4iKpaScEY0ya5OZmUDMpn/TY36tqKjWUWFDqJRKqPbvb9nQmcjXufwBhj\n2mzcyKKDgoJ1jNc5JFJ99HqzWa+IyDu4YTqNMaZNxo8o4vmFmwBYvWUP9Q2NZKRbu0KqJVJ9NMI3\nGQImAv0Cy5ExpkcYM6wP6WkhGhrD1NY1sm5rBWOH94m/oQlUItVH/pJCGCgFvhlMdowxPUV2Vjqj\nhxSweovr2WblxjILCp1AIuMpjMKNoTAKEOAkVX0+8JwZY7q9g/pB2mhNlZ1BIuMpnIfrHRXcYDsr\nReTsQHNljOkRxo04EBTWbi2ntq4hhbkxkFiHeD8ATgZQ1bXAdOC/gsyUMaZnOGxoQWR85vqGMGs+\nLo+zhQlaIkEhS1U/aZpQ1R24BmdjjGmXzIx0Dh9aGJm2KqTUS6Sh+S0R+QPwmDd9PvB2cFkyxvQk\n40cWRYLBSgsKKZdIULga97TRFbgxk18H7g4yU8aYnsM/vsL6bXupqqmnV3YilyYThESqjzKBKlWd\nhwsO/UgsmBhjTFwlg/LJznIDLDaGw6zeYqOxpVIiQeFxYLD3915vm0cCy5ExpkfJSE9DfO8nWLtC\naiVyxz9SVc8CUNUK4CYR+SDeRiKSBtwFTAFqgEtVdY23bBDwhG/1qcD1qnqPiNwAnAVkAXep6gOt\nOSBjTNczbkQRS9buAiwopFoiJYWwiBzRNCEi43BtC/GcA+So6izgeuC2pgWqul1V56rqXOAG3HsQ\n93vDfc4G5gAnADbyhjE9gP8lts2fVFJZlcglxgQhkaDwHeBlEXlPRN4DXgS+ncB2xwIvAKjqQmBG\n8xVEJATcCVylqg3AqcBS4CngGeDZRA7CGNO1DR+QR+8cV3ERBnSTtSukSiK9pL7idYo3BfiM9+95\nIN6gqgWA/02UBhHJUNV637x5wEeqqt50f2AkcCYwCnhaRMap6iHjOTQpKsolIyM93mEYYzq5yWOK\neXvpNgA27qjktGNHpzhHPVMivaSOwj2OegnQB/gJrs4/ngog3zed1iwgAFwE/MY3vQtYqaq1gIpI\nNVAM7IiVSFnZ/gSyYozp7EYPyo8Ehfd1B6Wle1Oco+6tuDg/6vyY1Ucicq6IvAi8ixun+SJgm6re\noqqlCaQ5Hzjd29dMXLVQczOABb7pt4DTRCQkIkOA3rhAYYzp5saNOPAE0tad+yjfV5vC3PRcLbUp\n/BXYA8xS1ctV9WWgsRX7fgqoFpEFwO3AtSJygYhcDiAixUCFv2pIVZ8FFuMC0TPA1V5bgzGmmxvS\nvzcFuZmRaXu7OTVC4XD06noRmQRcjCshbAD+AFynqiOibpAipaV7Y7Y3GGO6lnv+vox3V7ja4uOn\nDOHiz4xLcY66r+Li/Kh92MUsKajqMlX9DjAU+B9gLjBQRJ4TkdMDyaUxpkfzP5pqJYXUSGSQnQZV\n/buqngsMA17FBQljjEkqfz9IO/ZUsau8OoW56ZlaNUq2qpaq6q9UdUpQGTLG9FwD+vSib0F2ZHrl\nJistdLRWBQVjjAlSKBRi/AgbojOVLCgYYzqVcc3GbY71MIwJhgUFY0yn4m9sLttbw46yqhTmpuex\noGCM6VT6FuQwoKhXZHqFtSt0KAsKxphOxx5NTR0LCsaYTme8tSukjAUFY0ynI74nkPbur+PjnftS\nmJuexYKCMabTKeydxdD+vSPTVoXUcSwoGGM6peaPppqOYUHBGNMp+dsVdNMeGhutXaEjWFAwxnRK\nMqIPTd147q+pZ9MOG3SnI1hQMMZ0Sr1zMhkx8MDoYCs32rjNHcGCgjGm02r+aKoJngUFY0yn5W9s\nXrV5D/UNrRn80bRFRlA7FpE04C5gClADXKqqa7xlg4AnfKtPBa5X1Xu85QOARcApqroyqDwaYzq3\nMcMKSU8L0dAYpqaugQ3b9nL4sMJUZ6tbC7KkcA6Qo6qzgOuB25oWqOp2VZ2rqnOBG4D3gfsBRCQT\nuBewXrCM6eF6ZWdQMvhAu4L1gxS8wEoKwLHACwCqulBEZjRfQURCwJ3Ahara4M2+FbgHFyziKirK\nJSMjPTk5NsZ0OtPHD2LtxxUArN1aQXFxfpwtTHsEGRQKgHLfdIOIZKhqvW/ePOAjVVUAEbkYKFXV\nF0UkoaBQVrY/Wfk1xnRCI/vnRv5evn43W7ftIdNuBNstVnANsvqoAvCnmtYsIABcBNznm/4qcIqI\nvIZrZ/i91/5gjOmhDhtaSEa6u1TVNzSyxis1mGAEGRTmA6cDiMhMYGmUdWYAC5omVPV4VT3Ba2v4\nAPiyqm4PMI/GmE4uKzOdw4cWRKatH6RgBRkUngKqRWQBcDtwrYhcICKXA4hIMVChqvbuujGmRQf1\ng2SNzYEKdfV+yktL93btAzDGxLV6yx7+59H3AUhPC3HnNceRkxVkk2j3V1ycH4o2315eM8Z0eqMG\nF5Cd6RqXGxrDrN5SHmcL01YWFIwxnV5GehpjfC+tWbtCcCwoGGO6BOsHqWNYUDDGdAn+xuaNn+xl\nX3VdCnPTfVlQMMZ0CSMH5tMr2zUuh8OwapN1pR0ECwrGmC4hLS2EDO8TmbZHU4NhQcEY02X42xWs\nsTkYFhSMMV2GPyhsKd1Hxb7aFOame7KgYIzpMoYU9yY/NzMyvdKqkJLOgoIxpstIC4WQEVaFFCQL\nCsaYLuWg9xXsCaSks6BgjOlS/EHhk9372V1RncLcdD8WFIwxXcrAol4U5WdHpq1dIbksKBhjupRQ\nKMS4Eb73FaxdIaksKBhjupxxzd5X6OpDAHQmFhSMMV2Ov11hV0UNpeXWrpAsgY1SISJpwF3AFKAG\nuFRV13jLBgFP+FafClwPPAA8CJQA2cCPVfXpoPJojOma+hf2orhPDqV7XDBYubGMAX16pThX3UOQ\nJYVzgBxVnYW74N/WtEBVt6vqXG8s5huA94H7gYuAXap6HHAa8NsA82eM6cLGjbCutIMQZFA4FngB\nQFUXAjOaryAiIeBO4CpVbQD+DPzAWxwC6gPMnzGmC2veD5K1KyRHkIOcFgD+MfMaRCRDVf0X+nnA\nR6qqAKpaCSAi+cBfgJviJVJUlEtGRnrycm2M6RLmTMvkvmeWA1C+r5aacIjhA/JTnKuuL8igUAH4\nv6G0ZgEBXHXRb/wzRGQ48BRwl6o+Hi+RsrL97c2nMaaLGtwvl2273DVg/uItfGr6sBTnqOsoLo4e\nQIOsPpoPnA4gIjOBpVHWmQEsaJoQkYHAS8D3VPXBAPNmjOkGmj+aatovyKDwFFAtIguA24FrReQC\nEbkcQESKgQpV9VcE3ggUAT8Qkde8f/ZIgTEmqvH+zvE2ldFo7QrtFurqjTOlpXu79gEYY9qssqqO\nb/3mzcj0zZccxYiB1q6QiOLi/FC0+fbymjGmy8rrlcmIAXmRaXs0tf0sKBhjujR/u4IFhfazoGCM\n6dL8QWHV5j00NDamMDddnwUFY0yXJsP7kBZy1ePVtQ1s2L43xTnq2iwoGGO6tF7ZGZQMPtC4bI+m\nto8FBWNMl2f9ICWPBQVjTJfn7wdpzZZy6uqtXaGtLCgYY7q8w4cVkp7m2hVq6xtZt7U8zhYmFgsK\nxpguLzszncOGFkamrQqp7SwoGGO6Bf+4zdbY3HYWFIwx3YK/XWHt1gpq6hpSmJuuy4KCMaZbGD2k\nkKwMd0lraAyzZou1K7SFBQVjTLeQmZHGmGHWrtBeFhSMMd2G9YPUfhYUjDHdhj8obNhewf5qG+a9\ntSwoGGO6jZJB+eRkuTHbw2FYtWVPinPU9VhQMMZ0G+lpachwezS1PTKC2rGIpAF3AVOAGuBSVV3j\nLRsEPOFbfSpwPXBfrG2MMSYR40YW8eHaXYC1K7RFkCWFc4AcVZ2Fu+Df1rRAVber6lxVnQvcALwP\n3N/SNsYYkwj/+wqbd1RStre6Q9INh8PU1DV02HgO4XCYmtoGGhuTOyJxYCUF4FjgBQBVXSgiM5qv\nICIh4E7gQlVtEJG42zRXVJRLRkZ6cnNujOmyCgp7kZ2ZHnl57br/XcDE0f04+/jDmHXE4KSnt7+6\njmfeXMeL72yktKyKtBAcKQM494TDmTK2OOnplVfW8LfX1/LKu5vYU1lDRnqIoycO4rNzD0dG9m33\n/oMMCgWA/+2RBhHJUFX/4wDzgI9UVVuxzUHKyvYnLcPGmK6ttq6BX//5w0PeZv5o3S4+WreL02eO\n5PNzD0taepVVdfzyD4vZvKMyMq8xDItW7mDRyh38x8ljOGXG8KSlt7uimp899j47yw+UfuobwixY\nso2FS7dz2bwJHDNhYEL7Ki7Ojzo/yOqjCsCfalqUi/tFuHaE1mxjjDFR/e2t9azcFPuJo38s3MiS\ntTuTlt7jr6w6KCA094dXVrMxiSPBPfDcioMCgl9jOMwDzy1nV4zliQqypDAfVxL4k4jMBJZGWWcG\nsKCV2xhjzCFq6hp4/YOtcdd77OVVrNta0f70aht456NP4q734D9WcOSY/u1Or2J/bdyG8/qGMK99\n8DGfO6HtpaEgg8JTwCkisgAIAZeIyAVAnqreJyLFQIWqhlvaJsD8GWO6kS2llVTVxK9YKN1TzdPz\nNwSfIc/mHZUtliaSTTe3792MwIKCqjYCVzabvdK3vBT3KGq8bYwxJq6wDbYGQLidTyMFWVIwxpgO\nM6R/LpkZaXGH4szrlcHEUf3anV51bT0frtkVd72i/GzG+l6oa6u9+2tZviH+excjB0VvQE6UBQVj\nTLeQm5PJMRMG8taSbS2u98VPjWH2pOQ8mnr7nz5k6bqWA8PXzhjPhJL2PyoaDoe5+f/+Hbcqau6R\nQ9uVjnVzYYzpNs6bexiD+ubGXH7UuAHMnDgoaeld9Omx9MnLirn8U9OHJSUgAIRCIb52xnh6Zce+\nl//cCaMZVpzXvnTC4eS+DdfRSkv3du0DMMYkVWVVHU+9sY4FH22npta9r9C3IJtPTRvGqUePIC0t\nlNT0dldU8+Qb63h3xQ7qG1zV1cCiXpx69AhOmDqEUCi56W3btY8n31jH4lU7afSu38MH5HH6zJEJ\nv6MAUFycHzVjFhSMMd1STW0DO/ZUkZ4WYlDf3KQHg+b2V9ezs7yK7Mx0iot6kZbkYNBcZVUduyuq\nycnOoLgwp9XBx4KCMcaYiFhBwdoUjDHGRFhQMMYYE2FBwRhjTIQFBWOMMREWFIwxxkRYUDDGGBNh\nQcEYY0xEl39PwRhjTPJYScEYY0yEBQVjjDERFhSMMcZEWFAwxhgTYUHBGGNMhAUFY4wxERYUjDHG\nRPSoMZpFJBN4ECgBsoEfq+rTAaf5PlDhTa5X1UsCSucY4OeqOldEDgceAsLAMuBqVW15NPPE00kH\n7gfE2/+VQHVQ6XlpHvQZAj8JKj3vHHkYd440AJcB9UGkl8h3JiKXAVd4efixqj6bpPSOBJ4FVnuL\n71bVPyYjvWi/M2B5UMfXmnMywPQyCejz9NJM6DeQjPR6WknhImCXqh4HnAb8NsjERCQHCKnqXO9f\nUAHh/wG/A3K8Wb8CbvKOMwScncTk5gGo6hzgJtzJGVh6MT7DII/vdCBDVWcDtxDQ8SXynYnIIOBb\nwBzgVOB/RCQ7SelNB37l+1z/mMT0ov3Ogjy+hM7JgNML7PNM9DeQrPR6VEkB+DPwF+/vEC6aBmkK\nkCsiL+E+6xtVdWEA6awFPgs84k1PB173/n4e+DTwVDISUtW/iUjT3cdIYA9wclDpEeUzJMDjA1YB\nGSKSBhQAdcDMANJL5DtrAOarag1QIyJrgMnAv5OUnojI2bi722uAo5OUXrTfWWDH14pzMsj0gvw8\nE/0NJOX4elRJQVUrVXWviOTjTtqbAk5yP3ArLmpfCTwmIkkPxKr6V9zFq0lIVZv6L9kLFCY5vXoR\neRi4E3gs4PQO+QwDTq8SV+2xEldFcEcQ6SX4nRUA5b512px2lPTeBb6rqscD64AfJSu9GL+zoI8v\nkXMyyPQC+zxJ/DeQlPR6VFAAEJHhwL+AR1T18YCTWwU8qqphVV0F7AIGB5wmgL++Ox93J5NUqvoV\nYCzuwtkrwPSifYYDA0zvWuBFVR2Lu0N7GMgKML0m0b6zCu/vINJ+SlUXNf0NHJnM9KL8zgI/vgTO\nySDTeynAzzPR30BS0utRQUFEBgIvAd9T1Qc7IMmvArd5aQ/BRfJtHZDuYhGZ6/39GeDNZO1YRL4k\nIjd4k/txP/b3gkqP6J/hSwGmV8aBu63duAbEwD5Pn2hpvAscJyI5IlIIjMc1KibDiyJytPf3p4BF\nyUovxu8ssONrxTkZZHpPBvV5kvhvICnp9bQ2hRuBIuAHIvIDb95nVLUqoPQeAB4SkbdwTwl8VVWD\nbscAuA64X0SygBUcqN9NhieB/xORN3AXzGu8NIJK75DPENgZYHq3Aw+KyJu4EsKNwHsBptfkkO9M\nVRtE5A7cDz4N+L6qVicpvauAO0WkDtgOXK6qFUlKL9rv7D+BOwI6voTOyYDT20xwn2dCv4FkHZ91\nnW2MMSaiR1UfGWOMaZkFBWOMMREWFIwxxkRYUDDGGBNhQcEYY0yEBYUeSkRKRCQsIqc0m79BREqS\nsP+k7CdOGiNEZKWILPLenm3NtjNE5Hdx1rlFRM5qXy47NxF5SEQubuc+5onIt5OUpWj73+Cdr2eJ\nyC3evP8SkeOCSrMn62nvKZiD1eGedT5CVfemOjNtMBd4X1UvaO2GqvoecGmcdX7Yxnz1NNM7IhGv\nR+OmXo1PwL0xbZLMgkLPthV4Gfe25OX+Bd7bkjer6lxv+iHgNe/f33D9uxyBe7HrNeBi3AtL56rq\nCm83N4vIFFw3xleo6hLvbdd7geG4N0FvUNVXRORmXMdzI4DfqupdvryMBe4D+gL7cD1B1uG6ZM4T\nkXtU9Urf+jd7+5kCDMD1vXMScAzwIfBF3EXlZq8b6dfw3gYFioFvqurzrT1mEdkAzFXVDf7Pz9v/\nYlwnbb2Ab3rHMBG4XVVvb/bZfwr4Be5FpTLgP1R1p4j8BPe2bF/cy0ufVdXtIrIdeMbL/zbgLm//\nw4CLVfV1Lw8rvM8gB7hGVV9qlu6XcS9ipeHeyL0a18nag8Akb7W7VPV+3zYTcP3xICIbgT/iun2Y\ngvt+b1XV3zdLZzLu+8zAnRuXqOpqESnFdT89Hddvz4WqusG33cW4G4F/AjOA34nIuaq6FJM0Vn1k\nrgNObV6NFMdk4L9x/ckfBZSo6izgDxwcXFar6pHeug97834DPKiq04GzgHt9VT85qjrBHxA8jwJ3\nqOpkXN9Ef8Fd4H4IPO0PCD5H4C6AF+Euaj/HXdimeflvLss7hmtxwaatxxyTqh6B66X0TuBzuIt4\ntNLITcCVqjoDd7GfJm68hXHAbK9fpjXAhd76A4FnVXWcN32u16XyzbiLfJNsVZ0GXAA87L0NC4CI\nTMSNHTFbVacCO4DvALOBvt73eDKuW2b/MS0H7gHuUdX/89LcpaqTcIH4Zi8I+F0L3OYd3524mwGA\n/sBr3vf8BK4zwmif4+9xgflSCwjJZ0Ghh1PVCtzF4P5W1MtvV9XF6gaa2QK86s3fiLtzbvI7L41/\nACNFpA/uwnKLiHyA6/I3EzjMW/+d5gmJSB5wuKo+6e1rIa5PIomTx5e9LkU2AttUdbk3/XGzPDZ5\nwft/Ge5OvK3HHMvzvvUXqup+Vd0I9Imy7tPAUyLyW2CFqr6kqmtwAfxSEbkNmAXkxdj/P2Pk7X4A\nVf0AV6LwX6xPBMYAC73v5mxcEFqG6xL6RVyA/V6c4zwJ1y0DqroT+Dvu7t7vOeC3IvIAUAs0dUxZ\nDTSVKh729mU6mAUFg1eN0FSN1CSM6wu/Sabv79pmu4jVn1Pz+bVAOnCSqk717khnAk13e9H6oEpr\nlg+86XhVn/48JtLfVFMfMc2PO9r+Yu3Tv21ms2UJ58erTpqLKw38QkS+LyLTcZ3MpeFKSk/586mq\niezfPz+t2XQ68Cff93I08A1V3YWr5roTF4jf94J7LM2vKYd8V6r6F1yJ7V1cSeYeb1Gjrzvo5vkz\nHcSCgmlyHa6/9iHe9E5gtNfjYl9cVUdrXQggIucCK1V1P+4u9uve/AnAEiA31g68ksxaEfmst81M\nYBDJ6y00mXbiLqDQjtHZROQdIF9Vf43roG8arg3kNVW9Bze05adxF/LW+KK3/xm4EoS/6uU14FwR\nGSAiIeBu4Brv6atHcXf338KNNzG82X7rOXDh/yfwNS+d/sA53r79x/dH4GhVvRf4gXd84AaSmef9\nfQkHSj/R+NM0SWRBwQAHVSNletMf4S4EH+FG0mpLd9FjvaqIbwNf8eZ9E5gpIktwjZJfSuDJp4uA\nb4nIUtzQjp9tdmfcWfwI+I2I/Jv2jXtwI65XzEW49oof4T6rKd7n9k9cMB3Vyv2OFjfW733A+ara\n0LRAVT8E/svb90e4a8PPcBfmKm/eu8CTUerx3wAuFJFv4oYw7et9V28AP1HV95ut/1PgRi8vt+LO\njybnecd4Kge3hzT3AnCPiMxO+OhNQqyXVGN6AO/po5tV9bUUZyUmEQmrarSqO9OBrKRgjDEmwkoK\nxhhjIqykYIwxJsKCgjHGmAgLCsYYYyIsKBhjjImwoGCMMSbi/wM1QVSTiNjAyAAAAABJRU5ErkJg\ngg==\n",
      "text/plain": [
       "<matplotlib.figure.Figure at 0x1e9853783c8>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "# Exploring minimum leaf samples\n",
    "\n",
    "score = []\n",
    "split = []\n",
    "split_num_options = [2, 5, 10, 30, 50, 80, 100, 150, 200, 300, 350, 500]\n",
    "for s in split_num_options:\n",
    "    random_forest_3 = RandomForestClassifier(n_estimators=80, random_state=42, min_samples_leaf=10, min_samples_split=s)\n",
    "    pred3 = random_forest_3.fit(X_train, y_train).predict(X_test)\n",
    "    accuracy = accuracy_score(y_test, pred3)\n",
    "    score.append(accuracy)\n",
    "    split.append(s)\n",
    "\n",
    "plot = sns.pointplot(x=split, y=score)\n",
    "plot.set(xlabel='Number of minimum samples to split', ylabel='Accuracy', \n",
    "         title='Accuracy score of RFC per # of minimum leaf samples')"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Accuracy drops after 100 samples. So, it might be a good idea to set the minimum number of samples to split as 100."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 62,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "             precision    recall  f1-score   support\n",
      "\n",
      "          0       0.97      0.53      0.68        55\n",
      "          1       0.83      0.99      0.90       126\n",
      "\n",
      "avg / total       0.87      0.85      0.84       181\n",
      "\n",
      "0.850828729282\n"
     ]
    }
   ],
   "source": [
    "rfc2 = RandomForestClassifier(n_estimators=80, random_state=42, min_samples_leaf=10, min_samples_split=100)\n",
    "\n",
    "rfc2.fit(X_train, y_train)\n",
    "\n",
    "print(classification_report(y_test, rfc2.predict(X_test)))\n",
    "print(accuracy_score(y_test,rfc2.predict(X_test)))"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "#### Feature Importance"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 63,
   "metadata": {
    "scrolled": true
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "[None,\n",
       " None,\n",
       " None,\n",
       " None,\n",
       " None,\n",
       " None,\n",
       " None,\n",
       " None,\n",
       " None,\n",
       " None,\n",
       " None,\n",
       " None,\n",
       " None,\n",
       " None]"
      ]
     },
     "execution_count": 63,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "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\n",
      "text/plain": [
       "<matplotlib.figure.Figure at 0x1e985492390>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "dn = {'features':X.columns, 'score':rfc2.feature_importances_}\n",
    "dataframe = pd.DataFrame.from_dict(data=dn).sort_values(by='score', ascending=False)\n",
    "\n",
    "plot = sns.barplot(x='score', y='features', data=dataframe, orient='h')\n",
    "\n",
    "plot.set(xlabel='Score', ylabel='Features', \n",
    "         title='Feature Importance of Random Forest Classifier')\n",
    "\n",
    "plt.setp(plot.get_xticklabels(), rotation=45)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## SVC"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "#### Linear SVC"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 64,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Accuracy: 0.79\n",
      "             precision    recall  f1-score   support\n",
      "\n",
      "          0       0.90      0.35      0.50        55\n",
      "          1       0.78      0.98      0.87       126\n",
      "\n",
      "avg / total       0.81      0.79      0.76       181\n",
      "\n"
     ]
    }
   ],
   "source": [
    "svm_linear = SVC(kernel='linear', random_state=42)\n",
    "svm_linear.fit(X_train, y_train)\n",
    "\n",
    "print('Accuracy: %.2f' % accuracy_score(y_test, svm_linear.predict(X_test)))\n",
    "print(classification_report(y_test, svm_linear.predict(X_test)))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 65,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "0.0005\n",
      "0.850828729282\n"
     ]
    }
   ],
   "source": [
    "svm_linear_C_values =\\\n",
    "[0.0005, 0.001, 0.003, 0.005, 0.008, 0.01, 0.03, 0.05, 0.08, 0.1, 0.3, 0.33, 0.35, 0.38, 0.4, 0.5, 0.8, 1, 5, 10, 30, 50, 100]\n",
    "svm_linear_accuracy = []\n",
    "\n",
    "for c in svm_linear_C_values:\n",
    "    svm_linear2 = LogisticRegression(random_state=42,C=c)\n",
    "    svm_linear2.fit(X_train, y_train)\n",
    "    svm_linear_accuracy.append(accuracy_score(y_test, svm_linear2.predict(X_test)))\n",
    "\n",
    "svm_linear_C_value_with_best_accuracy = svm_linear_C_values[pd.Series(accuracy).idxmax()]\n",
    "print(svm_linear_C_value_with_best_accuracy)\n",
    "print(svm_linear_accuracy[pd.Series(svm_linear_accuracy).idxmax()])"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "#### Non Linear SVC"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 66,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Accuracy: 0.70\n",
      "             precision    recall  f1-score   support\n",
      "\n",
      "          0       0.00      0.00      0.00        55\n",
      "          1       0.70      1.00      0.82       126\n",
      "\n",
      "avg / total       0.48      0.70      0.57       181\n",
      "\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "C:\\Users\\Seungjun\\Anaconda3\\lib\\site-packages\\sklearn\\metrics\\classification.py:1113: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples.\n",
      "  'precision', 'predicted', average, warn_for)\n"
     ]
    }
   ],
   "source": [
    "svm_rbf = SVC(kernel='rbf', random_state=42)\n",
    "svm_rbf.fit(X_train, y_train)\n",
    "\n",
    "print('Accuracy: %.2f' % accuracy_score(y_test, svm_rbf.predict(X_test)))\n",
    "print(classification_report(y_test, svm_rbf.predict(X_test)))"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## MLP Classifier"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 67,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Accuracy: 0.56 (+/- 0.11)\n"
     ]
    }
   ],
   "source": [
    "mlp = MLPClassifier(solver='lbfgs',random_state=42)\n",
    "mlp.fit(X,y)\n",
    "scores=cross_val_score(mlp,X,y,cv=10)\n",
    "print('Accuracy: %0.2f (+/- %0.2f)' % (scores.mean(), scores.std() * 2))"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## Perceptron"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 68,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Accuracy: 0.70\n"
     ]
    }
   ],
   "source": [
    "perceptron = Perceptron(n_iter=15, eta0=0.1, random_state=0)\n",
    "perceptron.fit(X_train, y_train)\n",
    "print('Accuracy: %.2f' % accuracy_score(y_test, perceptron.predict(X_test)))"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## Wrangling Test Data for final prediction"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 69,
   "metadata": {
    "collapsed": true
   },
   "outputs": [],
   "source": [
    "test = pd.read_csv('loan_test.csv')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 70,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "<class 'pandas.core.frame.DataFrame'>\n",
      "RangeIndex: 367 entries, 0 to 366\n",
      "Data columns (total 12 columns):\n",
      "Loan_ID              367 non-null object\n",
      "Gender               356 non-null object\n",
      "Married              367 non-null object\n",
      "Dependents           357 non-null object\n",
      "Education            367 non-null object\n",
      "Self_Employed        344 non-null object\n",
      "ApplicantIncome      367 non-null int64\n",
      "CoapplicantIncome    367 non-null int64\n",
      "LoanAmount           362 non-null float64\n",
      "Loan_Amount_Term     361 non-null float64\n",
      "Credit_History       338 non-null float64\n",
      "Property_Area        367 non-null object\n",
      "dtypes: float64(3), int64(2), object(7)\n",
      "memory usage: 34.5+ KB\n"
     ]
    }
   ],
   "source": [
    "test.info()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### Filling in missing values in test data"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 71,
   "metadata": {
    "collapsed": true
   },
   "outputs": [],
   "source": [
    "test['Gender'] = test.groupby(['Married','Education','Dependents'])['Gender'].ffill().bfill()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 72,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "<class 'pandas.core.frame.DataFrame'>\n",
      "RangeIndex: 367 entries, 0 to 366\n",
      "Data columns (total 12 columns):\n",
      "Loan_ID              367 non-null object\n",
      "Gender               367 non-null object\n",
      "Married              367 non-null object\n",
      "Dependents           357 non-null object\n",
      "Education            367 non-null object\n",
      "Self_Employed        344 non-null object\n",
      "ApplicantIncome      367 non-null int64\n",
      "CoapplicantIncome    367 non-null int64\n",
      "LoanAmount           362 non-null float64\n",
      "Loan_Amount_Term     361 non-null float64\n",
      "Credit_History       338 non-null float64\n",
      "Property_Area        367 non-null object\n",
      "dtypes: float64(3), int64(2), object(7)\n",
      "memory usage: 34.5+ KB\n"
     ]
    }
   ],
   "source": [
    "test.info()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 73,
   "metadata": {
    "collapsed": true
   },
   "outputs": [],
   "source": [
    "test['Dependents'] = test.groupby(['Gender','Education','Married'])['Dependents'].ffill().bfill()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 74,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "<class 'pandas.core.frame.DataFrame'>\n",
      "RangeIndex: 367 entries, 0 to 366\n",
      "Data columns (total 12 columns):\n",
      "Loan_ID              367 non-null object\n",
      "Gender               367 non-null object\n",
      "Married              367 non-null object\n",
      "Dependents           367 non-null object\n",
      "Education            367 non-null object\n",
      "Self_Employed        344 non-null object\n",
      "ApplicantIncome      367 non-null int64\n",
      "CoapplicantIncome    367 non-null int64\n",
      "LoanAmount           362 non-null float64\n",
      "Loan_Amount_Term     361 non-null float64\n",
      "Credit_History       338 non-null float64\n",
      "Property_Area        367 non-null object\n",
      "dtypes: float64(3), int64(2), object(7)\n",
      "memory usage: 34.5+ KB\n"
     ]
    }
   ],
   "source": [
    "test.info()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 75,
   "metadata": {
    "collapsed": true
   },
   "outputs": [],
   "source": [
    "test['Self_Employed'] = test.groupby(['Gender','Education','Married','Dependents'])['Self_Employed'].ffill().bfill()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 76,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "<class 'pandas.core.frame.DataFrame'>\n",
      "RangeIndex: 367 entries, 0 to 366\n",
      "Data columns (total 12 columns):\n",
      "Loan_ID              367 non-null object\n",
      "Gender               367 non-null object\n",
      "Married              367 non-null object\n",
      "Dependents           367 non-null object\n",
      "Education            367 non-null object\n",
      "Self_Employed        367 non-null object\n",
      "ApplicantIncome      367 non-null int64\n",
      "CoapplicantIncome    367 non-null int64\n",
      "LoanAmount           362 non-null float64\n",
      "Loan_Amount_Term     361 non-null float64\n",
      "Credit_History       338 non-null float64\n",
      "Property_Area        367 non-null object\n",
      "dtypes: float64(3), int64(2), object(7)\n",
      "memory usage: 34.5+ KB\n"
     ]
    }
   ],
   "source": [
    "test.info()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 77,
   "metadata": {
    "collapsed": true
   },
   "outputs": [],
   "source": [
    "test['LoanAmount'] = test.groupby(['Gender','Education','Married','Dependents','Self_Employed']).\\\n",
    "transform(lambda x: x.fillna(x.mean()))['LoanAmount']"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 78,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "<class 'pandas.core.frame.DataFrame'>\n",
      "RangeIndex: 367 entries, 0 to 366\n",
      "Data columns (total 12 columns):\n",
      "Loan_ID              367 non-null object\n",
      "Gender               367 non-null object\n",
      "Married              367 non-null object\n",
      "Dependents           367 non-null object\n",
      "Education            367 non-null object\n",
      "Self_Employed        367 non-null object\n",
      "ApplicantIncome      367 non-null int64\n",
      "CoapplicantIncome    367 non-null int64\n",
      "LoanAmount           367 non-null float64\n",
      "Loan_Amount_Term     361 non-null float64\n",
      "Credit_History       338 non-null float64\n",
      "Property_Area        367 non-null object\n",
      "dtypes: float64(3), int64(2), object(7)\n",
      "memory usage: 34.5+ KB\n"
     ]
    }
   ],
   "source": [
    "test.info()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 79,
   "metadata": {
    "collapsed": true
   },
   "outputs": [],
   "source": [
    "test['Loan_Amount_Term'] = test.groupby(['Gender','Education','Married','Dependents','Self_Employed']).\\\n",
    "transform(lambda x: x.fillna(x.mean()))['Loan_Amount_Term']"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 80,
   "metadata": {
    "collapsed": true
   },
   "outputs": [],
   "source": [
    "test['Credit_History'] = test.groupby(['Gender','Education','Married','Dependents','Self_Employed'])['Credit_History'].ffill().bfill()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 81,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "<class 'pandas.core.frame.DataFrame'>\n",
      "RangeIndex: 367 entries, 0 to 366\n",
      "Data columns (total 12 columns):\n",
      "Loan_ID              367 non-null object\n",
      "Gender               367 non-null object\n",
      "Married              367 non-null object\n",
      "Dependents           367 non-null object\n",
      "Education            367 non-null object\n",
      "Self_Employed        367 non-null object\n",
      "ApplicantIncome      367 non-null int64\n",
      "CoapplicantIncome    367 non-null int64\n",
      "LoanAmount           367 non-null float64\n",
      "Loan_Amount_Term     367 non-null float64\n",
      "Credit_History       367 non-null float64\n",
      "Property_Area        367 non-null object\n",
      "dtypes: float64(3), int64(2), object(7)\n",
      "memory usage: 34.5+ KB\n"
     ]
    }
   ],
   "source": [
    "test.info()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### Fixing Weird Labels in Test Data"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 82,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Male      292\n",
      "Female     75\n",
      "Name: Gender, dtype: int64 \n",
      "\n",
      "Yes    233\n",
      "No     134\n",
      "Name: Married, dtype: int64 \n",
      "\n",
      "0     206\n",
      "1      61\n",
      "2      60\n",
      "3+     40\n",
      "Name: Dependents, dtype: int64 \n",
      "\n",
      "Graduate        283\n",
      "Not Graduate     84\n",
      "Name: Education, dtype: int64 \n",
      "\n",
      "No     327\n",
      "Yes     40\n",
      "Name: Self_Employed, dtype: int64 \n",
      "\n",
      "3500     6\n",
      "5000     6\n",
      "3333     5\n",
      "7500     4\n",
      "4333     4\n",
      "2500     4\n",
      "4083     3\n",
      "5833     3\n",
      "4000     3\n",
      "6500     3\n",
      "3417     3\n",
      "10000    3\n",
      "4483     2\n",
      "2157     2\n",
      "3276     2\n",
      "2400     2\n",
      "3391     2\n",
      "4500     2\n",
      "4700     2\n",
      "5333     2\n",
      "2166     2\n",
      "3250     2\n",
      "3958     2\n",
      "2600     2\n",
      "0        2\n",
      "4742     2\n",
      "2783     2\n",
      "1516     2\n",
      "1750     2\n",
      "5667     2\n",
      "        ..\n",
      "2779     1\n",
      "2914     1\n",
      "1596     1\n",
      "2917     1\n",
      "2918     1\n",
      "2964     1\n",
      "7016     1\n",
      "2922     1\n",
      "3522     1\n",
      "1900     1\n",
      "2925     1\n",
      "6478     1\n",
      "1888     1\n",
      "5314     1\n",
      "2360     1\n",
      "6958     1\n",
      "3887     1\n",
      "4912     1\n",
      "4402     1\n",
      "2356     1\n",
      "8334     1\n",
      "2362     1\n",
      "3400     1\n",
      "3900     1\n",
      "3901     1\n",
      "2366     1\n",
      "2083     1\n",
      "13633    1\n",
      "3909     1\n",
      "2875     1\n",
      "Name: ApplicantIncome, Length: 314, dtype: int64 \n",
      "\n",
      "0        156\n",
      "2000       3\n",
      "700        3\n",
      "2600       2\n",
      "1083       2\n",
      "2166       2\n",
      "1760       2\n",
      "1250       2\n",
      "2333       2\n",
      "833        2\n",
      "750        2\n",
      "2900       2\n",
      "2400       2\n",
      "910        2\n",
      "3583       2\n",
      "1517       2\n",
      "1500       2\n",
      "1497       1\n",
      "2233       1\n",
      "3077       1\n",
      "1707       1\n",
      "2730       1\n",
      "1704       1\n",
      "3750       1\n",
      "4256       1\n",
      "13983      1\n",
      "2717       1\n",
      "4246       1\n",
      "2183       1\n",
      "2708       1\n",
      "        ... \n",
      "1788       1\n",
      "14507      1\n",
      "250        1\n",
      "1542       1\n",
      "1270       1\n",
      "2291       1\n",
      "1380       1\n",
      "292        1\n",
      "296        1\n",
      "2916       1\n",
      "1350       1\n",
      "2015       1\n",
      "3422       1\n",
      "2393       1\n",
      "2529       1\n",
      "2382       1\n",
      "333        1\n",
      "3916       1\n",
      "4583       1\n",
      "3396       1\n",
      "818        1\n",
      "2370       1\n",
      "2024       1\n",
      "8000       1\n",
      "2367       1\n",
      "3900       1\n",
      "2360       1\n",
      "820        1\n",
      "1966       1\n",
      "4347       1\n",
      "Name: CoapplicantIncome, Length: 194, dtype: int64 \n",
      "\n",
      "150.000000    12\n",
      "125.000000    11\n",
      "110.000000    10\n",
      "120.000000     9\n",
      "90.000000      9\n",
      "187.000000     9\n",
      "100.000000     9\n",
      "130.000000     8\n",
      "108.000000     8\n",
      "135.000000     7\n",
      "80.000000      6\n",
      "160.000000     5\n",
      "176.000000     5\n",
      "131.000000     5\n",
      "200.000000     5\n",
      "104.000000     5\n",
      "122.000000     5\n",
      "185.000000     5\n",
      "117.000000     4\n",
      "102.000000     4\n",
      "138.000000     4\n",
      "116.000000     4\n",
      "140.000000     4\n",
      "180.000000     4\n",
      "70.000000      4\n",
      "105.000000     4\n",
      "162.000000     4\n",
      "123.000000     4\n",
      "152.000000     4\n",
      "143.000000     4\n",
      "              ..\n",
      "336.000000     1\n",
      "235.000000     1\n",
      "213.000000     1\n",
      "173.000000     1\n",
      "71.000000      1\n",
      "116.769231     1\n",
      "159.000000     1\n",
      "79.000000      1\n",
      "103.000000     1\n",
      "209.000000     1\n",
      "199.000000     1\n",
      "61.000000      1\n",
      "256.000000     1\n",
      "390.000000     1\n",
      "142.000000     1\n",
      "49.000000      1\n",
      "112.000000     1\n",
      "214.000000     1\n",
      "189.000000     1\n",
      "234.000000     1\n",
      "151.000000     1\n",
      "232.000000     1\n",
      "77.000000      1\n",
      "155.000000     1\n",
      "186.000000     1\n",
      "66.000000      1\n",
      "163.000000     1\n",
      "360.000000     1\n",
      "74.000000      1\n",
      "225.000000     1\n",
      "Name: LoanAmount, Length: 148, dtype: int64 \n",
      "\n",
      "360.000000    312\n",
      "180.000000     22\n",
      "480.000000      8\n",
      "300.000000      7\n",
      "240.000000      4\n",
      "84.000000       3\n",
      "60.000000       1\n",
      "12.000000       1\n",
      "348.888889      1\n",
      "329.345455      1\n",
      "336.000000      1\n",
      "36.000000       1\n",
      "120.000000      1\n",
      "6.000000        1\n",
      "349.622642      1\n",
      "335.294118      1\n",
      "350.000000      1\n",
      "Name: Loan_Amount_Term, dtype: int64 \n",
      "\n",
      "1.0    303\n",
      "0.0     64\n",
      "Name: Credit_History, dtype: int64 \n",
      "\n",
      "Urban        140\n",
      "Semiurban    116\n",
      "Rural        111\n",
      "Name: Property_Area, dtype: int64 \n",
      "\n"
     ]
    },
    {
     "ename": "KeyError",
     "evalue": "'Loan_Status'",
     "output_type": "error",
     "traceback": [
      "\u001b[1;31m---------------------------------------------------------------------------\u001b[0m",
      "\u001b[1;31mKeyError\u001b[0m                                  Traceback (most recent call last)",
      "\u001b[1;32mC:\\Users\\Seungjun\\Anaconda3\\lib\\site-packages\\pandas\\core\\indexes\\base.py\u001b[0m in \u001b[0;36mget_loc\u001b[1;34m(self, key, method, tolerance)\u001b[0m\n\u001b[0;32m   2392\u001b[0m             \u001b[1;32mtry\u001b[0m\u001b[1;33m:\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n\u001b[1;32m-> 2393\u001b[1;33m                 \u001b[1;32mreturn\u001b[0m \u001b[0mself\u001b[0m\u001b[1;33m.\u001b[0m\u001b[0m_engine\u001b[0m\u001b[1;33m.\u001b[0m\u001b[0mget_loc\u001b[0m\u001b[1;33m(\u001b[0m\u001b[0mkey\u001b[0m\u001b[1;33m)\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n\u001b[0m\u001b[0;32m   2394\u001b[0m             \u001b[1;32mexcept\u001b[0m \u001b[0mKeyError\u001b[0m\u001b[1;33m:\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n",
      "\u001b[1;32mpandas\\_libs\\index.pyx\u001b[0m in \u001b[0;36mpandas._libs.index.IndexEngine.get_loc (pandas\\_libs\\index.c:5239)\u001b[1;34m()\u001b[0m\n",
      "\u001b[1;32mpandas\\_libs\\index.pyx\u001b[0m in \u001b[0;36mpandas._libs.index.IndexEngine.get_loc (pandas\\_libs\\index.c:5085)\u001b[1;34m()\u001b[0m\n",
      "\u001b[1;32mpandas\\_libs\\hashtable_class_helper.pxi\u001b[0m in \u001b[0;36mpandas._libs.hashtable.PyObjectHashTable.get_item (pandas\\_libs\\hashtable.c:20405)\u001b[1;34m()\u001b[0m\n",
      "\u001b[1;32mpandas\\_libs\\hashtable_class_helper.pxi\u001b[0m in \u001b[0;36mpandas._libs.hashtable.PyObjectHashTable.get_item (pandas\\_libs\\hashtable.c:20359)\u001b[1;34m()\u001b[0m\n",
      "\u001b[1;31mKeyError\u001b[0m: 'Loan_Status'",
      "\nDuring handling of the above exception, another exception occurred:\n",
      "\u001b[1;31mKeyError\u001b[0m                                  Traceback (most recent call last)",
      "\u001b[1;32m<ipython-input-82-b503c3a32798>\u001b[0m in \u001b[0;36m<module>\u001b[1;34m()\u001b[0m\n\u001b[0;32m      3\u001b[0m        \u001b[1;34m'LoanAmount'\u001b[0m\u001b[1;33m,\u001b[0m \u001b[1;34m'Loan_Amount_Term'\u001b[0m\u001b[1;33m,\u001b[0m \u001b[1;34m'Credit_History'\u001b[0m\u001b[1;33m,\u001b[0m \u001b[1;34m'Property_Area'\u001b[0m\u001b[1;33m,\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n\u001b[0;32m      4\u001b[0m        'Loan_Status']:\n\u001b[1;32m----> 5\u001b[1;33m     \u001b[0mprint\u001b[0m\u001b[1;33m(\u001b[0m\u001b[0mtest\u001b[0m\u001b[1;33m[\u001b[0m\u001b[0mcol\u001b[0m\u001b[1;33m]\u001b[0m\u001b[1;33m.\u001b[0m\u001b[0mvalue_counts\u001b[0m\u001b[1;33m(\u001b[0m\u001b[1;33m)\u001b[0m\u001b[1;33m,\u001b[0m\u001b[1;34m'\\n'\u001b[0m\u001b[1;33m)\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n\u001b[0m",
      "\u001b[1;32mC:\\Users\\Seungjun\\Anaconda3\\lib\\site-packages\\pandas\\core\\frame.py\u001b[0m in \u001b[0;36m__getitem__\u001b[1;34m(self, key)\u001b[0m\n\u001b[0;32m   2060\u001b[0m             \u001b[1;32mreturn\u001b[0m \u001b[0mself\u001b[0m\u001b[1;33m.\u001b[0m\u001b[0m_getitem_multilevel\u001b[0m\u001b[1;33m(\u001b[0m\u001b[0mkey\u001b[0m\u001b[1;33m)\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n\u001b[0;32m   2061\u001b[0m         \u001b[1;32melse\u001b[0m\u001b[1;33m:\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n\u001b[1;32m-> 2062\u001b[1;33m             \u001b[1;32mreturn\u001b[0m \u001b[0mself\u001b[0m\u001b[1;33m.\u001b[0m\u001b[0m_getitem_column\u001b[0m\u001b[1;33m(\u001b[0m\u001b[0mkey\u001b[0m\u001b[1;33m)\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n\u001b[0m\u001b[0;32m   2063\u001b[0m \u001b[1;33m\u001b[0m\u001b[0m\n\u001b[0;32m   2064\u001b[0m     \u001b[1;32mdef\u001b[0m \u001b[0m_getitem_column\u001b[0m\u001b[1;33m(\u001b[0m\u001b[0mself\u001b[0m\u001b[1;33m,\u001b[0m \u001b[0mkey\u001b[0m\u001b[1;33m)\u001b[0m\u001b[1;33m:\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n",
      "\u001b[1;32mC:\\Users\\Seungjun\\Anaconda3\\lib\\site-packages\\pandas\\core\\frame.py\u001b[0m in \u001b[0;36m_getitem_column\u001b[1;34m(self, key)\u001b[0m\n\u001b[0;32m   2067\u001b[0m         \u001b[1;31m# get column\u001b[0m\u001b[1;33m\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n\u001b[0;32m   2068\u001b[0m         \u001b[1;32mif\u001b[0m \u001b[0mself\u001b[0m\u001b[1;33m.\u001b[0m\u001b[0mcolumns\u001b[0m\u001b[1;33m.\u001b[0m\u001b[0mis_unique\u001b[0m\u001b[1;33m:\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n\u001b[1;32m-> 2069\u001b[1;33m             \u001b[1;32mreturn\u001b[0m \u001b[0mself\u001b[0m\u001b[1;33m.\u001b[0m\u001b[0m_get_item_cache\u001b[0m\u001b[1;33m(\u001b[0m\u001b[0mkey\u001b[0m\u001b[1;33m)\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n\u001b[0m\u001b[0;32m   2070\u001b[0m \u001b[1;33m\u001b[0m\u001b[0m\n\u001b[0;32m   2071\u001b[0m         \u001b[1;31m# duplicate columns & possible reduce dimensionality\u001b[0m\u001b[1;33m\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n",
      "\u001b[1;32mC:\\Users\\Seungjun\\Anaconda3\\lib\\site-packages\\pandas\\core\\generic.py\u001b[0m in \u001b[0;36m_get_item_cache\u001b[1;34m(self, item)\u001b[0m\n\u001b[0;32m   1532\u001b[0m         \u001b[0mres\u001b[0m \u001b[1;33m=\u001b[0m \u001b[0mcache\u001b[0m\u001b[1;33m.\u001b[0m\u001b[0mget\u001b[0m\u001b[1;33m(\u001b[0m\u001b[0mitem\u001b[0m\u001b[1;33m)\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n\u001b[0;32m   1533\u001b[0m         \u001b[1;32mif\u001b[0m \u001b[0mres\u001b[0m \u001b[1;32mis\u001b[0m \u001b[1;32mNone\u001b[0m\u001b[1;33m:\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n\u001b[1;32m-> 1534\u001b[1;33m             \u001b[0mvalues\u001b[0m \u001b[1;33m=\u001b[0m \u001b[0mself\u001b[0m\u001b[1;33m.\u001b[0m\u001b[0m_data\u001b[0m\u001b[1;33m.\u001b[0m\u001b[0mget\u001b[0m\u001b[1;33m(\u001b[0m\u001b[0mitem\u001b[0m\u001b[1;33m)\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n\u001b[0m\u001b[0;32m   1535\u001b[0m             \u001b[0mres\u001b[0m \u001b[1;33m=\u001b[0m \u001b[0mself\u001b[0m\u001b[1;33m.\u001b[0m\u001b[0m_box_item_values\u001b[0m\u001b[1;33m(\u001b[0m\u001b[0mitem\u001b[0m\u001b[1;33m,\u001b[0m \u001b[0mvalues\u001b[0m\u001b[1;33m)\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n\u001b[0;32m   1536\u001b[0m             \u001b[0mcache\u001b[0m\u001b[1;33m[\u001b[0m\u001b[0mitem\u001b[0m\u001b[1;33m]\u001b[0m \u001b[1;33m=\u001b[0m \u001b[0mres\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n",
      "\u001b[1;32mC:\\Users\\Seungjun\\Anaconda3\\lib\\site-packages\\pandas\\core\\internals.py\u001b[0m in \u001b[0;36mget\u001b[1;34m(self, item, fastpath)\u001b[0m\n\u001b[0;32m   3588\u001b[0m \u001b[1;33m\u001b[0m\u001b[0m\n\u001b[0;32m   3589\u001b[0m             \u001b[1;32mif\u001b[0m \u001b[1;32mnot\u001b[0m \u001b[0misnull\u001b[0m\u001b[1;33m(\u001b[0m\u001b[0mitem\u001b[0m\u001b[1;33m)\u001b[0m\u001b[1;33m:\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n\u001b[1;32m-> 3590\u001b[1;33m                 \u001b[0mloc\u001b[0m \u001b[1;33m=\u001b[0m \u001b[0mself\u001b[0m\u001b[1;33m.\u001b[0m\u001b[0mitems\u001b[0m\u001b[1;33m.\u001b[0m\u001b[0mget_loc\u001b[0m\u001b[1;33m(\u001b[0m\u001b[0mitem\u001b[0m\u001b[1;33m)\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n\u001b[0m\u001b[0;32m   3591\u001b[0m             \u001b[1;32melse\u001b[0m\u001b[1;33m:\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n\u001b[0;32m   3592\u001b[0m                 \u001b[0mindexer\u001b[0m \u001b[1;33m=\u001b[0m \u001b[0mnp\u001b[0m\u001b[1;33m.\u001b[0m\u001b[0marange\u001b[0m\u001b[1;33m(\u001b[0m\u001b[0mlen\u001b[0m\u001b[1;33m(\u001b[0m\u001b[0mself\u001b[0m\u001b[1;33m.\u001b[0m\u001b[0mitems\u001b[0m\u001b[1;33m)\u001b[0m\u001b[1;33m)\u001b[0m\u001b[1;33m[\u001b[0m\u001b[0misnull\u001b[0m\u001b[1;33m(\u001b[0m\u001b[0mself\u001b[0m\u001b[1;33m.\u001b[0m\u001b[0mitems\u001b[0m\u001b[1;33m)\u001b[0m\u001b[1;33m]\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n",
      "\u001b[1;32mC:\\Users\\Seungjun\\Anaconda3\\lib\\site-packages\\pandas\\core\\indexes\\base.py\u001b[0m in \u001b[0;36mget_loc\u001b[1;34m(self, key, method, tolerance)\u001b[0m\n\u001b[0;32m   2393\u001b[0m                 \u001b[1;32mreturn\u001b[0m \u001b[0mself\u001b[0m\u001b[1;33m.\u001b[0m\u001b[0m_engine\u001b[0m\u001b[1;33m.\u001b[0m\u001b[0mget_loc\u001b[0m\u001b[1;33m(\u001b[0m\u001b[0mkey\u001b[0m\u001b[1;33m)\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n\u001b[0;32m   2394\u001b[0m             \u001b[1;32mexcept\u001b[0m \u001b[0mKeyError\u001b[0m\u001b[1;33m:\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n\u001b[1;32m-> 2395\u001b[1;33m                 \u001b[1;32mreturn\u001b[0m \u001b[0mself\u001b[0m\u001b[1;33m.\u001b[0m\u001b[0m_engine\u001b[0m\u001b[1;33m.\u001b[0m\u001b[0mget_loc\u001b[0m\u001b[1;33m(\u001b[0m\u001b[0mself\u001b[0m\u001b[1;33m.\u001b[0m\u001b[0m_maybe_cast_indexer\u001b[0m\u001b[1;33m(\u001b[0m\u001b[0mkey\u001b[0m\u001b[1;33m)\u001b[0m\u001b[1;33m)\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n\u001b[0m\u001b[0;32m   2396\u001b[0m \u001b[1;33m\u001b[0m\u001b[0m\n\u001b[0;32m   2397\u001b[0m         \u001b[0mindexer\u001b[0m \u001b[1;33m=\u001b[0m \u001b[0mself\u001b[0m\u001b[1;33m.\u001b[0m\u001b[0mget_indexer\u001b[0m\u001b[1;33m(\u001b[0m\u001b[1;33m[\u001b[0m\u001b[0mkey\u001b[0m\u001b[1;33m]\u001b[0m\u001b[1;33m,\u001b[0m \u001b[0mmethod\u001b[0m\u001b[1;33m=\u001b[0m\u001b[0mmethod\u001b[0m\u001b[1;33m,\u001b[0m \u001b[0mtolerance\u001b[0m\u001b[1;33m=\u001b[0m\u001b[0mtolerance\u001b[0m\u001b[1;33m)\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n",
      "\u001b[1;32mpandas\\_libs\\index.pyx\u001b[0m in \u001b[0;36mpandas._libs.index.IndexEngine.get_loc (pandas\\_libs\\index.c:5239)\u001b[1;34m()\u001b[0m\n",
      "\u001b[1;32mpandas\\_libs\\index.pyx\u001b[0m in \u001b[0;36mpandas._libs.index.IndexEngine.get_loc (pandas\\_libs\\index.c:5085)\u001b[1;34m()\u001b[0m\n",
      "\u001b[1;32mpandas\\_libs\\hashtable_class_helper.pxi\u001b[0m in \u001b[0;36mpandas._libs.hashtable.PyObjectHashTable.get_item (pandas\\_libs\\hashtable.c:20405)\u001b[1;34m()\u001b[0m\n",
      "\u001b[1;32mpandas\\_libs\\hashtable_class_helper.pxi\u001b[0m in \u001b[0;36mpandas._libs.hashtable.PyObjectHashTable.get_item (pandas\\_libs\\hashtable.c:20359)\u001b[1;34m()\u001b[0m\n",
      "\u001b[1;31mKeyError\u001b[0m: 'Loan_Status'"
     ]
    }
   ],
   "source": [
    "for col in ['Gender', 'Married', 'Dependents', 'Education',\n",
    "       'Self_Employed', 'ApplicantIncome', 'CoapplicantIncome',\n",
    "       'LoanAmount', 'Loan_Amount_Term', 'Credit_History', 'Property_Area',\n",
    "       'Loan_Status']:\n",
    "    print(test[col].value_counts(),'\\n')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 83,
   "metadata": {
    "collapsed": true
   },
   "outputs": [],
   "source": [
    "test['Dependents'] = test['Dependents'].replace({'3+':3})"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### Exploratory Data Analysis (EDA) of Test Data"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 84,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "<seaborn.axisgrid.PairGrid at 0x1e983d52f98>"
      ]
     },
     "execution_count": 84,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "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\nYII=\n",
      "text/plain": [
       "<matplotlib.figure.Figure at 0x1e98654bcf8>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "sns.pairplot(test,vars=['ApplicantIncome', 'CoapplicantIncome', 'LoanAmount','Loan_Amount_Term'])"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### Outlier Removal of Test Data"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 85,
   "metadata": {
    "collapsed": true
   },
   "outputs": [],
   "source": [
    "# test = test[test['ApplicantIncome'] < 60000]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 86,
   "metadata": {
    "collapsed": true
   },
   "outputs": [],
   "source": [
    "# test = test[test['CoapplicantIncome']< 20000]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 87,
   "metadata": {},
   "outputs": [],
   "source": [
    "# test = test[test['LoanAmount'] < 430]"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### Encoding Categorical Features of Test Data"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 88,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "<class 'pandas.core.frame.DataFrame'>\n",
      "RangeIndex: 367 entries, 0 to 366\n",
      "Data columns (total 12 columns):\n",
      "Loan_ID              367 non-null object\n",
      "Gender               367 non-null object\n",
      "Married              367 non-null object\n",
      "Dependents           367 non-null object\n",
      "Education            367 non-null object\n",
      "Self_Employed        367 non-null object\n",
      "ApplicantIncome      367 non-null int64\n",
      "CoapplicantIncome    367 non-null int64\n",
      "LoanAmount           367 non-null float64\n",
      "Loan_Amount_Term     367 non-null float64\n",
      "Credit_History       367 non-null float64\n",
      "Property_Area        367 non-null object\n",
      "dtypes: float64(3), int64(2), object(7)\n",
      "memory usage: 34.5+ KB\n"
     ]
    }
   ],
   "source": [
    "test.info()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 89,
   "metadata": {
    "collapsed": true
   },
   "outputs": [],
   "source": [
    "test['Dependents'] = test['Dependents'].astype('int64')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 90,
   "metadata": {
    "collapsed": true
   },
   "outputs": [],
   "source": [
    "encoding_needed_features_in_test_data = ['Gender','Married','Education','Self_Employed','Property_Area']\n",
    "\n",
    "\n",
    "labelEncoder = LabelEncoder()\n",
    "\n",
    "for col in encoding_needed_features_in_test_data:\n",
    "    test[col] = labelEncoder.fit_transform(test[col])"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## Making Final prediction dataframe and saving it as csv"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 91,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style>\n",
       "    .dataframe thead tr:only-child th {\n",
       "        text-align: right;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: left;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Loan_ID</th>\n",
       "      <th>Gender</th>\n",
       "      <th>Married</th>\n",
       "      <th>Dependents</th>\n",
       "      <th>Education</th>\n",
       "      <th>Self_Employed</th>\n",
       "      <th>ApplicantIncome</th>\n",
       "      <th>CoapplicantIncome</th>\n",
       "      <th>LoanAmount</th>\n",
       "      <th>Loan_Amount_Term</th>\n",
       "      <th>Credit_History</th>\n",
       "      <th>Property_Area</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>LP001015</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>5720</td>\n",
       "      <td>0</td>\n",
       "      <td>110.0</td>\n",
       "      <td>360.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>2</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>LP001022</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>3076</td>\n",
       "      <td>1500</td>\n",
       "      <td>126.0</td>\n",
       "      <td>360.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>2</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>LP001031</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>2</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>5000</td>\n",
       "      <td>1800</td>\n",
       "      <td>208.0</td>\n",
       "      <td>360.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>2</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>LP001035</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>2</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>2340</td>\n",
       "      <td>2546</td>\n",
       "      <td>100.0</td>\n",
       "      <td>360.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>2</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>LP001051</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>3276</td>\n",
       "      <td>0</td>\n",
       "      <td>78.0</td>\n",
       "      <td>360.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>2</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "    Loan_ID  Gender  Married  Dependents  Education  Self_Employed  \\\n",
       "0  LP001015       1        1           0          0              0   \n",
       "1  LP001022       1        1           1          0              0   \n",
       "2  LP001031       1        1           2          0              0   \n",
       "3  LP001035       1        1           2          0              0   \n",
       "4  LP001051       1        0           0          1              0   \n",
       "\n",
       "   ApplicantIncome  CoapplicantIncome  LoanAmount  Loan_Amount_Term  \\\n",
       "0             5720                  0       110.0             360.0   \n",
       "1             3076               1500       126.0             360.0   \n",
       "2             5000               1800       208.0             360.0   \n",
       "3             2340               2546       100.0             360.0   \n",
       "4             3276                  0        78.0             360.0   \n",
       "\n",
       "   Credit_History  Property_Area  \n",
       "0             1.0              2  \n",
       "1             1.0              2  \n",
       "2             1.0              2  \n",
       "3             1.0              2  \n",
       "4             1.0              2  "
      ]
     },
     "execution_count": 91,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "test.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 92,
   "metadata": {
    "scrolled": true
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "<class 'pandas.core.frame.DataFrame'>\n",
      "RangeIndex: 367 entries, 0 to 366\n",
      "Data columns (total 12 columns):\n",
      "Loan_ID              367 non-null object\n",
      "Gender               367 non-null int64\n",
      "Married              367 non-null int64\n",
      "Dependents           367 non-null int64\n",
      "Education            367 non-null int64\n",
      "Self_Employed        367 non-null int64\n",
      "ApplicantIncome      367 non-null int64\n",
      "CoapplicantIncome    367 non-null int64\n",
      "LoanAmount           367 non-null float64\n",
      "Loan_Amount_Term     367 non-null float64\n",
      "Credit_History       367 non-null float64\n",
      "Property_Area        367 non-null int64\n",
      "dtypes: float64(3), int64(8), object(1)\n",
      "memory usage: 34.5+ KB\n"
     ]
    }
   ],
   "source": [
    "test.info()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 93,
   "metadata": {
    "collapsed": true
   },
   "outputs": [],
   "source": [
    "test.set_index(['Loan_ID'], inplace=True)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 94,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "<class 'pandas.core.frame.DataFrame'>\n",
      "Index: 367 entries, LP001015 to LP002989\n",
      "Data columns (total 11 columns):\n",
      "Gender               367 non-null int64\n",
      "Married              367 non-null int64\n",
      "Dependents           367 non-null int64\n",
      "Education            367 non-null int64\n",
      "Self_Employed        367 non-null int64\n",
      "ApplicantIncome      367 non-null int64\n",
      "CoapplicantIncome    367 non-null int64\n",
      "LoanAmount           367 non-null float64\n",
      "Loan_Amount_Term     367 non-null float64\n",
      "Credit_History       367 non-null float64\n",
      "Property_Area        367 non-null int64\n",
      "dtypes: float64(3), int64(8)\n",
      "memory usage: 34.4+ KB\n"
     ]
    }
   ],
   "source": [
    "test.info()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 95,
   "metadata": {
    "collapsed": true
   },
   "outputs": [],
   "source": [
    "test2 = test.copy()\n",
    "test3 = test.copy()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 96,
   "metadata": {},
   "outputs": [],
   "source": [
    "test['Loan_Status'] = logis_regr1.predict(test)\n",
    "test2['Loan_Status'] = logis_regr3.predict(test2)\n",
    "test3['Loan_Status'] = rfc2.predict(test3)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 97,
   "metadata": {
    "scrolled": true
   },
   "outputs": [],
   "source": [
    "final_pred_df = test.loc[:,['Loan_Status']]\n",
    "final_pred_df2 = test2.loc[:,['Loan_Status']]\n",
    "final_pred_df3 = test3.loc[:,['Loan_Status']]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 98,
   "metadata": {},
   "outputs": [],
   "source": [
    "final_pred_df.reset_index(inplace=True)\n",
    "final_pred_df2.reset_index(inplace=True)\n",
    "final_pred_df3.reset_index(inplace=True)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 99,
   "metadata": {},
   "outputs": [],
   "source": [
    "final_pred_df['Loan_Status'] = final_pred_df['Loan_Status'].replace({1:'Y',0:'N'})\n",
    "final_pred_df2['Loan_Status'] = final_pred_df2['Loan_Status'].replace({1:'Y',0:'N'})\n",
    "final_pred_df3['Loan_Status'] = final_pred_df3['Loan_Status'].replace({1:'Y',0:'N'})"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 100,
   "metadata": {
    "collapsed": true
   },
   "outputs": [],
   "source": [
    "final_pred_df.to_csv('Seungjun-Kim-Loan-Prediction1.csv',sep=',',index=False)\n",
    "final_pred_df2.to_csv('Seungjun-Kim-Loan-Prediction2.csv',sep=',',index=False)\n",
    "final_pred_df3.to_csv('Seungjun-Kim-Loan-Prediction3.csv',sep=',',index=False)"
   ]
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.6.1"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 2
}
